{
	"id": "e9822bd72469afe785692956d65d0df9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 StakeTime;\n        //unstake block timestamp\n        uint256 UnstakeTime;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner{\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\"); //less than 1 million\n\n        ERC20(StakingToken).transfer(msg.sender, amount);\n        StakingBalances[msg.sender] -= amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xd9518acbf405d26db9b3403b6aa6b7f968267669c0140bafb8eccb3859a17dd7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29925a26cd0c857c48e1b55d699de15648a33a1f1d5d1f933445172392db4ad4\",\"dweb:/ipfs/QmUq4RcZJZN9tYSE5NgrLTy88aL47nXuokvoueZLy2io2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:4720  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:4720  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:4720  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:4720  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:4720  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xda917aea\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x64cb560c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2339:2829  function UnstakeToken(uint256 amount) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Solidity Part/contracts/staking.sol\":1412:1426  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1411:1426  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1394:1408  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1394:1426  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_56\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n    tag_31:\n        /* \"Solidity Part/contracts/staking.sol\":1556:1570  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1548:1597  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"Solidity Part/contracts/staking.sol\":1655:1669  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1645:1651  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1615:1630  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1615:1642  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1631:1641  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1615:1642  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1615:1651  StakingBalances[msg.sender] + amount */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Solidity Part/contracts/staking.sol\":1615:1669  StakingBalances[msg.sender] + amount >= 1000000*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1607:1694  require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"Solidity Part/contracts/staking.sol\":1774:1783  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1764:1770  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1734:1749  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1734:1761  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1750:1760  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1734:1761  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1734:1770  StakingBalances[msg.sender] + amount */\n      tag_76\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_76:\n        /* \"Solidity Part/contracts/staking.sol\":1734:1783  StakingBalances[msg.sender] + amount <= 10*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1726:1808  require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Solidity Part/contracts/staking.sol\":1888:1894  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1849:1861  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1843:1872  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1873:1883  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1843:1884  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"Solidity Part/contracts/staking.sol\":1843:1894  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1834:1926  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"Solidity Part/contracts/staking.sol\":1943:1955  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1937:1969  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":1970:1980  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1990:1994  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":1997:2003  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":1937:2004  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2045:2051  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2014:2029  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2014:2041  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2030:2040  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2014:2041  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2014:2051  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2061:2082  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2091:2101  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2102:2108  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2110:2125  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2127:2128  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2061:2129  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2169:2177  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2139:2153  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2139:2166  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2164:2165  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2154:2163  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2154:2165  currentID+1 */\n      tag_97\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_97:\n        /* \"Solidity Part/contracts/staking.sol\":2139:2166  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2139:2177  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2192:2252  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6\n        /* \"Solidity Part/contracts/staking.sol\":2201:2211  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2223:2224  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2213:2222  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2213:2224  currentID+1 */\n      tag_98\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"Solidity Part/contracts/staking.sol\":2226:2234  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2236:2251  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2192:2252  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_99\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2273:2274  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2262:2271  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2262:2274  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1538:2281  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_34:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_56\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"Solidity Part/contracts/staking.sol\":1320:1326  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1305:1317  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1305:1326  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2339:2829  function UnstakeToken(uint256 amount) public {... */\n    tag_45:\n        /* \"Solidity Part/contracts/staking.sol\":2433:2439  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2402:2417  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2402:2429  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2418:2428  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2402:2429  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2402:2439  StakingBalances[msg.sender] <= amount */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2394:2471  require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_88\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"Solidity Part/contracts/staking.sol\":2510:2522  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2504:2532  ERC20(StakingToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Solidity Part/contracts/staking.sol\":2533:2543  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2545:2551  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2504:2552  ERC20(StakingToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_116:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2593:2599  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2562:2577  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2562:2589  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2578:2588  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2562:2589  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2562:2599  StakingBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2609:2630  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2633:2677  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2639:2649  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2633:2677  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2650:2656  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2633:2677  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2658:2673  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2633:2677  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2675:2676  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2633:2677  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2609:2677  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2717:2725  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2687:2701  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2687:2714  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2712:2713  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2702:2711  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2702:2713  currentID+1 */\n      tag_119\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_119:\n        /* \"Solidity Part/contracts/staking.sol\":2687:2714  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2687:2725  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2740:2800  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6\n        /* \"Solidity Part/contracts/staking.sol\":2749:2759  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2771:2772  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2761:2770  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2761:2772  currentID+1 */\n      tag_120\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_120:\n        /* \"Solidity Part/contracts/staking.sol\":2774:2782  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2784:2799  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2740:2800  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_121\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2821:2822  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2810:2819  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2810:2822  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2384:2829  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2339:2829  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_56\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_136:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_138\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_140:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_142\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_144:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_146\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_148:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_150\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_147\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_40:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":665:784   */\n    tag_152:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_155\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_136\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_95:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_158\n      tag_154\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1008:1127   */\n    tag_157:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_159\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_140\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_30:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_162\n      tag_154\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1351:1470   */\n    tag_161:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_163\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_144\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_85:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_166\n      tag_154\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1697:1816   */\n    tag_165:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_167\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_148\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2075   */\n    tag_168:\n        /* \"#utility.yul\":2044:2068   */\n      tag_170\n        /* \"#utility.yul\":2062:2067   */\n      dup2\n        /* \"#utility.yul\":2044:2068   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2039:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2069   */\n      mstore\n        /* \"#utility.yul\":1967:2075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2199   */\n    tag_172:\n        /* \"#utility.yul\":2168:2192   */\n      tag_174\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2168:2192   */\n      tag_171\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2193   */\n      mstore\n        /* \"#utility.yul\":2081:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2314   */\n    tag_175:\n        /* \"#utility.yul\":2286:2307   */\n      tag_177\n        /* \"#utility.yul\":2301:2306   */\n      dup2\n        /* \"#utility.yul\":2286:2307   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2281:2284   */\n      dup3\n        /* \"#utility.yul\":2274:2308   */\n      mstore\n        /* \"#utility.yul\":2205:2314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2686   */\n    tag_179:\n        /* \"#utility.yul\":2462:2465   */\n      0x00\n        /* \"#utility.yul\":2483:2550   */\n      tag_181\n        /* \"#utility.yul\":2547:2549   */\n      0x1b\n        /* \"#utility.yul\":2542:2545   */\n      dup4\n        /* \"#utility.yul\":2483:2550   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2476:2550   */\n      swap2\n      pop\n        /* \"#utility.yul\":2559:2652   */\n      tag_183\n        /* \"#utility.yul\":2648:2651   */\n      dup3\n        /* \"#utility.yul\":2559:2652   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2672:2675   */\n      dup3\n        /* \"#utility.yul\":2668:2680   */\n      add\n        /* \"#utility.yul\":2661:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2320:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:3058   */\n    tag_185:\n        /* \"#utility.yul\":2834:2837   */\n      0x00\n        /* \"#utility.yul\":2855:2922   */\n      tag_187\n        /* \"#utility.yul\":2919:2921   */\n      0x26\n        /* \"#utility.yul\":2914:2917   */\n      dup4\n        /* \"#utility.yul\":2855:2922   */\n      tag_182\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2848:2922   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3024   */\n      tag_188\n        /* \"#utility.yul\":3020:3023   */\n      dup3\n        /* \"#utility.yul\":2931:3024   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3052   */\n      add\n        /* \"#utility.yul\":3033:3052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:3058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3430   */\n    tag_190:\n        /* \"#utility.yul\":3206:3209   */\n      0x00\n        /* \"#utility.yul\":3227:3294   */\n      tag_192\n        /* \"#utility.yul\":3291:3293   */\n      0x16\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3227:3294   */\n      tag_182\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3220:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3303:3396   */\n      tag_193\n        /* \"#utility.yul\":3392:3395   */\n      dup3\n        /* \"#utility.yul\":3303:3396   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3412:3424   */\n      add\n        /* \"#utility.yul\":3405:3424   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3802   */\n    tag_195:\n        /* \"#utility.yul\":3578:3581   */\n      0x00\n        /* \"#utility.yul\":3599:3666   */\n      tag_197\n        /* \"#utility.yul\":3663:3665   */\n      0x14\n        /* \"#utility.yul\":3658:3661   */\n      dup4\n        /* \"#utility.yul\":3599:3666   */\n      tag_182\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3592:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3768   */\n      tag_198\n        /* \"#utility.yul\":3764:3767   */\n      dup3\n        /* \"#utility.yul\":3675:3768   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3784:3796   */\n      add\n        /* \"#utility.yul\":3777:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4174   */\n    tag_200:\n        /* \"#utility.yul\":3950:3953   */\n      0x00\n        /* \"#utility.yul\":3971:4038   */\n      tag_202\n        /* \"#utility.yul\":4035:4037   */\n      0x20\n        /* \"#utility.yul\":4030:4033   */\n      dup4\n        /* \"#utility.yul\":3971:4038   */\n      tag_182\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3964:4038   */\n      swap2\n      pop\n        /* \"#utility.yul\":4047:4140   */\n      tag_203\n        /* \"#utility.yul\":4136:4139   */\n      dup3\n        /* \"#utility.yul\":4047:4140   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4156:4168   */\n      add\n        /* \"#utility.yul\":4149:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_205:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_207\n        /* \"#utility.yul\":4407:4409   */\n      0x14\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_182\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_208\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:5484   */\n    tag_210:\n        /* \"#utility.yul\":4761:4765   */\n      0x80\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4752:4766   */\n      add\n        /* \"#utility.yul\":4849:4853   */\n      0x00\n        /* \"#utility.yul\":4842:4847   */\n      dup3\n        /* \"#utility.yul\":4838:4854   */\n      add\n        /* \"#utility.yul\":4832:4855   */\n      mload\n        /* \"#utility.yul\":4868:4931   */\n      tag_212\n        /* \"#utility.yul\":4925:4929   */\n      0x00\n        /* \"#utility.yul\":4920:4923   */\n      dup6\n        /* \"#utility.yul\":4916:4930   */\n      add\n        /* \"#utility.yul\":4902:4914   */\n      dup3\n        /* \"#utility.yul\":4868:4931   */\n      tag_168\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4776:4941   */\n      pop\n        /* \"#utility.yul\":5025:5029   */\n      0x20\n        /* \"#utility.yul\":5018:5023   */\n      dup3\n        /* \"#utility.yul\":5014:5030   */\n      add\n        /* \"#utility.yul\":5008:5031   */\n      mload\n        /* \"#utility.yul\":5044:5107   */\n      tag_213\n        /* \"#utility.yul\":5101:5105   */\n      0x20\n        /* \"#utility.yul\":5096:5099   */\n      dup6\n        /* \"#utility.yul\":5092:5106   */\n      add\n        /* \"#utility.yul\":5078:5090   */\n      dup3\n        /* \"#utility.yul\":5044:5107   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4951:5117   */\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x40\n        /* \"#utility.yul\":5197:5202   */\n      dup3\n        /* \"#utility.yul\":5193:5209   */\n      add\n        /* \"#utility.yul\":5187:5210   */\n      mload\n        /* \"#utility.yul\":5223:5286   */\n      tag_215\n        /* \"#utility.yul\":5280:5284   */\n      0x40\n        /* \"#utility.yul\":5275:5278   */\n      dup6\n        /* \"#utility.yul\":5271:5285   */\n      add\n        /* \"#utility.yul\":5257:5269   */\n      dup3\n        /* \"#utility.yul\":5223:5286   */\n      tag_214\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5127:5296   */\n      pop\n        /* \"#utility.yul\":5385:5389   */\n      0x60\n        /* \"#utility.yul\":5378:5383   */\n      dup3\n        /* \"#utility.yul\":5374:5390   */\n      add\n        /* \"#utility.yul\":5368:5391   */\n      mload\n        /* \"#utility.yul\":5404:5467   */\n      tag_216\n        /* \"#utility.yul\":5461:5465   */\n      0x60\n        /* \"#utility.yul\":5456:5459   */\n      dup6\n        /* \"#utility.yul\":5452:5466   */\n      add\n        /* \"#utility.yul\":5438:5450   */\n      dup3\n        /* \"#utility.yul\":5404:5467   */\n      tag_214\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5306:5477   */\n      pop\n        /* \"#utility.yul\":4730:5484   */\n      pop\n        /* \"#utility.yul\":4620:5484   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5598   */\n    tag_214:\n        /* \"#utility.yul\":5567:5591   */\n      tag_218\n        /* \"#utility.yul\":5585:5590   */\n      dup2\n        /* \"#utility.yul\":5567:5591   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5562:5565   */\n      dup3\n        /* \"#utility.yul\":5555:5592   */\n      mstore\n        /* \"#utility.yul\":5490:5598   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5604:5722   */\n    tag_220:\n        /* \"#utility.yul\":5691:5715   */\n      tag_222\n        /* \"#utility.yul\":5709:5714   */\n      dup2\n        /* \"#utility.yul\":5691:5715   */\n      tag_219\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5686:5689   */\n      dup3\n        /* \"#utility.yul\":5679:5716   */\n      mstore\n        /* \"#utility.yul\":5604:5722   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:5950   */\n    tag_26:\n        /* \"#utility.yul\":5821:5825   */\n      0x00\n        /* \"#utility.yul\":5859:5861   */\n      0x20\n        /* \"#utility.yul\":5848:5857   */\n      dup3\n        /* \"#utility.yul\":5844:5862   */\n      add\n        /* \"#utility.yul\":5836:5862   */\n      swap1\n      pop\n        /* \"#utility.yul\":5872:5943   */\n      tag_224\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5929:5938   */\n      dup4\n        /* \"#utility.yul\":5925:5942   */\n      add\n        /* \"#utility.yul\":5916:5922   */\n      dup5\n        /* \"#utility.yul\":5872:5943   */\n      tag_172\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5728:5950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6398   */\n    tag_90:\n        /* \"#utility.yul\":6105:6109   */\n      0x00\n        /* \"#utility.yul\":6143:6145   */\n      0x60\n        /* \"#utility.yul\":6132:6141   */\n      dup3\n        /* \"#utility.yul\":6128:6146   */\n      add\n        /* \"#utility.yul\":6120:6146   */\n      swap1\n      pop\n        /* \"#utility.yul\":6156:6227   */\n      tag_226\n        /* \"#utility.yul\":6224:6225   */\n      0x00\n        /* \"#utility.yul\":6213:6222   */\n      dup4\n        /* \"#utility.yul\":6209:6226   */\n      add\n        /* \"#utility.yul\":6200:6206   */\n      dup7\n        /* \"#utility.yul\":6156:6227   */\n      tag_172\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6237:6309   */\n      tag_227\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"#utility.yul\":6294:6303   */\n      dup4\n        /* \"#utility.yul\":6290:6308   */\n      add\n        /* \"#utility.yul\":6281:6287   */\n      dup6\n        /* \"#utility.yul\":6237:6309   */\n      tag_172\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6319:6391   */\n      tag_228\n        /* \"#utility.yul\":6387:6389   */\n      0x40\n        /* \"#utility.yul\":6376:6385   */\n      dup4\n        /* \"#utility.yul\":6372:6390   */\n      add\n        /* \"#utility.yul\":6363:6369   */\n      dup5\n        /* \"#utility.yul\":6319:6391   */\n      tag_220\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5956:6398   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6404:6736   */\n    tag_112:\n        /* \"#utility.yul\":6525:6529   */\n      0x00\n        /* \"#utility.yul\":6563:6565   */\n      0x40\n        /* \"#utility.yul\":6552:6561   */\n      dup3\n        /* \"#utility.yul\":6548:6566   */\n      add\n        /* \"#utility.yul\":6540:6566   */\n      swap1\n      pop\n        /* \"#utility.yul\":6576:6647   */\n      tag_230\n        /* \"#utility.yul\":6644:6645   */\n      0x00\n        /* \"#utility.yul\":6633:6642   */\n      dup4\n        /* \"#utility.yul\":6629:6646   */\n      add\n        /* \"#utility.yul\":6620:6626   */\n      dup6\n        /* \"#utility.yul\":6576:6647   */\n      tag_172\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6657:6729   */\n      tag_231\n        /* \"#utility.yul\":6725:6727   */\n      0x20\n        /* \"#utility.yul\":6714:6723   */\n      dup4\n        /* \"#utility.yul\":6710:6728   */\n      add\n        /* \"#utility.yul\":6701:6707   */\n      dup5\n        /* \"#utility.yul\":6657:6729   */\n      tag_220\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6404:6736   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6742:7384   */\n    tag_100:\n        /* \"#utility.yul\":6963:6967   */\n      0x00\n        /* \"#utility.yul\":7001:7004   */\n      0xe0\n        /* \"#utility.yul\":6990:6999   */\n      dup3\n        /* \"#utility.yul\":6986:7005   */\n      add\n        /* \"#utility.yul\":6978:7005   */\n      swap1\n      pop\n        /* \"#utility.yul\":7015:7086   */\n      tag_233\n        /* \"#utility.yul\":7083:7084   */\n      0x00\n        /* \"#utility.yul\":7072:7081   */\n      dup4\n        /* \"#utility.yul\":7068:7085   */\n      add\n        /* \"#utility.yul\":7059:7065   */\n      dup8\n        /* \"#utility.yul\":7015:7086   */\n      tag_172\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":7096:7168   */\n      tag_234\n        /* \"#utility.yul\":7164:7166   */\n      0x20\n        /* \"#utility.yul\":7153:7162   */\n      dup4\n        /* \"#utility.yul\":7149:7167   */\n      add\n        /* \"#utility.yul\":7140:7146   */\n      dup7\n        /* \"#utility.yul\":7096:7168   */\n      tag_220\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7178:7294   */\n      tag_235\n        /* \"#utility.yul\":7290:7292   */\n      0x40\n        /* \"#utility.yul\":7279:7288   */\n      dup4\n        /* \"#utility.yul\":7275:7293   */\n      add\n        /* \"#utility.yul\":7266:7272   */\n      dup6\n        /* \"#utility.yul\":7178:7294   */\n      tag_210\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7304:7377   */\n      tag_236\n        /* \"#utility.yul\":7372:7375   */\n      0xc0\n        /* \"#utility.yul\":7361:7370   */\n      dup4\n        /* \"#utility.yul\":7357:7376   */\n      add\n        /* \"#utility.yul\":7348:7354   */\n      dup5\n        /* \"#utility.yul\":7304:7377   */\n      tag_220\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6742:7384   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7390:7600   */\n    tag_36:\n        /* \"#utility.yul\":7477:7481   */\n      0x00\n        /* \"#utility.yul\":7515:7517   */\n      0x20\n        /* \"#utility.yul\":7504:7513   */\n      dup3\n        /* \"#utility.yul\":7500:7518   */\n      add\n        /* \"#utility.yul\":7492:7518   */\n      swap1\n      pop\n        /* \"#utility.yul\":7528:7593   */\n      tag_238\n        /* \"#utility.yul\":7590:7591   */\n      0x00\n        /* \"#utility.yul\":7579:7588   */\n      dup4\n        /* \"#utility.yul\":7575:7592   */\n      add\n        /* \"#utility.yul\":7566:7572   */\n      dup5\n        /* \"#utility.yul\":7528:7593   */\n      tag_175\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7390:7600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7606:8025   */\n    tag_88:\n        /* \"#utility.yul\":7772:7776   */\n      0x00\n        /* \"#utility.yul\":7810:7812   */\n      0x20\n        /* \"#utility.yul\":7799:7808   */\n      dup3\n        /* \"#utility.yul\":7795:7813   */\n      add\n        /* \"#utility.yul\":7787:7813   */\n      swap1\n      pop\n        /* \"#utility.yul\":7859:7868   */\n      dup2\n        /* \"#utility.yul\":7853:7857   */\n      dup2\n        /* \"#utility.yul\":7849:7869   */\n      sub\n        /* \"#utility.yul\":7845:7846   */\n      0x00\n        /* \"#utility.yul\":7834:7843   */\n      dup4\n        /* \"#utility.yul\":7830:7847   */\n      add\n        /* \"#utility.yul\":7823:7870   */\n      mstore\n        /* \"#utility.yul\":7887:8018   */\n      tag_240\n        /* \"#utility.yul\":8013:8017   */\n      dup2\n        /* \"#utility.yul\":7887:8018   */\n      tag_179\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7879:8018   */\n      swap1\n      pop\n        /* \"#utility.yul\":7606:8025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8031:8450   */\n    tag_131:\n        /* \"#utility.yul\":8197:8201   */\n      0x00\n        /* \"#utility.yul\":8235:8237   */\n      0x20\n        /* \"#utility.yul\":8224:8233   */\n      dup3\n        /* \"#utility.yul\":8220:8238   */\n      add\n        /* \"#utility.yul\":8212:8238   */\n      swap1\n      pop\n        /* \"#utility.yul\":8284:8293   */\n      dup2\n        /* \"#utility.yul\":8278:8282   */\n      dup2\n        /* \"#utility.yul\":8274:8294   */\n      sub\n        /* \"#utility.yul\":8270:8271   */\n      0x00\n        /* \"#utility.yul\":8259:8268   */\n      dup4\n        /* \"#utility.yul\":8255:8272   */\n      add\n        /* \"#utility.yul\":8248:8295   */\n      mstore\n        /* \"#utility.yul\":8312:8443   */\n      tag_242\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8312:8443   */\n      tag_185\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8304:8443   */\n      swap1\n      pop\n        /* \"#utility.yul\":8031:8450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8456:8875   */\n    tag_70:\n        /* \"#utility.yul\":8622:8626   */\n      0x00\n        /* \"#utility.yul\":8660:8662   */\n      0x20\n        /* \"#utility.yul\":8649:8658   */\n      dup3\n        /* \"#utility.yul\":8645:8663   */\n      add\n        /* \"#utility.yul\":8637:8663   */\n      swap1\n      pop\n        /* \"#utility.yul\":8709:8718   */\n      dup2\n        /* \"#utility.yul\":8703:8707   */\n      dup2\n        /* \"#utility.yul\":8699:8719   */\n      sub\n        /* \"#utility.yul\":8695:8696   */\n      0x00\n        /* \"#utility.yul\":8684:8693   */\n      dup4\n        /* \"#utility.yul\":8680:8697   */\n      add\n        /* \"#utility.yul\":8673:8720   */\n      mstore\n        /* \"#utility.yul\":8737:8868   */\n      tag_244\n        /* \"#utility.yul\":8863:8867   */\n      dup2\n        /* \"#utility.yul\":8737:8868   */\n      tag_190\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8729:8868   */\n      swap1\n      pop\n        /* \"#utility.yul\":8456:8875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8881:9300   */\n    tag_75:\n        /* \"#utility.yul\":9047:9051   */\n      0x00\n        /* \"#utility.yul\":9085:9087   */\n      0x20\n        /* \"#utility.yul\":9074:9083   */\n      dup3\n        /* \"#utility.yul\":9070:9088   */\n      add\n        /* \"#utility.yul\":9062:9088   */\n      swap1\n      pop\n        /* \"#utility.yul\":9134:9143   */\n      dup2\n        /* \"#utility.yul\":9128:9132   */\n      dup2\n        /* \"#utility.yul\":9124:9144   */\n      sub\n        /* \"#utility.yul\":9120:9121   */\n      0x00\n        /* \"#utility.yul\":9109:9118   */\n      dup4\n        /* \"#utility.yul\":9105:9122   */\n      add\n        /* \"#utility.yul\":9098:9145   */\n      mstore\n        /* \"#utility.yul\":9162:9293   */\n      tag_246\n        /* \"#utility.yul\":9288:9292   */\n      dup2\n        /* \"#utility.yul\":9162:9293   */\n      tag_195\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9154:9293   */\n      swap1\n      pop\n        /* \"#utility.yul\":8881:9300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9306:9725   */\n    tag_56:\n        /* \"#utility.yul\":9472:9476   */\n      0x00\n        /* \"#utility.yul\":9510:9512   */\n      0x20\n        /* \"#utility.yul\":9499:9508   */\n      dup3\n        /* \"#utility.yul\":9495:9513   */\n      add\n        /* \"#utility.yul\":9487:9513   */\n      swap1\n      pop\n        /* \"#utility.yul\":9559:9568   */\n      dup2\n        /* \"#utility.yul\":9553:9557   */\n      dup2\n        /* \"#utility.yul\":9549:9569   */\n      sub\n        /* \"#utility.yul\":9545:9546   */\n      0x00\n        /* \"#utility.yul\":9534:9543   */\n      dup4\n        /* \"#utility.yul\":9530:9547   */\n      add\n        /* \"#utility.yul\":9523:9570   */\n      mstore\n        /* \"#utility.yul\":9587:9718   */\n      tag_248\n        /* \"#utility.yul\":9713:9717   */\n      dup2\n        /* \"#utility.yul\":9587:9718   */\n      tag_200\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9579:9718   */\n      swap1\n      pop\n        /* \"#utility.yul\":9306:9725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9731:10150   */\n    tag_79:\n        /* \"#utility.yul\":9897:9901   */\n      0x00\n        /* \"#utility.yul\":9935:9937   */\n      0x20\n        /* \"#utility.yul\":9924:9933   */\n      dup3\n        /* \"#utility.yul\":9920:9938   */\n      add\n        /* \"#utility.yul\":9912:9938   */\n      swap1\n      pop\n        /* \"#utility.yul\":9984:9993   */\n      dup2\n        /* \"#utility.yul\":9978:9982   */\n      dup2\n        /* \"#utility.yul\":9974:9994   */\n      sub\n        /* \"#utility.yul\":9970:9971   */\n      0x00\n        /* \"#utility.yul\":9959:9968   */\n      dup4\n        /* \"#utility.yul\":9955:9972   */\n      add\n        /* \"#utility.yul\":9948:9995   */\n      mstore\n        /* \"#utility.yul\":10012:10143   */\n      tag_250\n        /* \"#utility.yul\":10138:10142   */\n      dup2\n        /* \"#utility.yul\":10012:10143   */\n      tag_205\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10004:10143   */\n      swap1\n      pop\n        /* \"#utility.yul\":9731:10150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10237:10406   */\n    tag_182:\n        /* \"#utility.yul\":10321:10332   */\n      0x00\n        /* \"#utility.yul\":10355:10361   */\n      dup3\n        /* \"#utility.yul\":10350:10353   */\n      dup3\n        /* \"#utility.yul\":10343:10362   */\n      mstore\n        /* \"#utility.yul\":10395:10399   */\n      0x20\n        /* \"#utility.yul\":10390:10393   */\n      dup3\n        /* \"#utility.yul\":10386:10400   */\n      add\n        /* \"#utility.yul\":10371:10400   */\n      swap1\n      pop\n        /* \"#utility.yul\":10237:10406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10412:10717   */\n    tag_72:\n        /* \"#utility.yul\":10452:10455   */\n      0x00\n        /* \"#utility.yul\":10471:10491   */\n      tag_255\n        /* \"#utility.yul\":10489:10490   */\n      dup3\n        /* \"#utility.yul\":10471:10491   */\n      tag_219\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10466:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10505:10525   */\n      tag_256\n        /* \"#utility.yul\":10523:10524   */\n      dup4\n        /* \"#utility.yul\":10505:10525   */\n      tag_219\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":10500:10525   */\n      swap3\n      pop\n        /* \"#utility.yul\":10659:10660   */\n      dup3\n        /* \"#utility.yul\":10591:10657   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10587:10661   */\n      sub\n        /* \"#utility.yul\":10584:10585   */\n      dup3\n        /* \"#utility.yul\":10581:10662   */\n      gt\n        /* \"#utility.yul\":10578:10685   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":10665:10683   */\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10578:10685   */\n    tag_257:\n        /* \"#utility.yul\":10709:10710   */\n      dup3\n        /* \"#utility.yul\":10706:10707   */\n      dup3\n        /* \"#utility.yul\":10702:10711   */\n      add\n        /* \"#utility.yul\":10695:10711   */\n      swap1\n      pop\n        /* \"#utility.yul\":10412:10717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10723:10914   */\n    tag_118:\n        /* \"#utility.yul\":10763:10767   */\n      0x00\n        /* \"#utility.yul\":10783:10803   */\n      tag_261\n        /* \"#utility.yul\":10801:10802   */\n      dup3\n        /* \"#utility.yul\":10783:10803   */\n      tag_219\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10778:10803   */\n      swap2\n      pop\n        /* \"#utility.yul\":10817:10837   */\n      tag_262\n        /* \"#utility.yul\":10835:10836   */\n      dup4\n        /* \"#utility.yul\":10817:10837   */\n      tag_219\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10812:10837   */\n      swap3\n      pop\n        /* \"#utility.yul\":10856:10857   */\n      dup3\n        /* \"#utility.yul\":10853:10854   */\n      dup3\n        /* \"#utility.yul\":10850:10858   */\n      lt\n        /* \"#utility.yul\":10847:10881   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":10861:10879   */\n      tag_264\n      tag_259\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10847:10881   */\n    tag_263:\n        /* \"#utility.yul\":10906:10907   */\n      dup3\n        /* \"#utility.yul\":10903:10904   */\n      dup3\n        /* \"#utility.yul\":10899:10908   */\n      sub\n        /* \"#utility.yul\":10891:10908   */\n      swap1\n      pop\n        /* \"#utility.yul\":10723:10914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10920:11016   */\n    tag_171:\n        /* \"#utility.yul\":10957:10964   */\n      0x00\n        /* \"#utility.yul\":10986:11010   */\n      tag_266\n        /* \"#utility.yul\":11004:11009   */\n      dup3\n        /* \"#utility.yul\":10986:11010   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10975:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":10920:11016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11022:11112   */\n    tag_178:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11099:11104   */\n      dup2\n        /* \"#utility.yul\":11092:11105   */\n      iszero\n        /* \"#utility.yul\":11085:11106   */\n      iszero\n        /* \"#utility.yul\":11074:11106   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11118:11244   */\n    tag_267:\n        /* \"#utility.yul\":11155:11162   */\n      0x00\n        /* \"#utility.yul\":11195:11237   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11188:11193   */\n      dup3\n        /* \"#utility.yul\":11184:11238   */\n      and\n        /* \"#utility.yul\":11173:11238   */\n      swap1\n      pop\n        /* \"#utility.yul\":11118:11244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11250:11327   */\n    tag_219:\n        /* \"#utility.yul\":11287:11294   */\n      0x00\n        /* \"#utility.yul\":11316:11321   */\n      dup2\n        /* \"#utility.yul\":11305:11321   */\n      swap1\n      pop\n        /* \"#utility.yul\":11250:11327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11333:11513   */\n    tag_259:\n        /* \"#utility.yul\":11381:11458   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11378:11379   */\n      0x00\n        /* \"#utility.yul\":11371:11459   */\n      mstore\n        /* \"#utility.yul\":11478:11482   */\n      0x11\n        /* \"#utility.yul\":11475:11476   */\n      0x04\n        /* \"#utility.yul\":11468:11483   */\n      mstore\n        /* \"#utility.yul\":11502:11506   */\n      0x24\n        /* \"#utility.yul\":11499:11500   */\n      0x00\n        /* \"#utility.yul\":11492:11507   */\n      revert\n        /* \"#utility.yul\":11642:11759   */\n    tag_154:\n        /* \"#utility.yul\":11751:11752   */\n      0x00\n        /* \"#utility.yul\":11748:11749   */\n      dup1\n        /* \"#utility.yul\":11741:11753   */\n      revert\n        /* \"#utility.yul\":11765:11942   */\n    tag_184:\n        /* \"#utility.yul\":11905:11934   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":11901:11902   */\n      0x00\n        /* \"#utility.yul\":11893:11899   */\n      dup3\n        /* \"#utility.yul\":11889:11903   */\n      add\n        /* \"#utility.yul\":11882:11935   */\n      mstore\n        /* \"#utility.yul\":11765:11942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12173   */\n    tag_189:\n        /* \"#utility.yul\":12088:12122   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12084:12085   */\n      0x00\n        /* \"#utility.yul\":12076:12082   */\n      dup3\n        /* \"#utility.yul\":12072:12086   */\n      add\n        /* \"#utility.yul\":12065:12123   */\n      mstore\n        /* \"#utility.yul\":12157:12165   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12152:12154   */\n      0x20\n        /* \"#utility.yul\":12144:12150   */\n      dup3\n        /* \"#utility.yul\":12140:12155   */\n      add\n        /* \"#utility.yul\":12133:12166   */\n      mstore\n        /* \"#utility.yul\":11948:12173   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12179:12351   */\n    tag_194:\n        /* \"#utility.yul\":12319:12343   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":12315:12316   */\n      0x00\n        /* \"#utility.yul\":12307:12313   */\n      dup3\n        /* \"#utility.yul\":12303:12317   */\n      add\n        /* \"#utility.yul\":12296:12344   */\n      mstore\n        /* \"#utility.yul\":12179:12351   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12357:12527   */\n    tag_199:\n        /* \"#utility.yul\":12497:12519   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":12493:12494   */\n      0x00\n        /* \"#utility.yul\":12485:12491   */\n      dup3\n        /* \"#utility.yul\":12481:12495   */\n      add\n        /* \"#utility.yul\":12474:12520   */\n      mstore\n        /* \"#utility.yul\":12357:12527   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12533:12715   */\n    tag_204:\n        /* \"#utility.yul\":12673:12707   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12669:12670   */\n      0x00\n        /* \"#utility.yul\":12661:12667   */\n      dup3\n        /* \"#utility.yul\":12657:12671   */\n      add\n        /* \"#utility.yul\":12650:12708   */\n      mstore\n        /* \"#utility.yul\":12533:12715   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:12891   */\n    tag_209:\n        /* \"#utility.yul\":12861:12883   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":12857:12858   */\n      0x00\n        /* \"#utility.yul\":12849:12855   */\n      dup3\n        /* \"#utility.yul\":12845:12859   */\n      add\n        /* \"#utility.yul\":12838:12884   */\n      mstore\n        /* \"#utility.yul\":12721:12891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12897:13019   */\n    tag_139:\n        /* \"#utility.yul\":12970:12994   */\n      tag_282\n        /* \"#utility.yul\":12988:12993   */\n      dup2\n        /* \"#utility.yul\":12970:12994   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":12963:12968   */\n      dup2\n        /* \"#utility.yul\":12960:12995   */\n      eq\n        /* \"#utility.yul\":12950:13013   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":13009:13010   */\n      0x00\n        /* \"#utility.yul\":13006:13007   */\n      dup1\n        /* \"#utility.yul\":12999:13011   */\n      revert\n        /* \"#utility.yul\":12950:13013   */\n    tag_283:\n        /* \"#utility.yul\":12897:13019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13025:13141   */\n    tag_143:\n        /* \"#utility.yul\":13095:13116   */\n      tag_285\n        /* \"#utility.yul\":13110:13115   */\n      dup2\n        /* \"#utility.yul\":13095:13116   */\n      tag_178\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":13088:13093   */\n      dup2\n        /* \"#utility.yul\":13085:13117   */\n      eq\n        /* \"#utility.yul\":13075:13135   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":13131:13132   */\n      0x00\n        /* \"#utility.yul\":13128:13129   */\n      dup1\n        /* \"#utility.yul\":13121:13133   */\n      revert\n        /* \"#utility.yul\":13075:13135   */\n    tag_286:\n        /* \"#utility.yul\":13025:13141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13147:13269   */\n    tag_147:\n        /* \"#utility.yul\":13220:13244   */\n      tag_288\n        /* \"#utility.yul\":13238:13243   */\n      dup2\n        /* \"#utility.yul\":13220:13244   */\n      tag_219\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13213:13218   */\n      dup2\n        /* \"#utility.yul\":13210:13245   */\n      eq\n        /* \"#utility.yul\":13200:13263   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":13259:13260   */\n      0x00\n        /* \"#utility.yul\":13256:13257   */\n      dup1\n        /* \"#utility.yul\":13249:13261   */\n      revert\n        /* \"#utility.yul\":13200:13263   */\n    tag_289:\n        /* \"#utility.yul\":13147:13269   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ed78c29c8fd10dd1ed41382332d7956aa18f9151b23a4a2707d03398caea85064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113b98061012d6000396000f3fe60806040526004361061007f5760003560e01c8063da917aea1161004e578063da917aea1461010a578063db56892214610135578063df6a8a151461015e578063f2fde38b1461018757610086565b806364cb560c14610088578063715018a61461009f5780638da5cb5b146100b6578063ad95b1c6146100e157610086565b3661008657005b005b34801561009457600080fd5b5061009d6101b0565b005b3480156100ab57600080fd5b506100b4610258565b005b3480156100c257600080fd5b506100cb6102e0565b6040516100d89190610f70565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610da4565b610309565b005b34801561011657600080fd5b5061011f6107a8565b60405161012c9190611030565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610d4a565b6107bb565b005b34801561016a57600080fd5b5061018560048036038101906101809190610da4565b61087b565b005b34801561019357600080fd5b506101ae60048036038101906101a99190610d4a565b610b32565b005b6101b8610c2a565b73ffffffffffffffffffffffffffffffffffffffff166101d66102e0565b73ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610223906110cb565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610260610c2a565b73ffffffffffffffffffffffffffffffffffffffff1661027e6102e0565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906110cb565b60405180910390fd5b6102de6000610c32565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061108b565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ae919061111c565b10156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e6906110ab565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610443919061111c565b1115610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906110eb565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104e09190610f70565b60206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610dd1565b1015610571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105689061104b565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105d093929190610f8b565b602060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610d77565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610672919061111c565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546106c9919061111c565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610770919061111c565b83426040516107829493929190610feb565b60405180910390a160016002600082825461079d919061111c565b925050819055505050565b600360009054906101000a900460ff1681565b6107c3610c2a565b73ffffffffffffffffffffffffffffffffffffffff166107e16102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e906110cb565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f49061104b565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161095a929190610fc2565b602060405180830381600087803b15801561097457600080fd5b505af1158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610d77565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fc9190611172565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020016000815250905080600460006001600254610a53919061111c565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610afa919061111c565b8342604051610b0c9493929190610feb565b60405180910390a1600160026000828254610b27919061111c565b925050819055505050565b610b3a610c2a565b73ffffffffffffffffffffffffffffffffffffffff16610b586102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba5906110cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c159061106b565b60405180910390fd5b610c2781610c32565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d058161133e565b92915050565b600081519050610d1a81611355565b92915050565b600081359050610d2f8161136c565b92915050565b600081519050610d448161136c565b92915050565b600060208284031215610d6057610d5f61121d565b5b6000610d6e84828501610cf6565b91505092915050565b600060208284031215610d8d57610d8c61121d565b5b6000610d9b84828501610d0b565b91505092915050565b600060208284031215610dba57610db961121d565b5b6000610dc884828501610d20565b91505092915050565b600060208284031215610de757610de661121d565b5b6000610df584828501610d35565b91505092915050565b610e07816111a6565b82525050565b610e16816111a6565b82525050565b610e25816111b8565b82525050565b6000610e38601b8361110b565b9150610e4382611222565b602082019050919050565b6000610e5b60268361110b565b9150610e668261124b565b604082019050919050565b6000610e7e60168361110b565b9150610e898261129a565b602082019050919050565b6000610ea160148361110b565b9150610eac826112c3565b602082019050919050565b6000610ec460208361110b565b9150610ecf826112ec565b602082019050919050565b6000610ee760148361110b565b9150610ef282611315565b602082019050919050565b608082016000820151610f136000850182610dfe565b506020820151610f266020850182610f52565b506040820151610f396040850182610f52565b506060820151610f4c6060850182610f52565b50505050565b610f5b816111e4565b82525050565b610f6a816111e4565b82525050565b6000602082019050610f856000830184610e0d565b92915050565b6000606082019050610fa06000830186610e0d565b610fad6020830185610e0d565b610fba6040830184610f61565b949350505050565b6000604082019050610fd76000830185610e0d565b610fe46020830184610f61565b9392505050565b600060e0820190506110006000830187610e0d565b61100d6020830186610f61565b61101a6040830185610efd565b61102760c0830184610f61565b95945050505050565b60006020820190506110456000830184610e1c565b92915050565b6000602082019050818103600083015261106481610e2b565b9050919050565b6000602082019050818103600083015261108481610e4e565b9050919050565b600060208201905081810360008301526110a481610e71565b9050919050565b600060208201905081810360008301526110c481610e94565b9050919050565b600060208201905081810360008301526110e481610eb7565b9050919050565b6000602082019050818103600083015261110481610eda565b9050919050565b600082825260208201905092915050565b6000611127826111e4565b9150611132836111e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611167576111666111ee565b5b828201905092915050565b600061117d826111e4565b9150611188836111e4565b92508282101561119b5761119a6111ee565b5b828203905092915050565b60006111b1826111c4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b611347816111a6565b811461135257600080fd5b50565b61135e816111b8565b811461136957600080fd5b50565b611375816111e4565b811461138057600080fd5b5056fea26469706673582212209ed78c29c8fd10dd1ed41382332d7956aa18f9151b23a4a2707d03398caea85064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13B9 DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA917AEA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x187 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xE1 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x260 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27E PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE PUSH1 0x0 PUSH2 0xC32 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E6 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST GT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0xDD1 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP3 SWAP2 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB0C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP1 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0xC32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD05 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2F DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP5 DUP3 DUP6 ADD PUSH2 0xCF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9B DUP5 DUP3 DUP6 ADD PUSH2 0xD0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP5 DUP3 DUP6 ADD PUSH2 0xD20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP5 DUP3 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE16 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE38 PUSH1 0x1B DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE43 DUP3 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B PUSH1 0x26 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE66 DUP3 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7E PUSH1 0x16 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE89 DUP3 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 PUSH1 0x14 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xEAC DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC4 PUSH1 0x20 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xECF DUP3 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE7 PUSH1 0x14 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xEF2 DUP3 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xF13 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xDFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF26 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xF39 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xF4C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFAD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFBA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1000 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x100D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x101A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1027 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1045 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1064 DUP2 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1084 DUP2 PUSH2 0xE4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A4 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C4 DUP2 PUSH2 0xE94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E4 DUP2 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1132 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1167 JUMPI PUSH2 0x1166 PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117D DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1188 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x119B JUMPI PUSH2 0x119A PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B1 DUP3 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xD7 DUP13 0x29 0xC8 REVERT LT 0xDD 0x1E 0xD4 SGT DUP3 CALLER 0x2D PUSH26 0x56AA18F9151B23A4A2707D03398CAEA85064736F6C6343000807 STOP CALLER ",
							"sourceMap": "386:4334:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4334;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4334:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4334:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetStakingToken_227": {
									"entryPoint": 1979,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 777,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 1960,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 432,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_416": {
									"entryPoint": 2171,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3114,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3122,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 736,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 600,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2866,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13272:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2062:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2044:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2010:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2017:3:3",
														"type": ""
													}
												],
												"src": "1967:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2168:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2141:3:3",
														"type": ""
													}
												],
												"src": "2081:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2301:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2286:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2259:3:3",
														"type": ""
													}
												],
												"src": "2205:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "2559:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2672:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2462:3:3",
														"type": ""
													}
												],
												"src": "2320:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2834:3:3",
														"type": ""
													}
												],
												"src": "2692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3286:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3227:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3392:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "3303:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:3",
														"type": ""
													}
												],
												"src": "3064:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3599:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3764:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "3675:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3570:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:3",
														"type": ""
													}
												],
												"src": "3436:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3971:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4136:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4047:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:3",
														"type": ""
													}
												],
												"src": "3808:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4180:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:754:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4744:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4776:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4842:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4849:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4832:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4816:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4902:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4925:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4868:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4868:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4951:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4988:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5018:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5025:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5014:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5008:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4992:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5078:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5096:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5101:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5044:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5044:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5127:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5167:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5197:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5204:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5193:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5193:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5187:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5187:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5171:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5257:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5275:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5280:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5271:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5271:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5223:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5223:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5306:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5348:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5378:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5385:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5374:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5374:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5368:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5352:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5438:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5456:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5461:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5452:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5404:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5404:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4717:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4724:3:3",
														"type": ""
													}
												],
												"src": "4620:864:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5585:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5567:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5555:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5555:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5540:3:3",
														"type": ""
													}
												],
												"src": "5490:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5686:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5709:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5691:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5657:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5664:3:3",
														"type": ""
													}
												],
												"src": "5604:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5826:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5836:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5848:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5836:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5916:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5929:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5940:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5872:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5872:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5872:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5798:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5810:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5821:4:3",
														"type": ""
													}
												],
												"src": "5728:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6110:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6120:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6132:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6143:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6120:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6200:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6213:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6224:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6209:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6156:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6294:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6305:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6290:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6290:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6237:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6363:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6376:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6387:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6319:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6319:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6066:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6078:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6086:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6094:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6105:4:3",
														"type": ""
													}
												],
												"src": "5956:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6540:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6552:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6548:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6620:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6644:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6576:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6701:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6714:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6725:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6657:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6657:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6657:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6494:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6506:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6514:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6525:4:3",
														"type": ""
													}
												],
												"src": "6404:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6968:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6978:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6990:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6986:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6978:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7059:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7072:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7083:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7068:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7068:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7015:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7015:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7140:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7153:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7164:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7096:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7096:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7096:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7266:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7279:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7290:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7275:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7275:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7178:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7348:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7304:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7304:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6916:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6928:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6936:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6944:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6952:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6963:4:3",
														"type": ""
													}
												],
												"src": "6742:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7482:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7492:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7504:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7500:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7500:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7492:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7566:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7579:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7575:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7575:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7528:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7528:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7454:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7466:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7477:4:3",
														"type": ""
													}
												],
												"src": "7390:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7777:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7787:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7799:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7810:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7795:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7787:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7834:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7845:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7830:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7830:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7853:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7859:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7823:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7879:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8013:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7887:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7879:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7757:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7772:4:3",
														"type": ""
													}
												],
												"src": "7606:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8202:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8212:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8224:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8235:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8220:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8212:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8259:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8270:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8255:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8255:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8278:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8284:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8248:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8248:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8248:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8304:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8438:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8312:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8312:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8304:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8182:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8197:4:3",
														"type": ""
													}
												],
												"src": "8031:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8627:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8637:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8649:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8660:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8645:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8645:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8637:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8684:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8695:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8703:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8699:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8673:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8673:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8729:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8863:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8737:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8737:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8729:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8607:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8622:4:3",
														"type": ""
													}
												],
												"src": "8456:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9074:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9070:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9062:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9109:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9120:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9105:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9105:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9128:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9134:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9124:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9098:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9098:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9154:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9288:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9162:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9162:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9154:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9032:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9047:4:3",
														"type": ""
													}
												],
												"src": "8881:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9477:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9487:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9499:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9510:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9495:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9487:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9534:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9545:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9530:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9530:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9553:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9559:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9523:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9523:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9523:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9579:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9713:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9587:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9457:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9472:4:3",
														"type": ""
													}
												],
												"src": "9306:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9902:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9912:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9924:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9912:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9959:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9970:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9955:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9978:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9984:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9974:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9974:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9948:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10004:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10138:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10012:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10012:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10004:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9882:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9897:4:3",
														"type": ""
													}
												],
												"src": "9731:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10196:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10206:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10222:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10216:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10206:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10189:6:3",
														"type": ""
													}
												],
												"src": "10156:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10333:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10350:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10355:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10343:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10371:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10390:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10395:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10371:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10305:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10310:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10321:11:3",
														"type": ""
													}
												],
												"src": "10237:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10456:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10466:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10489:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10471:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10466:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10500:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10523:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10505:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10505:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10500:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10663:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10665:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10665:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10665:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10584:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10591:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10659:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10587:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10587:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10581:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:81:3"
															},
															"nodeType": "YulIf",
															"src": "10578:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10695:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10706:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10709:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10702:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10702:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10695:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10443:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10446:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10452:3:3",
														"type": ""
													}
												],
												"src": "10412:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10768:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10778:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10801:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10783:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10778:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10835:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10817:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10812:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10859:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10861:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10861:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10861:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10853:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10856:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10850:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10850:8:3"
															},
															"nodeType": "YulIf",
															"src": "10847:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10891:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10903:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10906:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10891:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10754:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10757:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10763:4:3",
														"type": ""
													}
												],
												"src": "10723:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10975:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11004:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10986:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10975:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10947:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10957:7:3",
														"type": ""
													}
												],
												"src": "10920:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11099:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11092:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11092:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:3",
														"type": ""
													}
												],
												"src": "11022:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11163:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11173:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11188:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11195:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11184:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11173:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11145:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11155:7:3",
														"type": ""
													}
												],
												"src": "11118:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11295:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11305:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11316:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11305:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11277:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11287:7:3",
														"type": ""
													}
												],
												"src": "11250:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11361:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11378:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11381:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11371:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11371:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11475:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11478:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11468:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11468:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11468:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11499:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11502:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11492:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11492:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11333:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11608:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11625:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11628:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11618:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11618:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11519:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11731:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11748:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11751:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11741:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11741:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11741:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11642:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11871:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11893:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11901:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11889:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11889:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11905:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11882:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11882:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11882:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11863:6:3",
														"type": ""
													}
												],
												"src": "11765:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12054:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12076:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12084:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12072:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12072:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12088:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12065:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12065:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12065:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12144:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12152:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12140:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12157:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12133:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12133:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12046:6:3",
														"type": ""
													}
												],
												"src": "11948:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12285:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12307:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12315:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12303:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12303:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12319:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12296:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12296:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12277:6:3",
														"type": ""
													}
												],
												"src": "12179:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12463:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12485:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12493:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12481:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12497:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12455:6:3",
														"type": ""
													}
												],
												"src": "12357:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12639:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12661:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12669:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12657:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12657:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12673:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12650:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12650:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12631:6:3",
														"type": ""
													}
												],
												"src": "12533:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12827:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12861:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12838:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12819:6:3",
														"type": ""
													}
												],
												"src": "12721:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12940:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12997:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13006:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13009:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12999:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12999:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12999:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12963:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12988:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12970:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12970:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12960:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12960:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12953:43:3"
															},
															"nodeType": "YulIf",
															"src": "12950:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12933:5:3",
														"type": ""
													}
												],
												"src": "12897:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13065:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13119:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13128:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13131:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13121:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13121:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13121:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13088:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13110:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13095:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13095:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13085:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13085:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:40:3"
															},
															"nodeType": "YulIf",
															"src": "13075:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13058:5:3",
														"type": ""
													}
												],
												"src": "13025:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13190:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13247:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13256:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13259:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13249:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13249:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13249:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13238:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13220:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13220:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13210:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13203:43:3"
															},
															"nodeType": "YulIf",
															"src": "13200:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13183:5:3",
														"type": ""
													}
												],
												"src": "13147:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // StakeTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // UnstakeTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c8063da917aea1161004e578063da917aea1461010a578063db56892214610135578063df6a8a151461015e578063f2fde38b1461018757610086565b806364cb560c14610088578063715018a61461009f5780638da5cb5b146100b6578063ad95b1c6146100e157610086565b3661008657005b005b34801561009457600080fd5b5061009d6101b0565b005b3480156100ab57600080fd5b506100b4610258565b005b3480156100c257600080fd5b506100cb6102e0565b6040516100d89190610f70565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610da4565b610309565b005b34801561011657600080fd5b5061011f6107a8565b60405161012c9190611030565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610d4a565b6107bb565b005b34801561016a57600080fd5b5061018560048036038101906101809190610da4565b61087b565b005b34801561019357600080fd5b506101ae60048036038101906101a99190610d4a565b610b32565b005b6101b8610c2a565b73ffffffffffffffffffffffffffffffffffffffff166101d66102e0565b73ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610223906110cb565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610260610c2a565b73ffffffffffffffffffffffffffffffffffffffff1661027e6102e0565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906110cb565b60405180910390fd5b6102de6000610c32565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f9061108b565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ae919061111c565b10156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e6906110ab565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610443919061111c565b1115610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906110eb565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104e09190610f70565b60206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610dd1565b1015610571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105689061104b565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105d093929190610f8b565b602060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610d77565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610672919061111c565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546106c9919061111c565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610770919061111c565b83426040516107829493929190610feb565b60405180910390a160016002600082825461079d919061111c565b925050819055505050565b600360009054906101000a900460ff1681565b6107c3610c2a565b73ffffffffffffffffffffffffffffffffffffffff166107e16102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e906110cb565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f49061104b565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161095a929190610fc2565b602060405180830381600087803b15801561097457600080fd5b505af1158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610d77565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109fc9190611172565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020016000815250905080600460006001600254610a53919061111c565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610afa919061111c565b8342604051610b0c9493929190610feb565b60405180910390a1600160026000828254610b27919061111c565b925050819055505050565b610b3a610c2a565b73ffffffffffffffffffffffffffffffffffffffff16610b586102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba5906110cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c159061106b565b60405180910390fd5b610c2781610c32565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d058161133e565b92915050565b600081519050610d1a81611355565b92915050565b600081359050610d2f8161136c565b92915050565b600081519050610d448161136c565b92915050565b600060208284031215610d6057610d5f61121d565b5b6000610d6e84828501610cf6565b91505092915050565b600060208284031215610d8d57610d8c61121d565b5b6000610d9b84828501610d0b565b91505092915050565b600060208284031215610dba57610db961121d565b5b6000610dc884828501610d20565b91505092915050565b600060208284031215610de757610de661121d565b5b6000610df584828501610d35565b91505092915050565b610e07816111a6565b82525050565b610e16816111a6565b82525050565b610e25816111b8565b82525050565b6000610e38601b8361110b565b9150610e4382611222565b602082019050919050565b6000610e5b60268361110b565b9150610e668261124b565b604082019050919050565b6000610e7e60168361110b565b9150610e898261129a565b602082019050919050565b6000610ea160148361110b565b9150610eac826112c3565b602082019050919050565b6000610ec460208361110b565b9150610ecf826112ec565b602082019050919050565b6000610ee760148361110b565b9150610ef282611315565b602082019050919050565b608082016000820151610f136000850182610dfe565b506020820151610f266020850182610f52565b506040820151610f396040850182610f52565b506060820151610f4c6060850182610f52565b50505050565b610f5b816111e4565b82525050565b610f6a816111e4565b82525050565b6000602082019050610f856000830184610e0d565b92915050565b6000606082019050610fa06000830186610e0d565b610fad6020830185610e0d565b610fba6040830184610f61565b949350505050565b6000604082019050610fd76000830185610e0d565b610fe46020830184610f61565b9392505050565b600060e0820190506110006000830187610e0d565b61100d6020830186610f61565b61101a6040830185610efd565b61102760c0830184610f61565b95945050505050565b60006020820190506110456000830184610e1c565b92915050565b6000602082019050818103600083015261106481610e2b565b9050919050565b6000602082019050818103600083015261108481610e4e565b9050919050565b600060208201905081810360008301526110a481610e71565b9050919050565b600060208201905081810360008301526110c481610e94565b9050919050565b600060208201905081810360008301526110e481610eb7565b9050919050565b6000602082019050818103600083015261110481610eda565b9050919050565b600082825260208201905092915050565b6000611127826111e4565b9150611132836111e4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611167576111666111ee565b5b828201905092915050565b600061117d826111e4565b9150611188836111e4565b92508282101561119b5761119a6111ee565b5b828203905092915050565b60006111b1826111c4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b611347816111a6565b811461135257600080fd5b50565b61135e816111b8565b811461136957600080fd5b50565b611375816111e4565b811461138057600080fd5b5056fea26469706673582212209ed78c29c8fd10dd1ed41382332d7956aa18f9151b23a4a2707d03398caea85064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA917AEA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x187 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xE1 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x260 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27E PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE PUSH1 0x0 PUSH2 0xC32 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E6 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST GT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0xDD1 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP3 SWAP2 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB0C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xC2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB58 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP1 PUSH2 0x106B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0xC32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD05 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0x1355 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD2F DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD44 DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP5 DUP3 DUP6 ADD PUSH2 0xCF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8D JUMPI PUSH2 0xD8C PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9B DUP5 DUP3 DUP6 ADD PUSH2 0xD0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH2 0xDB9 PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC8 DUP5 DUP3 DUP6 ADD PUSH2 0xD20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0x121D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP5 DUP3 DUP6 ADD PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE16 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE38 PUSH1 0x1B DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE43 DUP3 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B PUSH1 0x26 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE66 DUP3 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7E PUSH1 0x16 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xE89 DUP3 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 PUSH1 0x14 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xEAC DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC4 PUSH1 0x20 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xECF DUP3 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE7 PUSH1 0x14 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xEF2 DUP3 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xF13 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xDFE JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF26 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xF39 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xF4C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xF52 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xF5B DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFAD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFBA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0xFE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1000 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE0D JUMP JUMPDEST PUSH2 0x100D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x101A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x1027 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1045 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1064 DUP2 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1084 DUP2 PUSH2 0xE4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A4 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C4 DUP2 PUSH2 0xE94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E4 DUP2 PUSH2 0xEB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1132 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1167 JUMPI PUSH2 0x1166 PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117D DUP3 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1188 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x119B JUMPI PUSH2 0x119A PUSH2 0x11EE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B1 DUP3 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH2 0x11A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x135E DUP2 PUSH2 0x11B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x11E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xD7 DUP13 0x29 0xC8 REVERT LT 0xDD 0x1E 0xD4 SGT DUP3 CALLER 0x2D PUSH26 0x56AA18F9151B23A4A2707D03398CAEA85064736F6C6343000807 STOP CALLER ",
							"sourceMap": "386:4334:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:90;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2339:490;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1343:90:2;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:14:2::1;;;;;;;;;;;1411:15;1394:14;;:32;;;;;;;;;;;;;;;;;;1343:90::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1495:786:2:-;1556:14;;;;;;;;;;;1548:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1655:14;1645:6;1615:15;:27;1631:10;1615:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1607:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1774:9;1764:6;1734:15;:27;1750:10;1734:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1726:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1888:6;1849:12;;;;;;;;;;;1843:29;;;1873:10;1843:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1834:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1943:12;;;;;;;;;;;1937:32;;;1970:10;1990:4;1997:6;1937:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2045:6;2014:15;:27;2030:10;2014:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2061:21;2085:44;;;;;;;;2091:10;2085:44;;;;;;2102:6;2085:44;;;;2110:15;2085:44;;;;2127:1;2085:44;;;2061:68;;2169:8;2139:14;:27;2164:1;2154:9;;:11;;;;:::i;:::-;2139:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:60;2201:10;2223:1;2213:9;;:11;;;;:::i;:::-;2226:8;2236:15;2192:60;;;;;;;;;:::i;:::-;;;;;;;;2273:1;2262:9;;:12;;;;;;;:::i;:::-;;;;;;;;1538:743;1495:786;:::o;491:34::-;;;;;;;;;;;;;:::o;1237:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:6:2::1;1305:12;;:21;;;;;;;;;;;;;;;;;;1237:96:::0;:::o;2339:490::-;2433:6;2402:15;:27;2418:10;2402:27;;;;;;;;;;;;;;;;:37;;2394:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2510:12;;;;;;;;;;;2504:28;;;2533:10;2545:6;2504:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2593:6;2562:15;:27;2578:10;2562:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2609:21;2633:44;;;;;;;;2639:10;2633:44;;;;;;2650:6;2633:44;;;;2658:15;2633:44;;;;2675:1;2633:44;;;2609:68;;2717:8;2687:14;:27;2712:1;2702:9;;:11;;;;:::i;:::-;2687:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:60;2749:10;2771:1;2761:9;;:11;;;;:::i;:::-;2774:8;2784:15;2740:60;;;;;;;;;:::i;:::-;;;;;;;;2821:1;2810:9;;:12;;;;;;;:::i;:::-;;;;;;;;2384:445;2339:490;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:108::-;2044:24;2062:5;2044:24;:::i;:::-;2039:3;2032:37;1967:108;;:::o;2081:118::-;2168:24;2186:5;2168:24;:::i;:::-;2163:3;2156:37;2081:118;;:::o;2205:109::-;2286:21;2301:5;2286:21;:::i;:::-;2281:3;2274:34;2205:109;;:::o;2320:366::-;2462:3;2483:67;2547:2;2542:3;2483:67;:::i;:::-;2476:74;;2559:93;2648:3;2559:93;:::i;:::-;2677:2;2672:3;2668:12;2661:19;;2320:366;;;:::o;2692:::-;2834:3;2855:67;2919:2;2914:3;2855:67;:::i;:::-;2848:74;;2931:93;3020:3;2931:93;:::i;:::-;3049:2;3044:3;3040:12;3033:19;;2692:366;;;:::o;3064:::-;3206:3;3227:67;3291:2;3286:3;3227:67;:::i;:::-;3220:74;;3303:93;3392:3;3303:93;:::i;:::-;3421:2;3416:3;3412:12;3405:19;;3064:366;;;:::o;3436:::-;3578:3;3599:67;3663:2;3658:3;3599:67;:::i;:::-;3592:74;;3675:93;3764:3;3675:93;:::i;:::-;3793:2;3788:3;3784:12;3777:19;;3436:366;;;:::o;3808:::-;3950:3;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4047:93;4136:3;4047:93;:::i;:::-;4165:2;4160:3;4156:12;4149:19;;3808:366;;;:::o;4180:::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4620:864::-;4761:4;4756:3;4752:14;4849:4;4842:5;4838:16;4832:23;4868:63;4925:4;4920:3;4916:14;4902:12;4868:63;:::i;:::-;4776:165;5025:4;5018:5;5014:16;5008:23;5044:63;5101:4;5096:3;5092:14;5078:12;5044:63;:::i;:::-;4951:166;5204:4;5197:5;5193:16;5187:23;5223:63;5280:4;5275:3;5271:14;5257:12;5223:63;:::i;:::-;5127:169;5385:4;5378:5;5374:16;5368:23;5404:63;5461:4;5456:3;5452:14;5438:12;5404:63;:::i;:::-;5306:171;4730:754;4620:864;;:::o;5490:108::-;5567:24;5585:5;5567:24;:::i;:::-;5562:3;5555:37;5490:108;;:::o;5604:118::-;5691:24;5709:5;5691:24;:::i;:::-;5686:3;5679:37;5604:118;;:::o;5728:222::-;5821:4;5859:2;5848:9;5844:18;5836:26;;5872:71;5940:1;5929:9;5925:17;5916:6;5872:71;:::i;:::-;5728:222;;;;:::o;5956:442::-;6105:4;6143:2;6132:9;6128:18;6120:26;;6156:71;6224:1;6213:9;6209:17;6200:6;6156:71;:::i;:::-;6237:72;6305:2;6294:9;6290:18;6281:6;6237:72;:::i;:::-;6319;6387:2;6376:9;6372:18;6363:6;6319:72;:::i;:::-;5956:442;;;;;;:::o;6404:332::-;6525:4;6563:2;6552:9;6548:18;6540:26;;6576:71;6644:1;6633:9;6629:17;6620:6;6576:71;:::i;:::-;6657:72;6725:2;6714:9;6710:18;6701:6;6657:72;:::i;:::-;6404:332;;;;;:::o;6742:642::-;6963:4;7001:3;6990:9;6986:19;6978:27;;7015:71;7083:1;7072:9;7068:17;7059:6;7015:71;:::i;:::-;7096:72;7164:2;7153:9;7149:18;7140:6;7096:72;:::i;:::-;7178:116;7290:2;7279:9;7275:18;7266:6;7178:116;:::i;:::-;7304:73;7372:3;7361:9;7357:19;7348:6;7304:73;:::i;:::-;6742:642;;;;;;;:::o;7390:210::-;7477:4;7515:2;7504:9;7500:18;7492:26;;7528:65;7590:1;7579:9;7575:17;7566:6;7528:65;:::i;:::-;7390:210;;;;:::o;7606:419::-;7772:4;7810:2;7799:9;7795:18;7787:26;;7859:9;7853:4;7849:20;7845:1;7834:9;7830:17;7823:47;7887:131;8013:4;7887:131;:::i;:::-;7879:139;;7606:419;;;:::o;8031:::-;8197:4;8235:2;8224:9;8220:18;8212:26;;8284:9;8278:4;8274:20;8270:1;8259:9;8255:17;8248:47;8312:131;8438:4;8312:131;:::i;:::-;8304:139;;8031:419;;;:::o;8456:::-;8622:4;8660:2;8649:9;8645:18;8637:26;;8709:9;8703:4;8699:20;8695:1;8684:9;8680:17;8673:47;8737:131;8863:4;8737:131;:::i;:::-;8729:139;;8456:419;;;:::o;8881:::-;9047:4;9085:2;9074:9;9070:18;9062:26;;9134:9;9128:4;9124:20;9120:1;9109:9;9105:17;9098:47;9162:131;9288:4;9162:131;:::i;:::-;9154:139;;8881:419;;;:::o;9306:::-;9472:4;9510:2;9499:9;9495:18;9487:26;;9559:9;9553:4;9549:20;9545:1;9534:9;9530:17;9523:47;9587:131;9713:4;9587:131;:::i;:::-;9579:139;;9306:419;;;:::o;9731:::-;9897:4;9935:2;9924:9;9920:18;9912:26;;9984:9;9978:4;9974:20;9970:1;9959:9;9955:17;9948:47;10012:131;10138:4;10012:131;:::i;:::-;10004:139;;9731:419;;;:::o;10237:169::-;10321:11;10355:6;10350:3;10343:19;10395:4;10390:3;10386:14;10371:29;;10237:169;;;;:::o;10412:305::-;10452:3;10471:20;10489:1;10471:20;:::i;:::-;10466:25;;10505:20;10523:1;10505:20;:::i;:::-;10500:25;;10659:1;10591:66;10587:74;10584:1;10581:81;10578:107;;;10665:18;;:::i;:::-;10578:107;10709:1;10706;10702:9;10695:16;;10412:305;;;;:::o;10723:191::-;10763:4;10783:20;10801:1;10783:20;:::i;:::-;10778:25;;10817:20;10835:1;10817:20;:::i;:::-;10812:25;;10856:1;10853;10850:8;10847:34;;;10861:18;;:::i;:::-;10847:34;10906:1;10903;10899:9;10891:17;;10723:191;;;;:::o;10920:96::-;10957:7;10986:24;11004:5;10986:24;:::i;:::-;10975:35;;10920:96;;;:::o;11022:90::-;11056:7;11099:5;11092:13;11085:21;11074:32;;11022:90;;;:::o;11118:126::-;11155:7;11195:42;11188:5;11184:54;11173:65;;11118:126;;;:::o;11250:77::-;11287:7;11316:5;11305:16;;11250:77;;;:::o;11333:180::-;11381:77;11378:1;11371:88;11478:4;11475:1;11468:15;11502:4;11499:1;11492:15;11642:117;11751:1;11748;11741:12;11765:177;11905:29;11901:1;11893:6;11889:14;11882:53;11765:177;:::o;11948:225::-;12088:34;12084:1;12076:6;12072:14;12065:58;12157:8;12152:2;12144:6;12140:15;12133:33;11948:225;:::o;12179:172::-;12319:24;12315:1;12307:6;12303:14;12296:48;12179:172;:::o;12357:170::-;12497:22;12493:1;12485:6;12481:14;12474:46;12357:170;:::o;12533:182::-;12673:34;12669:1;12661:6;12657:14;12650:58;12533:182;:::o;12721:170::-;12861:22;12857:1;12849:6;12845:14;12838:46;12721:170;:::o;12897:122::-;12970:24;12988:5;12970:24;:::i;:::-;12963:5;12960:35;12950:63;;13009:1;13006;12999:12;12950:63;12897:122;:::o;13025:116::-;13095:21;13110:5;13095:21;:::i;:::-;13088:5;13085:32;13075:60;;13131:1;13128;13121:12;13075:60;13025:116;:::o;13147:122::-;13220:24;13238:5;13220:24;:::i;:::-;13213:5;13210:35;13200:63;;13259:1;13256;13249:12;13200:63;13147:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1009800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"SetStakingToken(address)": "26984",
								"StakeToken(uint256)": "infinite",
								"StakingEnabled()": "2471",
								"ToggleStaking()": "28791",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30397",
								"transferOwnership(address)": "30789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4720,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ed78c29c8fd10dd1ed41382332d7956aa18f9151b23a4a2707d03398caea85064736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4720,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1394,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1760,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1783,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1873,
											"end": 1883,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1894,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1970,
											"end": 1980,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6"
										},
										{
											"begin": 2201,
											"end": 2211,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2234,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2251,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2439,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2439,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2532,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2533,
											"end": 2543,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2562,
											"end": 2599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2649,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2702,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2714,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6"
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2782,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2800,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2829,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3764,
											"end": 3767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4923,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5031,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 5117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5210,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5378,
											"end": 5383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6145,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6224,
											"end": 6225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6206,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6363,
											"end": 6369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6644,
											"end": 6645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6626,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6576,
											"end": 6647,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6576,
											"end": 6647,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6576,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6725,
											"end": 6727,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6714,
											"end": 6723,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6701,
											"end": 6707,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 6657,
											"end": 6729,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6657,
											"end": 6729,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6657,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7004,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6990,
											"end": 6999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6986,
											"end": 7005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6978,
											"end": 7005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6978,
											"end": 7005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7083,
											"end": 7084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7081,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7068,
											"end": 7085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7059,
											"end": 7065,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7015,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7015,
											"end": 7086,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7015,
											"end": 7086,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 7015,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7146,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7096,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7096,
											"end": 7168,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7096,
											"end": 7168,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 7096,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7288,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7275,
											"end": 7293,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7272,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7178,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7178,
											"end": 7294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7178,
											"end": 7294,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7178,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7357,
											"end": 7376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7354,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7304,
											"end": 7377,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7304,
											"end": 7377,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 7304,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 7384,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7528,
											"end": 7593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7528,
											"end": 7593,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 7528,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7600,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7772,
											"end": 7776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7799,
											"end": 7808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7795,
											"end": 7813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7869,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7845,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7830,
											"end": 7847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7870,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8013,
											"end": 8017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7887,
											"end": 8018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7887,
											"end": 8018,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 7887,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 8018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 8018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7606,
											"end": 8025,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8197,
											"end": 8201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8237,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8224,
											"end": 8233,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8284,
											"end": 8293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8278,
											"end": 8282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8274,
											"end": 8294,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8270,
											"end": 8271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8268,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8255,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8295,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8312,
											"end": 8443,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8443,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8312,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8450,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8662,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8637,
											"end": 8663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8703,
											"end": 8707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8699,
											"end": 8719,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8693,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8680,
											"end": 8697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8673,
											"end": 8720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 8863,
											"end": 8867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 8737,
											"end": 8868,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8737,
											"end": 8868,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 8737,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8875,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9047,
											"end": 9051,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9085,
											"end": 9087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9128,
											"end": 9132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9144,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9472,
											"end": 9476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9512,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9499,
											"end": 9508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9495,
											"end": 9513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9549,
											"end": 9569,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9530,
											"end": 9547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9523,
											"end": 9570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9713,
											"end": 9717,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9587,
											"end": 9718,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9587,
											"end": 9718,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9587,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9725,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9897,
											"end": 9901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9920,
											"end": 9938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 9938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9984,
											"end": 9993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9970,
											"end": 9971,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9948,
											"end": 9995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10138,
											"end": 10142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10012,
											"end": 10143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10012,
											"end": 10143,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10012,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10150,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10350,
											"end": 10353,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10393,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10386,
											"end": 10400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10371,
											"end": 10400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10371,
											"end": 10400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10237,
											"end": 10406,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10489,
											"end": 10490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10471,
											"end": 10491,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10471,
											"end": 10491,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10471,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10523,
											"end": 10524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 10505,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10500,
											"end": 10525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10500,
											"end": 10525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10591,
											"end": 10657,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10587,
											"end": 10661,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10581,
											"end": 10662,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10685,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10578,
											"end": 10685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10578,
											"end": 10685,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 10578,
											"end": 10685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10706,
											"end": 10707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10702,
											"end": 10711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10412,
											"end": 10717,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10763,
											"end": 10767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10778,
											"end": 10803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10778,
											"end": 10803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10850,
											"end": 10858,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10903,
											"end": 10904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10891,
											"end": 10908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10891,
											"end": 10908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10957,
											"end": 10964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11004,
											"end": 11009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11099,
											"end": 11104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11092,
											"end": 11105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11085,
											"end": 11106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11237,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11188,
											"end": 11193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11184,
											"end": 11238,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11173,
											"end": 11238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11173,
											"end": 11238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11333,
											"end": 11513,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 11333,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11458,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11478,
											"end": 11482,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11475,
											"end": 11476,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11468,
											"end": 11483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11502,
											"end": 11506,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11499,
											"end": 11500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11507,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11642,
											"end": 11759,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 11642,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11751,
											"end": 11752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11942,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11765,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11905,
											"end": 11934,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 11901,
											"end": 11902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11889,
											"end": 11903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11882,
											"end": 11935,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11765,
											"end": 11942,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11948,
											"end": 12173,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11948,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12088,
											"end": 12122,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12084,
											"end": 12085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 12082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12072,
											"end": 12086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12065,
											"end": 12123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12157,
											"end": 12165,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12152,
											"end": 12154,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12144,
											"end": 12150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12140,
											"end": 12155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12166,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11948,
											"end": 12173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11948,
											"end": 12173,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12179,
											"end": 12351,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 12179,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12319,
											"end": 12343,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 12315,
											"end": 12316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12303,
											"end": 12317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12296,
											"end": 12344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12179,
											"end": 12351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12179,
											"end": 12351,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12357,
											"end": 12527,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12357,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12497,
											"end": 12519,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 12493,
											"end": 12494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12474,
											"end": 12520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12357,
											"end": 12527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12357,
											"end": 12527,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12673,
											"end": 12707,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12669,
											"end": 12670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12657,
											"end": 12671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12650,
											"end": 12708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12721,
											"end": 12891,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 12721,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12861,
											"end": 12883,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12845,
											"end": 12859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12838,
											"end": 12884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 12891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 12891,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12897,
											"end": 13019,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 12897,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 12988,
											"end": 12993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 12970,
											"end": 12994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12970,
											"end": 12994,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 12970,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12963,
											"end": 12968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12960,
											"end": 12995,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13009,
											"end": 13010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13006,
											"end": 13007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12999,
											"end": 13011,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12897,
											"end": 13019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12897,
											"end": 13019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13025,
											"end": 13141,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 13025,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 13110,
											"end": 13115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 13095,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13088,
											"end": 13093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13085,
											"end": 13117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13075,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 13075,
											"end": 13135,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13131,
											"end": 13132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13121,
											"end": 13133,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13075,
											"end": 13135,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 13075,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13025,
											"end": 13141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13025,
											"end": 13141,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13147,
											"end": 13269,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 13147,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13220,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13238,
											"end": 13243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13220,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 13220,
											"end": 13244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13220,
											"end": 13244,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13220,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13213,
											"end": 13218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13210,
											"end": 13245,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13200,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13200,
											"end": 13263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13259,
											"end": 13260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13256,
											"end": 13257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13249,
											"end": 13261,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13200,
											"end": 13263,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13200,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingEnabled()": "da917aea",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xd9518acbf405d26db9b3403b6aa6b7f968267669c0140bafb8eccb3859a17dd7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29925a26cd0c857c48e1b55d699de15648a33a1f1d5d1f933445172392db4ad4\",\"dweb:/ipfs/QmUq4RcZJZN9tYSE5NgrLTy88aL47nXuokvoueZLy2io2J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "StakeTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "UnstakeTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							417
						]
					},
					"id": 418,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 418,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 417,
							"linearizedBaseContracts": [
								417,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "StakeTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "UnstakeTime",
											"nameLocation": "782:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "774:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "774:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 417,
									"src": "532:268:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "879:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "855:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "863:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "855:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "872:5:2"
											},
											"referencedDeclaration": 176,
											"src": "872:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "956:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 417,
									"src": "930:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "938:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "930:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "947:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1021:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:2"
									},
									"scope": 417,
									"src": "994:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1056:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:2"
									},
									"scope": 417,
									"src": "1028:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1083:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1100:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1092:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1116:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1108:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1126:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1120:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1120:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1120:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1141:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1133:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:60:2"
									},
									"src": "1077:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1163:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1179:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1171:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1195:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1187:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1205:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1199:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1199:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1220:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1212:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:60:2"
									},
									"src": "1157:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1295:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1305:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1320:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1305:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1305:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1285:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1246:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1270:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1262:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:0:2"
									},
									"scope": 417,
									"src": "1237:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1384:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1394:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1411:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1412:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1394:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1394:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1375:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1375:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1352:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:2"
									},
									"scope": 417,
									"src": "1343:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1538:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1556:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1572:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1548:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1615:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1631:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1631:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1615:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1645:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1615:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1663:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1667:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1663:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1655:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1615:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1671:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1607:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1607:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1607:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1734:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1750:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1750:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1734:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1764:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1734:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1774:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1777:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1781:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1777:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1774:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1734:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1785:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1726:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1726:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1873:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1873:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1849:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1843:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1843:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1843:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1843:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1888:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1843:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1834:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1834:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1970:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1970:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1990:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$417",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$417",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1982:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1982:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1982:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1997:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1943:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1937:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1937:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1937:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1937:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2014:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2030:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2030:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2014:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2045:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2014:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2014:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2074:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2061:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2061:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2061:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2091:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2091:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2102:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2110:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2110:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2127:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2085:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2061:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2139:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2154:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2164:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2154:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2139:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2169:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2139:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2139:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2201:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2201:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2213:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2223:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2213:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2226:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2236:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2236:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2192:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2187:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2262:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2273:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2262:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2262:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1504:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1523:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1515:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:0:2"
									},
									"scope": 417,
									"src": "1495:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2384:445:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2402:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2418:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2418:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2402:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2433:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2402:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2441:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2394:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2533:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2533:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2510:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2504:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2504:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "2504:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2504:48:2"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 373,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2562:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2578:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2578:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2562:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2593:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2562:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2562:37:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2622:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2609:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 380,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2609:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2609:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2639:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2639:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2650:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 387,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2658:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2658:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2675:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 383,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2633:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:68:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2687:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 396,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2702:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2712:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2702:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2687:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2717:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2687:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2687:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2749:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2749:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2761:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2761:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2774:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2784:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2784:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2740:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2740:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "EmitStatement",
												"src": "2735:65:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2810:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2821:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2810:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2810:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2348:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2369:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2361:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:2"
									},
									"scope": 417,
									"src": "2339:490:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 418,
							"src": "386:4334:2",
							"usedErrors": []
						}
					],
					"src": "36:4684:2"
				},
				"id": 2
			}
		}
	}
}