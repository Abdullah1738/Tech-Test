{
	"id": "8a3b82f8db2b564ecdc64ff8e28f0dcd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 EventTime;\n        //stake (0) or unstake (1)\n        uint8 eventType;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n\n    //set the erc20 token address for the contract\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner {\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\"); //unstaking more than staked\n\n        ERC20(StakingToken).transfer(msg.sender, amount);\n        StakingBalances[msg.sender] -= amount;\n        Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1);\n        StakingHistory[currentID+1] = newUnstake;\n        emit Unstake(msg.sender, currentID+1, newUnstake, block.timestamp);\n        currentID+=1;\n    }\n\n    function GetStakingHistory() public view returns(Stake[] memory) {\n        Stake[] memory stakes = new Stake[](currentID-1);\n        for (uint8 i = 1; i < currentID; i++) {\n            stakes[i-1] = StakingHistory[i];\n        }\n        return stakes;\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x0e962b0aa81778cd2e909925aa0dc8666c52786d1ae3ba3059cca5db45b631bc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4f96182971adccb97821936d398c2560853cc7ae1f09746ab867e6a08c12031\",\"dweb:/ipfs/QmQUJCBHEZVByUtqtCsuAx2EirFcdVSLuDV6RQqzMRZ7n2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "GetStakingHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"internalType": "struct StakingContract.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:5044  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:5044  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:5044  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:5044  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:5044  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0adfa09\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xb0adfa09\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x64cb560c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2897:3153  function GetStakingHistory() public view returns(Stake[] memory) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"Solidity Part/contracts/staking.sol\":1462:1476  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1461:1476  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1444:1458  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1444:1476  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_62\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n    tag_32:\n        /* \"Solidity Part/contracts/staking.sol\":1606:1620  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1598:1647  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Solidity Part/contracts/staking.sol\":1705:1719  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1695:1701  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1665:1680  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1665:1692  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1681:1691  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1665:1692  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1665:1701  StakingBalances[msg.sender] + amount */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"Solidity Part/contracts/staking.sol\":1665:1719  StakingBalances[msg.sender] + amount <= 1000000*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1657:1744  require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"Solidity Part/contracts/staking.sol\":1824:1833  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1814:1820  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1784:1799  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1784:1811  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1800:1810  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1784:1811  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1784:1820  StakingBalances[msg.sender] + amount */\n      tag_82\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_82:\n        /* \"Solidity Part/contracts/staking.sol\":1784:1833  StakingBalances[msg.sender] + amount >= 10*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1776:1858  require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"Solidity Part/contracts/staking.sol\":1938:1944  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1899:1911  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1893:1922  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1923:1933  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1893:1934  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"Solidity Part/contracts/staking.sol\":1893:1944  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1884:1976  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"Solidity Part/contracts/staking.sol\":1993:2005  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1987:2019  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":2020:2030  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2040:2044  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":2047:2053  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":1987:2054  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2095:2101  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2064:2079  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2064:2091  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2080:2090  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2064:2091  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2064:2101  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_102:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2111:2132  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2141:2151  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2152:2158  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2160:2175  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2177:2178  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2111:2179  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2219:2227  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2189:2203  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2189:2216  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2214:2215  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2204:2213  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2204:2215  currentID+1 */\n      tag_103\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_103:\n        /* \"Solidity Part/contracts/staking.sol\":2189:2216  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2189:2227  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2242:2302  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b612\n        /* \"Solidity Part/contracts/staking.sol\":2251:2261  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2273:2274  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2263:2272  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2263:2274  currentID+1 */\n      tag_104\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"Solidity Part/contracts/staking.sol\":2276:2284  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2286:2301  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2242:2302  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_105\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2323:2324  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2312:2321  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2312:2324  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1588:2331  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2897:3153  function GetStakingHistory() public view returns(Stake[] memory) {... */\n    tag_35:\n        /* \"Solidity Part/contracts/staking.sol\":2946:2960  Stake[] memory */\n      0x60\n        /* \"Solidity Part/contracts/staking.sol\":2972:2993  Stake[] memory stakes */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3018:3019  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3008:3017  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3008:3019  currentID-1 */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"Solidity Part/contracts/staking.sol\":2996:3020  new Stake[](currentID-1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_111\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n    tag_111:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup2\n      0x20\n      add\n    tag_115:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_115\n      jumpi\n      swap1\n      pop\n    tag_114:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2972:3020  Stake[] memory stakes = new Stake[](currentID-1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3035:3042  uint8 i */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3045:3046  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3035:3046  uint8 i = 1 */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3030:3124  for (uint8 i = 1; i < currentID; i++) {... */\n    tag_118:\n        /* \"Solidity Part/contracts/staking.sol\":3052:3061  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3048:3049  i */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":3048:3061  i < currentID */\n      0xff\n      and\n      lt\n        /* \"Solidity Part/contracts/staking.sol\":3030:3124  for (uint8 i = 1; i < currentID; i++) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"Solidity Part/contracts/staking.sol\":3096:3110  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":3096:3113  StakingHistory[i] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3111:3112  i */\n      dup3\n        /* \"Solidity Part/contracts/staking.sol\":3096:3113  StakingHistory[i] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":3082:3113  stakes[i-1] = StakingHistory[i] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3082:3088  stakes */\n      dup3\n        /* \"Solidity Part/contracts/staking.sol\":3091:3092  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3089:3090  i */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":3089:3092  i-1 */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"Solidity Part/contracts/staking.sol\":3082:3093  stakes[i-1] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Solidity Part/contracts/staking.sol\":3082:3113  stakes[i-1] = StakingHistory[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3063:3066  i++ */\n      dup1\n      dup1\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3030:3124  for (uint8 i = 1; i < currentID; i++) {... */\n      jump(tag_118)\n    tag_119:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3140:3146  stakes */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":3133:3146  return stakes */\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2897:3153  function GetStakingHistory() public view returns(Stake[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_40:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_62\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Solidity Part/contracts/staking.sol\":1369:1375  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1354:1366  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1354:1375  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n    tag_51:\n        /* \"Solidity Part/contracts/staking.sol\":2483:2489  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2452:2467  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2452:2479  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2468:2478  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2452:2479  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2452:2489  StakingBalances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2444:2521  require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_94\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Solidity Part/contracts/staking.sol\":2567:2579  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2561:2589  ERC20(StakingToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Solidity Part/contracts/staking.sol\":2590:2600  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2602:2608  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2561:2609  ERC20(StakingToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_142:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2650:2656  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2619:2634  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2619:2646  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2635:2645  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2619:2646  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2619:2656  StakingBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2666:2689  Stake memory newUnstake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2698:2708  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2709:2715  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2717:2732  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2734:2735  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2666:2736  Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2776:2786  newUnstake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2746:2760  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2746:2773  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2771:2772  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2761:2770  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2761:2772  currentID+1 */\n      tag_144\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_144:\n        /* \"Solidity Part/contracts/staking.sol\":2746:2773  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2746:2786  StakingHistory[currentID+1] = newUnstake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2801:2862  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      0x27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24\n        /* \"Solidity Part/contracts/staking.sol\":2809:2819  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2831:2832  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2821:2830  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2821:2832  currentID+1 */\n      tag_145\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_145:\n        /* \"Solidity Part/contracts/staking.sol\":2834:2844  newUnstake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2846:2861  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2801:2862  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      mload(0x40)\n      tag_146\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2883:2884  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2872:2881  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2872:2884  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2434:2891  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_62\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_117:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_161:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_163\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_165:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_167\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_169:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_171\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_173:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_175\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_172\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_46:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":665:784   */\n    tag_177:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_180\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_161\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_101:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_183\n      tag_179\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1008:1127   */\n    tag_182:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_184\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_165\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_31:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_187\n      tag_179\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1351:1470   */\n    tag_186:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_188\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_169\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_91:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_191\n      tag_179\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1697:1816   */\n    tag_190:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_192\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_173\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2234   */\n    tag_193:\n        /* \"#utility.yul\":2080:2090   */\n      0x00\n        /* \"#utility.yul\":2101:2191   */\n      tag_195\n        /* \"#utility.yul\":2187:2190   */\n      dup4\n        /* \"#utility.yul\":2179:2185   */\n      dup4\n        /* \"#utility.yul\":2101:2191   */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2223:2227   */\n      0x80\n        /* \"#utility.yul\":2218:2221   */\n      dup4\n        /* \"#utility.yul\":2214:2228   */\n      add\n        /* \"#utility.yul\":2200:2228   */\n      swap1\n      pop\n        /* \"#utility.yul\":1967:2234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2348   */\n    tag_197:\n        /* \"#utility.yul\":2317:2341   */\n      tag_199\n        /* \"#utility.yul\":2335:2340   */\n      dup2\n        /* \"#utility.yul\":2317:2341   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2305:2342   */\n      mstore\n        /* \"#utility.yul\":2240:2348   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2354:2472   */\n    tag_201:\n        /* \"#utility.yul\":2441:2465   */\n      tag_203\n        /* \"#utility.yul\":2459:2464   */\n      dup2\n        /* \"#utility.yul\":2441:2465   */\n      tag_200\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2436:2439   */\n      dup3\n        /* \"#utility.yul\":2429:2466   */\n      mstore\n        /* \"#utility.yul\":2354:2472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2550:3458   */\n    tag_204:\n        /* \"#utility.yul\":2713:2716   */\n      0x00\n        /* \"#utility.yul\":2742:2818   */\n      tag_206\n        /* \"#utility.yul\":2812:2817   */\n      dup3\n        /* \"#utility.yul\":2742:2818   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2834:2942   */\n      tag_208\n        /* \"#utility.yul\":2935:2941   */\n      dup2\n        /* \"#utility.yul\":2930:2933   */\n      dup6\n        /* \"#utility.yul\":2834:2942   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2827:2942   */\n      swap4\n      pop\n        /* \"#utility.yul\":2966:3044   */\n      tag_210\n        /* \"#utility.yul\":3038:3043   */\n      dup4\n        /* \"#utility.yul\":2966:3044   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3067:3074   */\n      dup1\n        /* \"#utility.yul\":3098:3099   */\n      0x00\n        /* \"#utility.yul\":3083:3433   */\n    tag_212:\n        /* \"#utility.yul\":3108:3114   */\n      dup4\n        /* \"#utility.yul\":3105:3106   */\n      dup2\n        /* \"#utility.yul\":3102:3115   */\n      lt\n        /* \"#utility.yul\":3083:3433   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":3184:3190   */\n      dup2\n        /* \"#utility.yul\":3178:3191   */\n      mload\n        /* \"#utility.yul\":3211:3318   */\n      tag_215\n        /* \"#utility.yul\":3314:3317   */\n      dup9\n        /* \"#utility.yul\":3299:3312   */\n      dup3\n        /* \"#utility.yul\":3211:3318   */\n      tag_193\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3204:3318   */\n      swap8\n      pop\n        /* \"#utility.yul\":3341:3423   */\n      tag_216\n        /* \"#utility.yul\":3416:3422   */\n      dup4\n        /* \"#utility.yul\":3341:3423   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3331:3423   */\n      swap3\n      pop\n        /* \"#utility.yul\":3143:3433   */\n      pop\n        /* \"#utility.yul\":3130:3131   */\n      0x01\n        /* \"#utility.yul\":3127:3128   */\n      dup2\n        /* \"#utility.yul\":3123:3132   */\n      add\n        /* \"#utility.yul\":3118:3132   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3433   */\n      jump(tag_212)\n    tag_214:\n        /* \"#utility.yul\":3087:3101   */\n      pop\n        /* \"#utility.yul\":3449:3452   */\n      dup6\n        /* \"#utility.yul\":3442:3452   */\n      swap4\n      pop\n        /* \"#utility.yul\":2718:3458   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2550:3458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3464:3573   */\n    tag_218:\n        /* \"#utility.yul\":3545:3566   */\n      tag_220\n        /* \"#utility.yul\":3560:3565   */\n      dup2\n        /* \"#utility.yul\":3545:3566   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3540:3543   */\n      dup3\n        /* \"#utility.yul\":3533:3567   */\n      mstore\n        /* \"#utility.yul\":3464:3573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3945   */\n    tag_222:\n        /* \"#utility.yul\":3721:3724   */\n      0x00\n        /* \"#utility.yul\":3742:3809   */\n      tag_224\n        /* \"#utility.yul\":3806:3808   */\n      0x1b\n        /* \"#utility.yul\":3801:3804   */\n      dup4\n        /* \"#utility.yul\":3742:3809   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3735:3809   */\n      swap2\n      pop\n        /* \"#utility.yul\":3818:3911   */\n      tag_226\n        /* \"#utility.yul\":3907:3910   */\n      dup3\n        /* \"#utility.yul\":3818:3911   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3931:3934   */\n      dup3\n        /* \"#utility.yul\":3927:3939   */\n      add\n        /* \"#utility.yul\":3920:3939   */\n      swap1\n      pop\n        /* \"#utility.yul\":3579:3945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3951:4317   */\n    tag_228:\n        /* \"#utility.yul\":4093:4096   */\n      0x00\n        /* \"#utility.yul\":4114:4181   */\n      tag_230\n        /* \"#utility.yul\":4178:4180   */\n      0x26\n        /* \"#utility.yul\":4173:4176   */\n      dup4\n        /* \"#utility.yul\":4114:4181   */\n      tag_225\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4107:4181   */\n      swap2\n      pop\n        /* \"#utility.yul\":4190:4283   */\n      tag_231\n        /* \"#utility.yul\":4279:4282   */\n      dup3\n        /* \"#utility.yul\":4190:4283   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4308:4310   */\n      0x40\n        /* \"#utility.yul\":4303:4306   */\n      dup3\n        /* \"#utility.yul\":4299:4311   */\n      add\n        /* \"#utility.yul\":4292:4311   */\n      swap1\n      pop\n        /* \"#utility.yul\":3951:4317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4323:4689   */\n    tag_233:\n        /* \"#utility.yul\":4465:4468   */\n      0x00\n        /* \"#utility.yul\":4486:4553   */\n      tag_235\n        /* \"#utility.yul\":4550:4552   */\n      0x16\n        /* \"#utility.yul\":4545:4548   */\n      dup4\n        /* \"#utility.yul\":4486:4553   */\n      tag_225\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4479:4553   */\n      swap2\n      pop\n        /* \"#utility.yul\":4562:4655   */\n      tag_236\n        /* \"#utility.yul\":4651:4654   */\n      dup3\n        /* \"#utility.yul\":4562:4655   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4680:4682   */\n      0x20\n        /* \"#utility.yul\":4675:4678   */\n      dup3\n        /* \"#utility.yul\":4671:4683   */\n      add\n        /* \"#utility.yul\":4664:4683   */\n      swap1\n      pop\n        /* \"#utility.yul\":4323:4689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4695:5061   */\n    tag_238:\n        /* \"#utility.yul\":4837:4840   */\n      0x00\n        /* \"#utility.yul\":4858:4925   */\n      tag_240\n        /* \"#utility.yul\":4922:4924   */\n      0x14\n        /* \"#utility.yul\":4917:4920   */\n      dup4\n        /* \"#utility.yul\":4858:4925   */\n      tag_225\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4851:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4934:5027   */\n      tag_241\n        /* \"#utility.yul\":5023:5026   */\n      dup3\n        /* \"#utility.yul\":4934:5027   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5052:5054   */\n      0x20\n        /* \"#utility.yul\":5047:5050   */\n      dup3\n        /* \"#utility.yul\":5043:5055   */\n      add\n        /* \"#utility.yul\":5036:5055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4695:5061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5067:5433   */\n    tag_243:\n        /* \"#utility.yul\":5209:5212   */\n      0x00\n        /* \"#utility.yul\":5230:5297   */\n      tag_245\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5289:5292   */\n      dup4\n        /* \"#utility.yul\":5230:5297   */\n      tag_225\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5223:5297   */\n      swap2\n      pop\n        /* \"#utility.yul\":5306:5399   */\n      tag_246\n        /* \"#utility.yul\":5395:5398   */\n      dup3\n        /* \"#utility.yul\":5306:5399   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5419:5422   */\n      dup3\n        /* \"#utility.yul\":5415:5427   */\n      add\n        /* \"#utility.yul\":5408:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5805   */\n    tag_248:\n        /* \"#utility.yul\":5581:5584   */\n      0x00\n        /* \"#utility.yul\":5602:5669   */\n      tag_250\n        /* \"#utility.yul\":5666:5668   */\n      0x14\n        /* \"#utility.yul\":5661:5664   */\n      dup4\n        /* \"#utility.yul\":5602:5669   */\n      tag_225\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5595:5669   */\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5771   */\n      tag_251\n        /* \"#utility.yul\":5767:5770   */\n      dup3\n        /* \"#utility.yul\":5678:5771   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5796:5798   */\n      0x20\n        /* \"#utility.yul\":5791:5794   */\n      dup3\n        /* \"#utility.yul\":5787:5799   */\n      add\n        /* \"#utility.yul\":5780:5799   */\n      swap1\n      pop\n        /* \"#utility.yul\":5439:5805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5879:6727   */\n    tag_196:\n        /* \"#utility.yul\":6010:6014   */\n      0x80\n        /* \"#utility.yul\":6005:6008   */\n      dup3\n        /* \"#utility.yul\":6001:6015   */\n      add\n        /* \"#utility.yul\":6098:6102   */\n      0x00\n        /* \"#utility.yul\":6091:6096   */\n      dup3\n        /* \"#utility.yul\":6087:6103   */\n      add\n        /* \"#utility.yul\":6081:6104   */\n      mload\n        /* \"#utility.yul\":6117:6180   */\n      tag_254\n        /* \"#utility.yul\":6174:6178   */\n      0x00\n        /* \"#utility.yul\":6169:6172   */\n      dup6\n        /* \"#utility.yul\":6165:6179   */\n      add\n        /* \"#utility.yul\":6151:6163   */\n      dup3\n        /* \"#utility.yul\":6117:6180   */\n      tag_197\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6025:6190   */\n      pop\n        /* \"#utility.yul\":6274:6278   */\n      0x20\n        /* \"#utility.yul\":6267:6272   */\n      dup3\n        /* \"#utility.yul\":6263:6279   */\n      add\n        /* \"#utility.yul\":6257:6280   */\n      mload\n        /* \"#utility.yul\":6293:6356   */\n      tag_255\n        /* \"#utility.yul\":6350:6354   */\n      0x20\n        /* \"#utility.yul\":6345:6348   */\n      dup6\n        /* \"#utility.yul\":6341:6355   */\n      add\n        /* \"#utility.yul\":6327:6339   */\n      dup3\n        /* \"#utility.yul\":6293:6356   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6200:6366   */\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x40\n        /* \"#utility.yul\":6446:6451   */\n      dup3\n        /* \"#utility.yul\":6442:6458   */\n      add\n        /* \"#utility.yul\":6436:6459   */\n      mload\n        /* \"#utility.yul\":6472:6535   */\n      tag_257\n        /* \"#utility.yul\":6529:6533   */\n      0x40\n        /* \"#utility.yul\":6524:6527   */\n      dup6\n        /* \"#utility.yul\":6520:6534   */\n      add\n        /* \"#utility.yul\":6506:6518   */\n      dup3\n        /* \"#utility.yul\":6472:6535   */\n      tag_256\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6376:6545   */\n      pop\n        /* \"#utility.yul\":6632:6636   */\n      0x60\n        /* \"#utility.yul\":6625:6630   */\n      dup3\n        /* \"#utility.yul\":6621:6637   */\n      add\n        /* \"#utility.yul\":6615:6638   */\n      mload\n        /* \"#utility.yul\":6651:6710   */\n      tag_258\n        /* \"#utility.yul\":6704:6708   */\n      0x60\n        /* \"#utility.yul\":6699:6702   */\n      dup6\n        /* \"#utility.yul\":6695:6709   */\n      add\n        /* \"#utility.yul\":6681:6693   */\n      dup3\n        /* \"#utility.yul\":6651:6710   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6555:6720   */\n      pop\n        /* \"#utility.yul\":5979:6727   */\n      pop\n        /* \"#utility.yul\":5879:6727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:7659   */\n    tag_260:\n        /* \"#utility.yul\":6942:6946   */\n      0x80\n        /* \"#utility.yul\":6937:6940   */\n      dup3\n        /* \"#utility.yul\":6933:6947   */\n      add\n        /* \"#utility.yul\":7030:7034   */\n      0x00\n        /* \"#utility.yul\":7023:7028   */\n      dup3\n        /* \"#utility.yul\":7019:7035   */\n      add\n        /* \"#utility.yul\":7013:7036   */\n      mload\n        /* \"#utility.yul\":7049:7112   */\n      tag_262\n        /* \"#utility.yul\":7106:7110   */\n      0x00\n        /* \"#utility.yul\":7101:7104   */\n      dup6\n        /* \"#utility.yul\":7097:7111   */\n      add\n        /* \"#utility.yul\":7083:7095   */\n      dup3\n        /* \"#utility.yul\":7049:7112   */\n      tag_197\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6957:7122   */\n      pop\n        /* \"#utility.yul\":7206:7210   */\n      0x20\n        /* \"#utility.yul\":7199:7204   */\n      dup3\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7189:7212   */\n      mload\n        /* \"#utility.yul\":7225:7288   */\n      tag_263\n        /* \"#utility.yul\":7282:7286   */\n      0x20\n        /* \"#utility.yul\":7277:7280   */\n      dup6\n        /* \"#utility.yul\":7273:7287   */\n      add\n        /* \"#utility.yul\":7259:7271   */\n      dup3\n        /* \"#utility.yul\":7225:7288   */\n      tag_256\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7132:7298   */\n      pop\n        /* \"#utility.yul\":7385:7389   */\n      0x40\n        /* \"#utility.yul\":7378:7383   */\n      dup3\n        /* \"#utility.yul\":7374:7390   */\n      add\n        /* \"#utility.yul\":7368:7391   */\n      mload\n        /* \"#utility.yul\":7404:7467   */\n      tag_264\n        /* \"#utility.yul\":7461:7465   */\n      0x40\n        /* \"#utility.yul\":7456:7459   */\n      dup6\n        /* \"#utility.yul\":7452:7466   */\n      add\n        /* \"#utility.yul\":7438:7450   */\n      dup3\n        /* \"#utility.yul\":7404:7467   */\n      tag_256\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7308:7477   */\n      pop\n        /* \"#utility.yul\":7564:7568   */\n      0x60\n        /* \"#utility.yul\":7557:7562   */\n      dup3\n        /* \"#utility.yul\":7553:7569   */\n      add\n        /* \"#utility.yul\":7547:7570   */\n      mload\n        /* \"#utility.yul\":7583:7642   */\n      tag_265\n        /* \"#utility.yul\":7636:7640   */\n      0x60\n        /* \"#utility.yul\":7631:7634   */\n      dup6\n        /* \"#utility.yul\":7627:7641   */\n      add\n        /* \"#utility.yul\":7613:7625   */\n      dup3\n        /* \"#utility.yul\":7583:7642   */\n      tag_259\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7487:7652   */\n      pop\n        /* \"#utility.yul\":6911:7659   */\n      pop\n        /* \"#utility.yul\":6801:7659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7665:7773   */\n    tag_256:\n        /* \"#utility.yul\":7742:7766   */\n      tag_267\n        /* \"#utility.yul\":7760:7765   */\n      dup2\n        /* \"#utility.yul\":7742:7766   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7737:7740   */\n      dup3\n        /* \"#utility.yul\":7730:7767   */\n      mstore\n        /* \"#utility.yul\":7665:7773   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:7897   */\n    tag_269:\n        /* \"#utility.yul\":7866:7890   */\n      tag_271\n        /* \"#utility.yul\":7884:7889   */\n      dup2\n        /* \"#utility.yul\":7866:7890   */\n      tag_268\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7861:7864   */\n      dup3\n        /* \"#utility.yul\":7854:7891   */\n      mstore\n        /* \"#utility.yul\":7779:7897   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7903:8005   */\n    tag_259:\n        /* \"#utility.yul\":7976:7998   */\n      tag_273\n        /* \"#utility.yul\":7992:7997   */\n      dup2\n        /* \"#utility.yul\":7976:7998   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7971:7974   */\n      dup3\n        /* \"#utility.yul\":7964:7999   */\n      mstore\n        /* \"#utility.yul\":7903:8005   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8011:8233   */\n    tag_27:\n        /* \"#utility.yul\":8104:8108   */\n      0x00\n        /* \"#utility.yul\":8142:8144   */\n      0x20\n        /* \"#utility.yul\":8131:8140   */\n      dup3\n        /* \"#utility.yul\":8127:8145   */\n      add\n        /* \"#utility.yul\":8119:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8226   */\n      tag_276\n        /* \"#utility.yul\":8223:8224   */\n      0x00\n        /* \"#utility.yul\":8212:8221   */\n      dup4\n        /* \"#utility.yul\":8208:8225   */\n      add\n        /* \"#utility.yul\":8199:8205   */\n      dup5\n        /* \"#utility.yul\":8155:8226   */\n      tag_201\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8011:8233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8239:8681   */\n    tag_96:\n        /* \"#utility.yul\":8388:8392   */\n      0x00\n        /* \"#utility.yul\":8426:8428   */\n      0x60\n        /* \"#utility.yul\":8415:8424   */\n      dup3\n        /* \"#utility.yul\":8411:8429   */\n      add\n        /* \"#utility.yul\":8403:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8439:8510   */\n      tag_278\n        /* \"#utility.yul\":8507:8508   */\n      0x00\n        /* \"#utility.yul\":8496:8505   */\n      dup4\n        /* \"#utility.yul\":8492:8509   */\n      add\n        /* \"#utility.yul\":8483:8489   */\n      dup7\n        /* \"#utility.yul\":8439:8510   */\n      tag_201\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8520:8592   */\n      tag_279\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8577:8586   */\n      dup4\n        /* \"#utility.yul\":8573:8591   */\n      add\n        /* \"#utility.yul\":8564:8570   */\n      dup6\n        /* \"#utility.yul\":8520:8592   */\n      tag_201\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8602:8674   */\n      tag_280\n        /* \"#utility.yul\":8670:8672   */\n      0x40\n        /* \"#utility.yul\":8659:8668   */\n      dup4\n        /* \"#utility.yul\":8655:8673   */\n      add\n        /* \"#utility.yul\":8646:8652   */\n      dup5\n        /* \"#utility.yul\":8602:8674   */\n      tag_269\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8239:8681   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8687:9019   */\n    tag_138:\n        /* \"#utility.yul\":8808:8812   */\n      0x00\n        /* \"#utility.yul\":8846:8848   */\n      0x40\n        /* \"#utility.yul\":8835:8844   */\n      dup3\n        /* \"#utility.yul\":8831:8849   */\n      add\n        /* \"#utility.yul\":8823:8849   */\n      swap1\n      pop\n        /* \"#utility.yul\":8859:8930   */\n      tag_282\n        /* \"#utility.yul\":8927:8928   */\n      0x00\n        /* \"#utility.yul\":8916:8925   */\n      dup4\n        /* \"#utility.yul\":8912:8929   */\n      add\n        /* \"#utility.yul\":8903:8909   */\n      dup6\n        /* \"#utility.yul\":8859:8930   */\n      tag_201\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8940:9012   */\n      tag_283\n        /* \"#utility.yul\":9008:9010   */\n      0x20\n        /* \"#utility.yul\":8997:9006   */\n      dup4\n        /* \"#utility.yul\":8993:9011   */\n      add\n        /* \"#utility.yul\":8984:8990   */\n      dup5\n        /* \"#utility.yul\":8940:9012   */\n      tag_269\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8687:9019   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9025:9667   */\n    tag_106:\n        /* \"#utility.yul\":9246:9250   */\n      0x00\n        /* \"#utility.yul\":9284:9287   */\n      0xe0\n        /* \"#utility.yul\":9273:9282   */\n      dup3\n        /* \"#utility.yul\":9269:9288   */\n      add\n        /* \"#utility.yul\":9261:9288   */\n      swap1\n      pop\n        /* \"#utility.yul\":9298:9369   */\n      tag_285\n        /* \"#utility.yul\":9366:9367   */\n      0x00\n        /* \"#utility.yul\":9355:9364   */\n      dup4\n        /* \"#utility.yul\":9351:9368   */\n      add\n        /* \"#utility.yul\":9342:9348   */\n      dup8\n        /* \"#utility.yul\":9298:9369   */\n      tag_201\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9379:9451   */\n      tag_286\n        /* \"#utility.yul\":9447:9449   */\n      0x20\n        /* \"#utility.yul\":9436:9445   */\n      dup4\n        /* \"#utility.yul\":9432:9450   */\n      add\n        /* \"#utility.yul\":9423:9429   */\n      dup7\n        /* \"#utility.yul\":9379:9451   */\n      tag_269\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9461:9577   */\n      tag_287\n        /* \"#utility.yul\":9573:9575   */\n      0x40\n        /* \"#utility.yul\":9562:9571   */\n      dup4\n        /* \"#utility.yul\":9558:9576   */\n      add\n        /* \"#utility.yul\":9549:9555   */\n      dup6\n        /* \"#utility.yul\":9461:9577   */\n      tag_260\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9587:9660   */\n      tag_288\n        /* \"#utility.yul\":9655:9658   */\n      0xc0\n        /* \"#utility.yul\":9644:9653   */\n      dup4\n        /* \"#utility.yul\":9640:9659   */\n      add\n        /* \"#utility.yul\":9631:9637   */\n      dup5\n        /* \"#utility.yul\":9587:9660   */\n      tag_269\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9025:9667   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9673:10134   */\n    tag_37:\n        /* \"#utility.yul\":9860:9864   */\n      0x00\n        /* \"#utility.yul\":9898:9900   */\n      0x20\n        /* \"#utility.yul\":9887:9896   */\n      dup3\n        /* \"#utility.yul\":9883:9901   */\n      add\n        /* \"#utility.yul\":9875:9901   */\n      swap1\n      pop\n        /* \"#utility.yul\":9947:9956   */\n      dup2\n        /* \"#utility.yul\":9941:9945   */\n      dup2\n        /* \"#utility.yul\":9937:9957   */\n      sub\n        /* \"#utility.yul\":9933:9934   */\n      0x00\n        /* \"#utility.yul\":9922:9931   */\n      dup4\n        /* \"#utility.yul\":9918:9935   */\n      add\n        /* \"#utility.yul\":9911:9958   */\n      mstore\n        /* \"#utility.yul\":9975:10127   */\n      tag_290\n        /* \"#utility.yul\":10122:10126   */\n      dup2\n        /* \"#utility.yul\":10113:10119   */\n      dup5\n        /* \"#utility.yul\":9975:10127   */\n      tag_204\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9967:10127   */\n      swap1\n      pop\n        /* \"#utility.yul\":9673:10134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10140:10350   */\n    tag_42:\n        /* \"#utility.yul\":10227:10231   */\n      0x00\n        /* \"#utility.yul\":10265:10267   */\n      0x20\n        /* \"#utility.yul\":10254:10263   */\n      dup3\n        /* \"#utility.yul\":10250:10268   */\n      add\n        /* \"#utility.yul\":10242:10268   */\n      swap1\n      pop\n        /* \"#utility.yul\":10278:10343   */\n      tag_292\n        /* \"#utility.yul\":10340:10341   */\n      0x00\n        /* \"#utility.yul\":10329:10338   */\n      dup4\n        /* \"#utility.yul\":10325:10342   */\n      add\n        /* \"#utility.yul\":10316:10322   */\n      dup5\n        /* \"#utility.yul\":10278:10343   */\n      tag_218\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10140:10350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10356:10775   */\n    tag_94:\n        /* \"#utility.yul\":10522:10526   */\n      0x00\n        /* \"#utility.yul\":10560:10562   */\n      0x20\n        /* \"#utility.yul\":10549:10558   */\n      dup3\n        /* \"#utility.yul\":10545:10563   */\n      add\n        /* \"#utility.yul\":10537:10563   */\n      swap1\n      pop\n        /* \"#utility.yul\":10609:10618   */\n      dup2\n        /* \"#utility.yul\":10603:10607   */\n      dup2\n        /* \"#utility.yul\":10599:10619   */\n      sub\n        /* \"#utility.yul\":10595:10596   */\n      0x00\n        /* \"#utility.yul\":10584:10593   */\n      dup4\n        /* \"#utility.yul\":10580:10597   */\n      add\n        /* \"#utility.yul\":10573:10620   */\n      mstore\n        /* \"#utility.yul\":10637:10768   */\n      tag_294\n        /* \"#utility.yul\":10763:10767   */\n      dup2\n        /* \"#utility.yul\":10637:10768   */\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":10629:10768   */\n      swap1\n      pop\n        /* \"#utility.yul\":10356:10775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10781:11200   */\n    tag_156:\n        /* \"#utility.yul\":10947:10951   */\n      0x00\n        /* \"#utility.yul\":10985:10987   */\n      0x20\n        /* \"#utility.yul\":10974:10983   */\n      dup3\n        /* \"#utility.yul\":10970:10988   */\n      add\n        /* \"#utility.yul\":10962:10988   */\n      swap1\n      pop\n        /* \"#utility.yul\":11034:11043   */\n      dup2\n        /* \"#utility.yul\":11028:11032   */\n      dup2\n        /* \"#utility.yul\":11024:11044   */\n      sub\n        /* \"#utility.yul\":11020:11021   */\n      0x00\n        /* \"#utility.yul\":11009:11018   */\n      dup4\n        /* \"#utility.yul\":11005:11022   */\n      add\n        /* \"#utility.yul\":10998:11045   */\n      mstore\n        /* \"#utility.yul\":11062:11193   */\n      tag_296\n        /* \"#utility.yul\":11188:11192   */\n      dup2\n        /* \"#utility.yul\":11062:11193   */\n      tag_228\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11054:11193   */\n      swap1\n      pop\n        /* \"#utility.yul\":10781:11200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11206:11625   */\n    tag_76:\n        /* \"#utility.yul\":11372:11376   */\n      0x00\n        /* \"#utility.yul\":11410:11412   */\n      0x20\n        /* \"#utility.yul\":11399:11408   */\n      dup3\n        /* \"#utility.yul\":11395:11413   */\n      add\n        /* \"#utility.yul\":11387:11413   */\n      swap1\n      pop\n        /* \"#utility.yul\":11459:11468   */\n      dup2\n        /* \"#utility.yul\":11453:11457   */\n      dup2\n        /* \"#utility.yul\":11449:11469   */\n      sub\n        /* \"#utility.yul\":11445:11446   */\n      0x00\n        /* \"#utility.yul\":11434:11443   */\n      dup4\n        /* \"#utility.yul\":11430:11447   */\n      add\n        /* \"#utility.yul\":11423:11470   */\n      mstore\n        /* \"#utility.yul\":11487:11618   */\n      tag_298\n        /* \"#utility.yul\":11613:11617   */\n      dup2\n        /* \"#utility.yul\":11487:11618   */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11479:11618   */\n      swap1\n      pop\n        /* \"#utility.yul\":11206:11625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11631:12050   */\n    tag_81:\n        /* \"#utility.yul\":11797:11801   */\n      0x00\n        /* \"#utility.yul\":11835:11837   */\n      0x20\n        /* \"#utility.yul\":11824:11833   */\n      dup3\n        /* \"#utility.yul\":11820:11838   */\n      add\n        /* \"#utility.yul\":11812:11838   */\n      swap1\n      pop\n        /* \"#utility.yul\":11884:11893   */\n      dup2\n        /* \"#utility.yul\":11878:11882   */\n      dup2\n        /* \"#utility.yul\":11874:11894   */\n      sub\n        /* \"#utility.yul\":11870:11871   */\n      0x00\n        /* \"#utility.yul\":11859:11868   */\n      dup4\n        /* \"#utility.yul\":11855:11872   */\n      add\n        /* \"#utility.yul\":11848:11895   */\n      mstore\n        /* \"#utility.yul\":11912:12043   */\n      tag_300\n        /* \"#utility.yul\":12038:12042   */\n      dup2\n        /* \"#utility.yul\":11912:12043   */\n      tag_238\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":11904:12043   */\n      swap1\n      pop\n        /* \"#utility.yul\":11631:12050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12056:12475   */\n    tag_62:\n        /* \"#utility.yul\":12222:12226   */\n      0x00\n        /* \"#utility.yul\":12260:12262   */\n      0x20\n        /* \"#utility.yul\":12249:12258   */\n      dup3\n        /* \"#utility.yul\":12245:12263   */\n      add\n        /* \"#utility.yul\":12237:12263   */\n      swap1\n      pop\n        /* \"#utility.yul\":12309:12318   */\n      dup2\n        /* \"#utility.yul\":12303:12307   */\n      dup2\n        /* \"#utility.yul\":12299:12319   */\n      sub\n        /* \"#utility.yul\":12295:12296   */\n      0x00\n        /* \"#utility.yul\":12284:12293   */\n      dup4\n        /* \"#utility.yul\":12280:12297   */\n      add\n        /* \"#utility.yul\":12273:12320   */\n      mstore\n        /* \"#utility.yul\":12337:12468   */\n      tag_302\n        /* \"#utility.yul\":12463:12467   */\n      dup2\n        /* \"#utility.yul\":12337:12468   */\n      tag_243\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12329:12468   */\n      swap1\n      pop\n        /* \"#utility.yul\":12056:12475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12481:12900   */\n    tag_85:\n        /* \"#utility.yul\":12647:12651   */\n      0x00\n        /* \"#utility.yul\":12685:12687   */\n      0x20\n        /* \"#utility.yul\":12674:12683   */\n      dup3\n        /* \"#utility.yul\":12670:12688   */\n      add\n        /* \"#utility.yul\":12662:12688   */\n      swap1\n      pop\n        /* \"#utility.yul\":12734:12743   */\n      dup2\n        /* \"#utility.yul\":12728:12732   */\n      dup2\n        /* \"#utility.yul\":12724:12744   */\n      sub\n        /* \"#utility.yul\":12720:12721   */\n      0x00\n        /* \"#utility.yul\":12709:12718   */\n      dup4\n        /* \"#utility.yul\":12705:12722   */\n      add\n        /* \"#utility.yul\":12698:12745   */\n      mstore\n        /* \"#utility.yul\":12762:12893   */\n      tag_304\n        /* \"#utility.yul\":12888:12892   */\n      dup2\n        /* \"#utility.yul\":12762:12893   */\n      tag_248\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12754:12893   */\n      swap1\n      pop\n        /* \"#utility.yul\":12481:12900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12987:13141   */\n    tag_211:\n        /* \"#utility.yul\":13076:13080   */\n      0x00\n        /* \"#utility.yul\":13099:13102   */\n      dup2\n        /* \"#utility.yul\":13091:13102   */\n      swap1\n      pop\n        /* \"#utility.yul\":13129:13133   */\n      0x20\n        /* \"#utility.yul\":13124:13127   */\n      dup3\n        /* \"#utility.yul\":13120:13134   */\n      add\n        /* \"#utility.yul\":13112:13134   */\n      swap1\n      pop\n        /* \"#utility.yul\":12987:13141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13147:13283   */\n    tag_207:\n        /* \"#utility.yul\":13236:13242   */\n      0x00\n        /* \"#utility.yul\":13270:13275   */\n      dup2\n        /* \"#utility.yul\":13264:13276   */\n      mload\n        /* \"#utility.yul\":13254:13276   */\n      swap1\n      pop\n        /* \"#utility.yul\":13147:13283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13289:13424   */\n    tag_217:\n        /* \"#utility.yul\":13381:13385   */\n      0x00\n        /* \"#utility.yul\":13413:13417   */\n      0x20\n        /* \"#utility.yul\":13408:13411   */\n      dup3\n        /* \"#utility.yul\":13404:13418   */\n      add\n        /* \"#utility.yul\":13396:13418   */\n      swap1\n      pop\n        /* \"#utility.yul\":13289:13424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13430:13636   */\n    tag_209:\n        /* \"#utility.yul\":13551:13562   */\n      0x00\n        /* \"#utility.yul\":13585:13591   */\n      dup3\n        /* \"#utility.yul\":13580:13583   */\n      dup3\n        /* \"#utility.yul\":13573:13592   */\n      mstore\n        /* \"#utility.yul\":13625:13629   */\n      0x20\n        /* \"#utility.yul\":13620:13623   */\n      dup3\n        /* \"#utility.yul\":13616:13630   */\n      add\n        /* \"#utility.yul\":13601:13630   */\n      swap1\n      pop\n        /* \"#utility.yul\":13430:13636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13642:13811   */\n    tag_225:\n        /* \"#utility.yul\":13726:13737   */\n      0x00\n        /* \"#utility.yul\":13760:13766   */\n      dup3\n        /* \"#utility.yul\":13755:13758   */\n      dup3\n        /* \"#utility.yul\":13748:13767   */\n      mstore\n        /* \"#utility.yul\":13800:13804   */\n      0x20\n        /* \"#utility.yul\":13795:13798   */\n      dup3\n        /* \"#utility.yul\":13791:13805   */\n      add\n        /* \"#utility.yul\":13776:13805   */\n      swap1\n      pop\n        /* \"#utility.yul\":13642:13811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:14122   */\n    tag_78:\n        /* \"#utility.yul\":13857:13860   */\n      0x00\n        /* \"#utility.yul\":13876:13896   */\n      tag_313\n        /* \"#utility.yul\":13894:13895   */\n      dup3\n        /* \"#utility.yul\":13876:13896   */\n      tag_268\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":13871:13896   */\n      swap2\n      pop\n        /* \"#utility.yul\":13910:13930   */\n      tag_314\n        /* \"#utility.yul\":13928:13929   */\n      dup4\n        /* \"#utility.yul\":13910:13930   */\n      tag_268\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13905:13930   */\n      swap3\n      pop\n        /* \"#utility.yul\":14064:14065   */\n      dup3\n        /* \"#utility.yul\":13996:14062   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13992:14066   */\n      sub\n        /* \"#utility.yul\":13989:13990   */\n      dup3\n        /* \"#utility.yul\":13986:14067   */\n      gt\n        /* \"#utility.yul\":13983:14090   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":14070:14088   */\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":13983:14090   */\n    tag_315:\n        /* \"#utility.yul\":14114:14115   */\n      dup3\n        /* \"#utility.yul\":14111:14112   */\n      dup3\n        /* \"#utility.yul\":14107:14116   */\n      add\n        /* \"#utility.yul\":14100:14116   */\n      swap1\n      pop\n        /* \"#utility.yul\":13817:14122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14128:14319   */\n    tag_110:\n        /* \"#utility.yul\":14168:14172   */\n      0x00\n        /* \"#utility.yul\":14188:14208   */\n      tag_319\n        /* \"#utility.yul\":14206:14207   */\n      dup3\n        /* \"#utility.yul\":14188:14208   */\n      tag_268\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14183:14208   */\n      swap2\n      pop\n        /* \"#utility.yul\":14222:14242   */\n      tag_320\n        /* \"#utility.yul\":14240:14241   */\n      dup4\n        /* \"#utility.yul\":14222:14242   */\n      tag_268\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14217:14242   */\n      swap3\n      pop\n        /* \"#utility.yul\":14261:14262   */\n      dup3\n        /* \"#utility.yul\":14258:14259   */\n      dup3\n        /* \"#utility.yul\":14255:14263   */\n      lt\n        /* \"#utility.yul\":14252:14286   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":14266:14284   */\n      tag_322\n      tag_317\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14252:14286   */\n    tag_321:\n        /* \"#utility.yul\":14311:14312   */\n      dup3\n        /* \"#utility.yul\":14308:14309   */\n      dup3\n        /* \"#utility.yul\":14304:14313   */\n      sub\n        /* \"#utility.yul\":14296:14313   */\n      swap1\n      pop\n        /* \"#utility.yul\":14128:14319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14325:14510   */\n    tag_122:\n        /* \"#utility.yul\":14363:14367   */\n      0x00\n        /* \"#utility.yul\":14383:14401   */\n      tag_324\n        /* \"#utility.yul\":14399:14400   */\n      dup3\n        /* \"#utility.yul\":14383:14401   */\n      tag_274\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":14378:14401   */\n      swap2\n      pop\n        /* \"#utility.yul\":14415:14433   */\n      tag_325\n        /* \"#utility.yul\":14431:14432   */\n      dup4\n        /* \"#utility.yul\":14415:14433   */\n      tag_274\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14410:14433   */\n      swap3\n      pop\n        /* \"#utility.yul\":14452:14453   */\n      dup3\n        /* \"#utility.yul\":14449:14450   */\n      dup3\n        /* \"#utility.yul\":14446:14454   */\n      lt\n        /* \"#utility.yul\":14443:14477   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":14457:14475   */\n      tag_327\n      tag_317\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":14443:14477   */\n    tag_326:\n        /* \"#utility.yul\":14502:14503   */\n      dup3\n        /* \"#utility.yul\":14499:14500   */\n      dup3\n        /* \"#utility.yul\":14495:14504   */\n      sub\n        /* \"#utility.yul\":14487:14504   */\n      swap1\n      pop\n        /* \"#utility.yul\":14325:14510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14516:14612   */\n    tag_200:\n        /* \"#utility.yul\":14553:14560   */\n      0x00\n        /* \"#utility.yul\":14582:14606   */\n      tag_329\n        /* \"#utility.yul\":14600:14605   */\n      dup3\n        /* \"#utility.yul\":14582:14606   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14571:14606   */\n      swap1\n      pop\n        /* \"#utility.yul\":14516:14612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14618:14708   */\n    tag_221:\n        /* \"#utility.yul\":14652:14659   */\n      0x00\n        /* \"#utility.yul\":14695:14700   */\n      dup2\n        /* \"#utility.yul\":14688:14701   */\n      iszero\n        /* \"#utility.yul\":14681:14702   */\n      iszero\n        /* \"#utility.yul\":14670:14702   */\n      swap1\n      pop\n        /* \"#utility.yul\":14618:14708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14714:14840   */\n    tag_330:\n        /* \"#utility.yul\":14751:14758   */\n      0x00\n        /* \"#utility.yul\":14791:14833   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14784:14789   */\n      dup3\n        /* \"#utility.yul\":14780:14834   */\n      and\n        /* \"#utility.yul\":14769:14834   */\n      swap1\n      pop\n        /* \"#utility.yul\":14714:14840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14846:14923   */\n    tag_268:\n        /* \"#utility.yul\":14883:14890   */\n      0x00\n        /* \"#utility.yul\":14912:14917   */\n      dup2\n        /* \"#utility.yul\":14901:14917   */\n      swap1\n      pop\n        /* \"#utility.yul\":14846:14923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14929:15015   */\n    tag_274:\n        /* \"#utility.yul\":14964:14971   */\n      0x00\n        /* \"#utility.yul\":15004:15008   */\n      0xff\n        /* \"#utility.yul\":14997:15002   */\n      dup3\n        /* \"#utility.yul\":14993:15009   */\n      and\n        /* \"#utility.yul\":14982:15009   */\n      swap1\n      pop\n        /* \"#utility.yul\":14929:15015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15021:15188   */\n    tag_127:\n        /* \"#utility.yul\":15058:15061   */\n      0x00\n        /* \"#utility.yul\":15081:15103   */\n      tag_336\n        /* \"#utility.yul\":15097:15102   */\n      dup3\n        /* \"#utility.yul\":15081:15103   */\n      tag_274\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15072:15103   */\n      swap2\n      pop\n        /* \"#utility.yul\":15125:15129   */\n      0xff\n        /* \"#utility.yul\":15118:15123   */\n      dup3\n        /* \"#utility.yul\":15115:15130   */\n      eq\n        /* \"#utility.yul\":15112:15153   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":15133:15151   */\n      tag_338\n      tag_317\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":15112:15153   */\n    tag_337:\n        /* \"#utility.yul\":15180:15181   */\n      0x01\n        /* \"#utility.yul\":15173:15178   */\n      dup3\n        /* \"#utility.yul\":15169:15182   */\n      add\n        /* \"#utility.yul\":15162:15182   */\n      swap1\n      pop\n        /* \"#utility.yul\":15021:15188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15194:15374   */\n    tag_317:\n        /* \"#utility.yul\":15242:15319   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15239:15240   */\n      0x00\n        /* \"#utility.yul\":15232:15320   */\n      mstore\n        /* \"#utility.yul\":15339:15343   */\n      0x11\n        /* \"#utility.yul\":15336:15337   */\n      0x04\n        /* \"#utility.yul\":15329:15344   */\n      mstore\n        /* \"#utility.yul\":15363:15367   */\n      0x24\n        /* \"#utility.yul\":15360:15361   */\n      0x00\n        /* \"#utility.yul\":15353:15368   */\n      revert\n        /* \"#utility.yul\":15380:15560   */\n    tag_125:\n        /* \"#utility.yul\":15428:15505   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15425:15426   */\n      0x00\n        /* \"#utility.yul\":15418:15506   */\n      mstore\n        /* \"#utility.yul\":15525:15529   */\n      0x32\n        /* \"#utility.yul\":15522:15523   */\n      0x04\n        /* \"#utility.yul\":15515:15530   */\n      mstore\n        /* \"#utility.yul\":15549:15553   */\n      0x24\n        /* \"#utility.yul\":15546:15547   */\n      0x00\n        /* \"#utility.yul\":15539:15554   */\n      revert\n        /* \"#utility.yul\":15566:15746   */\n    tag_113:\n        /* \"#utility.yul\":15614:15691   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15611:15612   */\n      0x00\n        /* \"#utility.yul\":15604:15692   */\n      mstore\n        /* \"#utility.yul\":15711:15715   */\n      0x41\n        /* \"#utility.yul\":15708:15709   */\n      0x04\n        /* \"#utility.yul\":15701:15716   */\n      mstore\n        /* \"#utility.yul\":15735:15739   */\n      0x24\n        /* \"#utility.yul\":15732:15733   */\n      0x00\n        /* \"#utility.yul\":15725:15740   */\n      revert\n        /* \"#utility.yul\":15875:15992   */\n    tag_179:\n        /* \"#utility.yul\":15984:15985   */\n      0x00\n        /* \"#utility.yul\":15981:15982   */\n      dup1\n        /* \"#utility.yul\":15974:15986   */\n      revert\n        /* \"#utility.yul\":15998:16175   */\n    tag_227:\n        /* \"#utility.yul\":16138:16167   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":16134:16135   */\n      0x00\n        /* \"#utility.yul\":16126:16132   */\n      dup3\n        /* \"#utility.yul\":16122:16136   */\n      add\n        /* \"#utility.yul\":16115:16168   */\n      mstore\n        /* \"#utility.yul\":15998:16175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16181:16406   */\n    tag_232:\n        /* \"#utility.yul\":16321:16355   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16317:16318   */\n      0x00\n        /* \"#utility.yul\":16309:16315   */\n      dup3\n        /* \"#utility.yul\":16305:16319   */\n      add\n        /* \"#utility.yul\":16298:16356   */\n      mstore\n        /* \"#utility.yul\":16390:16398   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16385:16387   */\n      0x20\n        /* \"#utility.yul\":16377:16383   */\n      dup3\n        /* \"#utility.yul\":16373:16388   */\n      add\n        /* \"#utility.yul\":16366:16399   */\n      mstore\n        /* \"#utility.yul\":16181:16406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16412:16584   */\n    tag_237:\n        /* \"#utility.yul\":16552:16576   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":16548:16549   */\n      0x00\n        /* \"#utility.yul\":16540:16546   */\n      dup3\n        /* \"#utility.yul\":16536:16550   */\n      add\n        /* \"#utility.yul\":16529:16577   */\n      mstore\n        /* \"#utility.yul\":16412:16584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16590:16760   */\n    tag_242:\n        /* \"#utility.yul\":16730:16752   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":16726:16727   */\n      0x00\n        /* \"#utility.yul\":16718:16724   */\n      dup3\n        /* \"#utility.yul\":16714:16728   */\n      add\n        /* \"#utility.yul\":16707:16753   */\n      mstore\n        /* \"#utility.yul\":16590:16760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16766:16948   */\n    tag_247:\n        /* \"#utility.yul\":16906:16940   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16902:16903   */\n      0x00\n        /* \"#utility.yul\":16894:16900   */\n      dup3\n        /* \"#utility.yul\":16890:16904   */\n      add\n        /* \"#utility.yul\":16883:16941   */\n      mstore\n        /* \"#utility.yul\":16766:16948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16954:17124   */\n    tag_252:\n        /* \"#utility.yul\":17094:17116   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":17090:17091   */\n      0x00\n        /* \"#utility.yul\":17082:17088   */\n      dup3\n        /* \"#utility.yul\":17078:17092   */\n      add\n        /* \"#utility.yul\":17071:17117   */\n      mstore\n        /* \"#utility.yul\":16954:17124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17130:17252   */\n    tag_164:\n        /* \"#utility.yul\":17203:17227   */\n      tag_352\n        /* \"#utility.yul\":17221:17226   */\n      dup2\n        /* \"#utility.yul\":17203:17227   */\n      tag_200\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":17196:17201   */\n      dup2\n        /* \"#utility.yul\":17193:17228   */\n      eq\n        /* \"#utility.yul\":17183:17246   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":17242:17243   */\n      0x00\n        /* \"#utility.yul\":17239:17240   */\n      dup1\n        /* \"#utility.yul\":17232:17244   */\n      revert\n        /* \"#utility.yul\":17183:17246   */\n    tag_353:\n        /* \"#utility.yul\":17130:17252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17258:17374   */\n    tag_168:\n        /* \"#utility.yul\":17328:17349   */\n      tag_355\n        /* \"#utility.yul\":17343:17348   */\n      dup2\n        /* \"#utility.yul\":17328:17349   */\n      tag_221\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":17321:17326   */\n      dup2\n        /* \"#utility.yul\":17318:17350   */\n      eq\n        /* \"#utility.yul\":17308:17368   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":17364:17365   */\n      0x00\n        /* \"#utility.yul\":17361:17362   */\n      dup1\n        /* \"#utility.yul\":17354:17366   */\n      revert\n        /* \"#utility.yul\":17308:17368   */\n    tag_356:\n        /* \"#utility.yul\":17258:17374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17380:17502   */\n    tag_172:\n        /* \"#utility.yul\":17453:17477   */\n      tag_358\n        /* \"#utility.yul\":17471:17476   */\n      dup2\n        /* \"#utility.yul\":17453:17477   */\n      tag_268\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":17446:17451   */\n      dup2\n        /* \"#utility.yul\":17443:17478   */\n      eq\n        /* \"#utility.yul\":17433:17496   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":17492:17493   */\n      0x00\n        /* \"#utility.yul\":17489:17490   */\n      dup1\n        /* \"#utility.yul\":17482:17494   */\n      revert\n        /* \"#utility.yul\":17433:17496   */\n    tag_359:\n        /* \"#utility.yul\":17380:17502   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206ad391c68e294b83de53995806b5226da70238b63a5d6dc976fab378f98ea59364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6117ce8061012d6000396000f3fe60806040526004361061008a5760003560e01c8063b0adfa0911610059578063b0adfa0914610115578063da917aea14610140578063db5689221461016b578063df6a8a1514610194578063f2fde38b146101bd57610091565b806364cb560c14610093578063715018a6146100aa5780638da5cb5b146100c1578063ad95b1c6146100ec57610091565b3661009157005b005b34801561009f57600080fd5b506100a86101e6565b005b3480156100b657600080fd5b506100bf61028e565b005b3480156100cd57600080fd5b506100d6610316565b6040516100e39190611261565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610fbb565b61033f565b005b34801561012157600080fd5b5061012a6107f8565b6040516101379190611321565b60405180910390f35b34801561014c57600080fd5b50610155610964565b6040516101629190611343565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190610f61565b610977565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190610fbb565b610a37565b005b3480156101c957600080fd5b506101e460048036038101906101df9190610f61565b610d08565b005b6101ee610e00565b73ffffffffffffffffffffffffffffffffffffffff1661020c610316565b73ffffffffffffffffffffffffffffffffffffffff1614610262576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610259906113de565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610296610e00565b73ffffffffffffffffffffffffffffffffffffffff166102b4610316565b73ffffffffffffffffffffffffffffffffffffffff161461030a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610301906113de565b60405180910390fd5b6103146000610e08565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061139e565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e49190611468565b1115610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c906113be565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104799190611468565b10156104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b1906113fe565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105169190611261565b60206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610fe8565b10156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e9061135e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106069392919061127c565b602060405180830381600087803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610f8e565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106a89190611468565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff168152509050806004600060016002546107029190611468565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546107c09190611468565b83426040516107d294939291906112dc565b60405180910390a16001600260008282546107ed9190611468565b925050819055505050565b60606000600160025461080b91906114be565b67ffffffffffffffff81111561082457610823611603565b5b60405190808252806020026020018201604052801561085d57816020015b61084a610ecc565b8152602001906001900390816108425790505b5090506000600190505b6002548160ff16101561095c57600460008260ff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff16815250508260018361092a91906114f2565b60ff168151811061093e5761093d6115d4565b5b602002602001018190525080806109549061157b565b915050610867565b508091505090565b600360009054906101000a900460ff1681565b61097f610e00565b73ffffffffffffffffffffffffffffffffffffffff1661099d610316565b73ffffffffffffffffffffffffffffffffffffffff16146109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea906113de565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab09061135e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b169291906112b3565b602060405180830381600087803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190610f8e565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb891906114be565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610c129190611468565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610cd09190611468565b8342604051610ce294939291906112dc565b60405180910390a1600160026000828254610cfd9190611468565b925050819055505050565b610d10610e00565b73ffffffffffffffffffffffffffffffffffffffff16610d2e610316565b73ffffffffffffffffffffffffffffffffffffffff1614610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b906113de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb9061137e565b60405180910390fd5b610dfd81610e08565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b600081359050610f1c81611753565b92915050565b600081519050610f318161176a565b92915050565b600081359050610f4681611781565b92915050565b600081519050610f5b81611781565b92915050565b600060208284031215610f7757610f76611632565b5b6000610f8584828501610f0d565b91505092915050565b600060208284031215610fa457610fa3611632565b5b6000610fb284828501610f22565b91505092915050565b600060208284031215610fd157610fd0611632565b5b6000610fdf84828501610f37565b91505092915050565b600060208284031215610ffe57610ffd611632565b5b600061100c84828501610f4c565b91505092915050565b6000611021838361118a565b60808301905092915050565b61103681611526565b82525050565b61104581611526565b82525050565b60006110568261142e565b6110608185611446565b935061106b8361141e565b8060005b8381101561109c5781516110838882611015565b975061108e83611439565b92505060018101905061106f565b5085935050505092915050565b6110b281611538565b82525050565b60006110c5601b83611457565b91506110d082611637565b602082019050919050565b60006110e8602683611457565b91506110f382611660565b604082019050919050565b600061110b601683611457565b9150611116826116af565b602082019050919050565b600061112e601483611457565b9150611139826116d8565b602082019050919050565b6000611151602083611457565b915061115c82611701565b602082019050919050565b6000611174601483611457565b915061117f8261172a565b602082019050919050565b6080820160008201516111a0600085018261102d565b5060208201516111b36020850182611234565b5060408201516111c66040850182611234565b5060608201516111d96060850182611252565b50505050565b6080820160008201516111f5600085018261102d565b5060208201516112086020850182611234565b50604082015161121b6040850182611234565b50606082015161122e6060850182611252565b50505050565b61123d81611564565b82525050565b61124c81611564565b82525050565b61125b8161156e565b82525050565b6000602082019050611276600083018461103c565b92915050565b6000606082019050611291600083018661103c565b61129e602083018561103c565b6112ab6040830184611243565b949350505050565b60006040820190506112c8600083018561103c565b6112d56020830184611243565b9392505050565b600060e0820190506112f1600083018761103c565b6112fe6020830186611243565b61130b60408301856111df565b61131860c0830184611243565b95945050505050565b6000602082019050818103600083015261133b818461104b565b905092915050565b600060208201905061135860008301846110a9565b92915050565b60006020820190508181036000830152611377816110b8565b9050919050565b60006020820190508181036000830152611397816110db565b9050919050565b600060208201905081810360008301526113b7816110fe565b9050919050565b600060208201905081810360008301526113d781611121565b9050919050565b600060208201905081810360008301526113f781611144565b9050919050565b6000602082019050818103600083015261141781611167565b9050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061147382611564565b915061147e83611564565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b3576114b26115a5565b5b828201905092915050565b60006114c982611564565b91506114d483611564565b9250828210156114e7576114e66115a5565b5b828203905092915050565b60006114fd8261156e565b91506115088361156e565b92508282101561151b5761151a6115a5565b5b828203905092915050565b600061153182611544565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006115868261156e565b915060ff82141561159a576115996115a5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b61175c81611526565b811461176757600080fd5b50565b61177381611538565b811461177e57600080fd5b50565b61178a81611564565b811461179557600080fd5b5056fea26469706673582212206ad391c68e294b83de53995806b5226da70238b63a5d6dc976fab378f98ea59364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0ADFA09 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xEC JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x296 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B4 PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x314 PUSH1 0x0 PUSH2 0xE08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST GT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41C SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B1 SWAP1 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST LT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x84A PUSH2 0xECC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x842 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x95C JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0x15D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x954 SWAP1 PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x867 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x99D PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB0 SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP3 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xCE2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD10 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD2E PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xE08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1C DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF31 DUP2 PUSH2 0x176A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF46 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5B DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF85 DUP5 DUP3 DUP6 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB2 DUP5 DUP3 DUP6 ADD PUSH2 0xF22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDF DUP5 DUP3 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP5 DUP3 DUP6 ADD PUSH2 0xF4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 DUP4 DUP4 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1036 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1056 DUP3 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x1060 DUP2 DUP6 PUSH2 0x1446 JUMP JUMPDEST SWAP4 POP PUSH2 0x106B DUP4 PUSH2 0x141E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x109C JUMPI DUP2 MLOAD PUSH2 0x1083 DUP9 DUP3 PUSH2 0x1015 JUMP JUMPDEST SWAP8 POP PUSH2 0x108E DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x106F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B2 DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C5 PUSH1 0x1B DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E8 PUSH1 0x26 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP3 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B PUSH1 0x16 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1116 DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112E PUSH1 0x14 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1139 DUP3 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1151 PUSH1 0x20 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x115C DUP3 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1174 PUSH1 0x14 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x117F DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x11A0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x102D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11B3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11C6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x11D9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x11F5 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x102D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1208 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x121B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x122E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125B DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1276 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x129E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x12F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x130B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x1318 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 DUP5 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1358 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1377 DUP2 PUSH2 0x10B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1397 DUP2 PUSH2 0x10DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B7 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13D7 DUP2 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F7 DUP2 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1417 DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP3 PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP PUSH2 0x147E DUP4 PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C9 DUP3 PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP4 PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14E7 JUMPI PUSH2 0x14E6 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FD DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP3 PUSH2 0x1544 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP2 EQ PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x178A DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP2 EQ PUSH2 0x1795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xD391C68E294B83DE539958 MOD 0xB5 0x22 PUSH14 0xA70238B63A5D6DC976FAB378F98E 0xA5 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:4658:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4658;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4658:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4658:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakingHistory_462": {
									"entryPoint": 2040,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@SetStakingToken_227": {
									"entryPoint": 2423,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 831,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 2404,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 486,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_416": {
									"entryPoint": 2615,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3584,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3592,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 790,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 654,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3336,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17505:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:143:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2187:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2101:77:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:90:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2101:90:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2200:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2218:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2214:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2200:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2064:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2080:10:3",
														"type": ""
													}
												],
												"src": "1967:267:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2312:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2335:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2317:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2283:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2290:3:3",
														"type": ""
													}
												],
												"src": "2240:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2436:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2459:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2407:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2414:3:3",
														"type": ""
													}
												],
												"src": "2354:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:740:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2728:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2812:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2742:69:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:76:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2732:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2827:115:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2834:95:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:108:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2951:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3038:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2966:71:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:78:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2955:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3053:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3067:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3057:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3143:290:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3157:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3184:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3178:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3161:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3204:114:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3299:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3211:87:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:107:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3204:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3331:92:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3416:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3341:74:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3341:82:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3331:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3105:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3102:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3116:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3118:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3127:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3123:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3118:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3087:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3089:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3098:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3093:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3083:350:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3442:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3449:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2697:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2704:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2713:3:3",
														"type": ""
													}
												],
												"src": "2550:908:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3523:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3540:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3560:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3545:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3533:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3511:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3518:3:3",
														"type": ""
													}
												],
												"src": "3464:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3725:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3735:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3801:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3806:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3742:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3742:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3735:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "3818:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3818:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3920:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3713:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3721:3:3",
														"type": ""
													}
												],
												"src": "3579:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4097:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4107:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4173:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4114:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4107:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4279:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4190:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4190:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4292:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4303:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4308:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4085:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4093:3:3",
														"type": ""
													}
												],
												"src": "3951:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4479:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4545:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4486:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4651:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "4562:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4562:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4675:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4457:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4465:3:3",
														"type": ""
													}
												],
												"src": "4323:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4917:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4858:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5023:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "4934:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4934:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5036:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5047:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5043:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4829:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4837:3:3",
														"type": ""
													}
												],
												"src": "4695:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5223:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5289:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5294:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5230:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5223:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5395:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5306:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5408:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5419:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5201:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5209:3:3",
														"type": ""
													}
												],
												"src": "5067:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5585:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5595:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5661:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5602:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "5678:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5780:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5791:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5780:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5573:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5581:3:3",
														"type": ""
													}
												],
												"src": "5439:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5989:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6005:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6010:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6001:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6001:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5993:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6025:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6061:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6091:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6098:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6087:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6087:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6081:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6065:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6151:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6169:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6174:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6165:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6165:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6117:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6117:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6200:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6237:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6267:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6274:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6263:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6263:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6257:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6257:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6241:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6327:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6345:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6350:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6341:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6341:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6293:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6293:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6293:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6376:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6416:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6446:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6453:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6442:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6442:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6436:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6436:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6420:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6506:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6524:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6529:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6520:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6472:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6472:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6555:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6595:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6625:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6632:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6621:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6621:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6615:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6615:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6599:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6681:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6699:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6704:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6695:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6651:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6651:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6651:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5966:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5973:3:3",
														"type": ""
													}
												],
												"src": "5879:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6911:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6921:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6937:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6942:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6933:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6925:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6957:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6993:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7023:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7030:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7019:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7019:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7013:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6997:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7083:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7101:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7106:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7097:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7097:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7049:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7049:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7049:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7132:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7169:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7199:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7206:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7195:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7195:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7189:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7189:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7173:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7259:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7277:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7282:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7273:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7273:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7225:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7225:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7225:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7308:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7348:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7378:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7385:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7374:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7374:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7368:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7352:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7438:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7456:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7461:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7452:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7404:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7404:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7404:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7487:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7527:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7557:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7564:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7553:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7553:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7547:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7547:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7531:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7613:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7631:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7636:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7627:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7627:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7583:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7583:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7583:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6898:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6905:3:3",
														"type": ""
													}
												],
												"src": "6801:858:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7720:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7737:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7760:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7742:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7730:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7708:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7715:3:3",
														"type": ""
													}
												],
												"src": "7665:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7861:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7884:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7866:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7866:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7832:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7839:3:3",
														"type": ""
													}
												],
												"src": "7779:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7992:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7976:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7976:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7964:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7964:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7964:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7942:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7949:3:3",
														"type": ""
													}
												],
												"src": "7903:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8109:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8119:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8199:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8223:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8208:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8155:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8155:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8155:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8081:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8093:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8104:4:3",
														"type": ""
													}
												],
												"src": "8011:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8393:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8403:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8415:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8426:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8411:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8411:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8403:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8483:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8496:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8507:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8492:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8492:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8439:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8564:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8577:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8588:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8573:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8573:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8520:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8520:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8646:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8670:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8655:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8602:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8602:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8349:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8361:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8369:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8377:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8388:4:3",
														"type": ""
													}
												],
												"src": "8239:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8813:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8823:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8835:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8846:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8831:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8823:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8903:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8916:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8927:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8912:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8912:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8859:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8859:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8984:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8997:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9008:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8993:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8993:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8940:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8940:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8940:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8777:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8789:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8797:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8808:4:3",
														"type": ""
													}
												],
												"src": "8687:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9251:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9261:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9273:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9284:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9269:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9269:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9261:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9342:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9355:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9366:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9351:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9351:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9298:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9298:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9298:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9423:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9436:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9447:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9432:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9379:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9379:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9549:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9562:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9573:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9558:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9558:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9461:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9461:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9461:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9631:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9644:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9655:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9640:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9640:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9587:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9587:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9199:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9211:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9219:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9227:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9235:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9246:4:3",
														"type": ""
													}
												],
												"src": "9025:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9865:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9875:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9887:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9898:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9883:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9883:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9875:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9922:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9933:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9918:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9918:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9941:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9937:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9937:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9911:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9967:160:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10113:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10122:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9975:137:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:152:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9967:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9837:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9849:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9860:4:3",
														"type": ""
													}
												],
												"src": "9673:461:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10232:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10242:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10254:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10265:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10250:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10242:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10329:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10340:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10325:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10325:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10278:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10278:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10204:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10216:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10227:4:3",
														"type": ""
													}
												],
												"src": "10140:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10527:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10537:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10549:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10560:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10545:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10545:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10537:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10584:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10580:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10603:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10609:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10599:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10573:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10573:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10573:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10629:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10763:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10637:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10629:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10507:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10522:4:3",
														"type": ""
													}
												],
												"src": "10356:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10952:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10962:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10974:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10985:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10970:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10970:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10962:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11009:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11020:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11005:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11028:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11034:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11024:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10998:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10998:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11054:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11188:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11062:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11054:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10932:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10947:4:3",
														"type": ""
													}
												],
												"src": "10781:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11377:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11387:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11399:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11410:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11395:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11395:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11387:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11434:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11445:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11430:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11430:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11453:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11459:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11423:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11423:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11479:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11613:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11487:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11487:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11479:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11357:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11372:4:3",
														"type": ""
													}
												],
												"src": "11206:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11802:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11812:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11824:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11820:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11812:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11859:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11870:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11855:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11878:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11884:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11874:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11874:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11848:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11848:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11904:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12038:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11912:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11904:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11782:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11797:4:3",
														"type": ""
													}
												],
												"src": "11631:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12227:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12249:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12237:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12284:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12295:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12280:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12303:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12309:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12299:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12273:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12329:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12463:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12337:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12337:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12329:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12207:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12222:4:3",
														"type": ""
													}
												],
												"src": "12056:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12652:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12662:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12674:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12685:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12670:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12670:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12662:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12709:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12720:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12705:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12705:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12728:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12734:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12724:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12724:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12698:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12698:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12698:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12754:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12888:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12762:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12762:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12754:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12632:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12647:4:3",
														"type": ""
													}
												],
												"src": "12481:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12946:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12956:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12972:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12966:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12966:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12956:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12939:6:3",
														"type": ""
													}
												],
												"src": "12906:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13081:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13091:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13099:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13091:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13112:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13124:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13129:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13120:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13120:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13112:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13068:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13076:4:3",
														"type": ""
													}
												],
												"src": "12987:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13243:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13254:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13270:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13264:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13264:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13254:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13226:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13236:6:3",
														"type": ""
													}
												],
												"src": "13147:136:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13386:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13396:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13408:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13413:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13404:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13404:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13396:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13373:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13381:4:3",
														"type": ""
													}
												],
												"src": "13289:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13563:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13580:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13585:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13573:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13573:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13573:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13601:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13620:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13625:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13616:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13616:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13601:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13535:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13540:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13551:11:3",
														"type": ""
													}
												],
												"src": "13430:206:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13738:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13755:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13760:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13748:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13748:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13748:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13776:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13795:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13800:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13791:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13776:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13710:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13715:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13726:11:3",
														"type": ""
													}
												],
												"src": "13642:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13861:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13871:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13894:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13876:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13876:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13871:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13905:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13928:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13910:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13910:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13905:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14068:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14070:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14070:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14070:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13989:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13996:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14064:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13986:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13986:81:3"
															},
															"nodeType": "YulIf",
															"src": "13983:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14100:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14111:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14114:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14107:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14100:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13848:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13851:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13857:3:3",
														"type": ""
													}
												],
												"src": "13817:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14173:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14183:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14206:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14188:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14188:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14183:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14217:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14240:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14222:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14217:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14264:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14266:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14266:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14266:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14258:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14261:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14255:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14255:8:3"
															},
															"nodeType": "YulIf",
															"src": "14252:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14296:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14308:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14311:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14304:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14296:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14159:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14162:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14168:4:3",
														"type": ""
													}
												],
												"src": "14128:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14368:142:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14378:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14399:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "14383:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:18:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14378:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14410:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14431:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "14415:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14415:18:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14410:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14455:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14457:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14457:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14457:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14449:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14452:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14446:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14446:8:3"
															},
															"nodeType": "YulIf",
															"src": "14443:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14487:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14499:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14502:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14495:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14495:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14487:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14354:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14357:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14363:4:3",
														"type": ""
													}
												],
												"src": "14325:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14561:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14571:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14600:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14582:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14582:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14571:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14543:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14553:7:3",
														"type": ""
													}
												],
												"src": "14516:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14660:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14670:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14695:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14688:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14688:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14681:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14670:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14642:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14652:7:3",
														"type": ""
													}
												],
												"src": "14618:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14759:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14769:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14784:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14791:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14780:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14769:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14741:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14751:7:3",
														"type": ""
													}
												],
												"src": "14714:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14891:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14901:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14912:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14901:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14873:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14883:7:3",
														"type": ""
													}
												],
												"src": "14846:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14972:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14982:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14997:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15004:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14993:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14993:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14982:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14954:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14964:7:3",
														"type": ""
													}
												],
												"src": "14929:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15062:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15072:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15097:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "15081:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15081:22:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15072:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15131:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15133:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15133:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15133:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15118:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15125:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15115:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15115:15:3"
															},
															"nodeType": "YulIf",
															"src": "15112:41:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15162:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15173:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15169:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15169:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15162:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15048:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15058:3:3",
														"type": ""
													}
												],
												"src": "15021:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15222:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15239:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15242:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15232:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15232:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15232:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15336:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15339:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15329:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15329:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15329:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15360:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15363:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15353:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15353:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15353:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15194:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15408:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15425:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15428:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15418:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15418:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15522:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15525:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15515:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15515:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15546:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15549:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15380:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15594:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15611:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15614:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15604:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15708:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15711:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15701:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15701:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15701:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15732:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15735:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15725:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15725:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15566:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15841:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15858:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15861:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15851:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15851:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15851:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15752:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15964:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15981:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15984:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15974:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15974:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15974:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15875:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16104:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16126:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16134:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16122:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16122:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16138:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16115:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16115:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16096:6:3",
														"type": ""
													}
												],
												"src": "15998:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16287:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16309:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16317:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16305:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16305:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16321:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16298:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16298:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16298:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16377:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16385:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16373:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16390:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16366:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16366:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16279:6:3",
														"type": ""
													}
												],
												"src": "16181:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16518:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16540:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16548:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16536:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16536:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16552:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16529:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16529:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16510:6:3",
														"type": ""
													}
												],
												"src": "16412:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16696:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16718:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16726:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16714:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16714:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16730:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16707:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16707:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16688:6:3",
														"type": ""
													}
												],
												"src": "16590:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16872:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16894:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16902:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16890:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16890:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16906:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16883:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16883:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16883:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16864:6:3",
														"type": ""
													}
												],
												"src": "16766:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17060:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17082:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17090:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17078:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17078:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17094:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17071:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17071:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17071:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17052:6:3",
														"type": ""
													}
												],
												"src": "16954:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17173:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17230:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17239:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17242:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17232:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17232:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17232:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17196:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17221:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17203:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17203:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17193:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17193:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17186:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17186:43:3"
															},
															"nodeType": "YulIf",
															"src": "17183:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17166:5:3",
														"type": ""
													}
												],
												"src": "17130:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17298:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17352:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17361:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17364:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17354:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17354:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17354:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17321:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17343:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17328:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17328:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17318:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17318:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17311:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17311:40:3"
															},
															"nodeType": "YulIf",
															"src": "17308:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17291:5:3",
														"type": ""
													}
												],
												"src": "17258:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17423:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17480:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17489:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17492:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17482:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17482:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17482:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17446:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17471:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17453:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17453:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17443:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17443:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17436:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17436:43:3"
															},
															"nodeType": "YulIf",
															"src": "17433:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17416:5:3",
														"type": ""
													}
												],
												"src": "17380:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct StakingContract.Stake[] -> struct StakingContract.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c8063b0adfa0911610059578063b0adfa0914610115578063da917aea14610140578063db5689221461016b578063df6a8a1514610194578063f2fde38b146101bd57610091565b806364cb560c14610093578063715018a6146100aa5780638da5cb5b146100c1578063ad95b1c6146100ec57610091565b3661009157005b005b34801561009f57600080fd5b506100a86101e6565b005b3480156100b657600080fd5b506100bf61028e565b005b3480156100cd57600080fd5b506100d6610316565b6040516100e39190611261565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610fbb565b61033f565b005b34801561012157600080fd5b5061012a6107f8565b6040516101379190611321565b60405180910390f35b34801561014c57600080fd5b50610155610964565b6040516101629190611343565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190610f61565b610977565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190610fbb565b610a37565b005b3480156101c957600080fd5b506101e460048036038101906101df9190610f61565b610d08565b005b6101ee610e00565b73ffffffffffffffffffffffffffffffffffffffff1661020c610316565b73ffffffffffffffffffffffffffffffffffffffff1614610262576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610259906113de565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610296610e00565b73ffffffffffffffffffffffffffffffffffffffff166102b4610316565b73ffffffffffffffffffffffffffffffffffffffff161461030a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610301906113de565b60405180910390fd5b6103146000610e08565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661038e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103859061139e565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103e49190611468565b1115610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c906113be565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104799190611468565b10156104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b1906113fe565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105169190611261565b60206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610fe8565b10156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e9061135e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106069392919061127c565b602060405180830381600087803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190610f8e565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106a89190611468565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff168152509050806004600060016002546107029190611468565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546107c09190611468565b83426040516107d294939291906112dc565b60405180910390a16001600260008282546107ed9190611468565b925050819055505050565b60606000600160025461080b91906114be565b67ffffffffffffffff81111561082457610823611603565b5b60405190808252806020026020018201604052801561085d57816020015b61084a610ecc565b8152602001906001900390816108425790505b5090506000600190505b6002548160ff16101561095c57600460008260ff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff16815250508260018361092a91906114f2565b60ff168151811061093e5761093d6115d4565b5b602002602001018190525080806109549061157b565b915050610867565b508091505090565b600360009054906101000a900460ff1681565b61097f610e00565b73ffffffffffffffffffffffffffffffffffffffff1661099d610316565b73ffffffffffffffffffffffffffffffffffffffff16146109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea906113de565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab09061135e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b169291906112b3565b602060405180830381600087803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b689190610f8e565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb891906114be565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610c129190611468565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610cd09190611468565b8342604051610ce294939291906112dc565b60405180910390a1600160026000828254610cfd9190611468565b925050819055505050565b610d10610e00565b73ffffffffffffffffffffffffffffffffffffffff16610d2e610316565b73ffffffffffffffffffffffffffffffffffffffff1614610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b906113de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb9061137e565b60405180910390fd5b610dfd81610e08565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b600081359050610f1c81611753565b92915050565b600081519050610f318161176a565b92915050565b600081359050610f4681611781565b92915050565b600081519050610f5b81611781565b92915050565b600060208284031215610f7757610f76611632565b5b6000610f8584828501610f0d565b91505092915050565b600060208284031215610fa457610fa3611632565b5b6000610fb284828501610f22565b91505092915050565b600060208284031215610fd157610fd0611632565b5b6000610fdf84828501610f37565b91505092915050565b600060208284031215610ffe57610ffd611632565b5b600061100c84828501610f4c565b91505092915050565b6000611021838361118a565b60808301905092915050565b61103681611526565b82525050565b61104581611526565b82525050565b60006110568261142e565b6110608185611446565b935061106b8361141e565b8060005b8381101561109c5781516110838882611015565b975061108e83611439565b92505060018101905061106f565b5085935050505092915050565b6110b281611538565b82525050565b60006110c5601b83611457565b91506110d082611637565b602082019050919050565b60006110e8602683611457565b91506110f382611660565b604082019050919050565b600061110b601683611457565b9150611116826116af565b602082019050919050565b600061112e601483611457565b9150611139826116d8565b602082019050919050565b6000611151602083611457565b915061115c82611701565b602082019050919050565b6000611174601483611457565b915061117f8261172a565b602082019050919050565b6080820160008201516111a0600085018261102d565b5060208201516111b36020850182611234565b5060408201516111c66040850182611234565b5060608201516111d96060850182611252565b50505050565b6080820160008201516111f5600085018261102d565b5060208201516112086020850182611234565b50604082015161121b6040850182611234565b50606082015161122e6060850182611252565b50505050565b61123d81611564565b82525050565b61124c81611564565b82525050565b61125b8161156e565b82525050565b6000602082019050611276600083018461103c565b92915050565b6000606082019050611291600083018661103c565b61129e602083018561103c565b6112ab6040830184611243565b949350505050565b60006040820190506112c8600083018561103c565b6112d56020830184611243565b9392505050565b600060e0820190506112f1600083018761103c565b6112fe6020830186611243565b61130b60408301856111df565b61131860c0830184611243565b95945050505050565b6000602082019050818103600083015261133b818461104b565b905092915050565b600060208201905061135860008301846110a9565b92915050565b60006020820190508181036000830152611377816110b8565b9050919050565b60006020820190508181036000830152611397816110db565b9050919050565b600060208201905081810360008301526113b7816110fe565b9050919050565b600060208201905081810360008301526113d781611121565b9050919050565b600060208201905081810360008301526113f781611144565b9050919050565b6000602082019050818103600083015261141781611167565b9050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061147382611564565b915061147e83611564565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114b3576114b26115a5565b5b828201905092915050565b60006114c982611564565b91506114d483611564565b9250828210156114e7576114e66115a5565b5b828203905092915050565b60006114fd8261156e565b91506115088361156e565b92508282101561151b5761151a6115a5565b5b828203905092915050565b600061153182611544565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006115868261156e565b915060ff82141561159a576115996115a5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b61175c81611526565b811461176757600080fd5b50565b61177381611538565b811461177e57600080fd5b50565b61178a81611564565b811461179557600080fd5b5056fea26469706673582212206ad391c68e294b83de53995806b5226da70238b63a5d6dc976fab378f98ea59364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0ADFA09 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xEC JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1E6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x296 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B4 PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x314 PUSH1 0x0 PUSH2 0xE08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST GT ISZERO PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41C SWAP1 PUSH2 0x13BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B1 SWAP1 PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST LT ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59E SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x606 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80B SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH2 0x823 PUSH2 0x1603 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x85D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x84A PUSH2 0xECC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x842 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x95C JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0x15D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x954 SWAP1 PUSH2 0x157B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x867 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x97F PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x99D PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB0 SWAP1 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB16 SWAP3 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0xF8E JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xCE2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xD10 PUSH2 0xE00 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD2E PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x137E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFD DUP2 PUSH2 0xE08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1C DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF31 DUP2 PUSH2 0x176A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF46 DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5B DUP2 PUSH2 0x1781 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF85 DUP5 DUP3 DUP6 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB2 DUP5 DUP3 DUP6 ADD PUSH2 0xF22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD1 JUMPI PUSH2 0xFD0 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDF DUP5 DUP3 DUP6 ADD PUSH2 0xF37 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP5 DUP3 DUP6 ADD PUSH2 0xF4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1021 DUP4 DUP4 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1036 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1056 DUP3 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x1060 DUP2 DUP6 PUSH2 0x1446 JUMP JUMPDEST SWAP4 POP PUSH2 0x106B DUP4 PUSH2 0x141E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x109C JUMPI DUP2 MLOAD PUSH2 0x1083 DUP9 DUP3 PUSH2 0x1015 JUMP JUMPDEST SWAP8 POP PUSH2 0x108E DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x106F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B2 DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C5 PUSH1 0x1B DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D0 DUP3 PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E8 PUSH1 0x26 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F3 DUP3 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110B PUSH1 0x16 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1116 DUP3 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112E PUSH1 0x14 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x1139 DUP3 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1151 PUSH1 0x20 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x115C DUP3 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1174 PUSH1 0x14 DUP4 PUSH2 0x1457 JUMP JUMPDEST SWAP2 POP PUSH2 0x117F DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x11A0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x102D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x11B3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x11C6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x11D9 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x11F5 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x102D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1208 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x121B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1234 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x122E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x125B DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1276 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1291 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x129E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12C8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12D5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x12F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x12FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x130B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x1318 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x133B DUP2 DUP5 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1358 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1377 DUP2 PUSH2 0x10B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1397 DUP2 PUSH2 0x10DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B7 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13D7 DUP2 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F7 DUP2 PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1417 DUP2 PUSH2 0x1167 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 DUP3 PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP PUSH2 0x147E DUP4 PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C9 DUP3 PUSH2 0x1564 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP4 PUSH2 0x1564 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x14E7 JUMPI PUSH2 0x14E6 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FD DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH2 0x1508 DUP4 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1531 DUP3 PUSH2 0x1544 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 PUSH2 0x156E JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1773 DUP2 PUSH2 0x1538 JUMP JUMPDEST DUP2 EQ PUSH2 0x177E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x178A DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP2 EQ PUSH2 0x1795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xD391C68E294B83DE539958 MOD 0xB5 0x22 PUSH14 0xA70238B63A5D6DC976FAB378F98E 0xA5 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:4658:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:91;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2897:256;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1286:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2389:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:91:2;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1462:14:2::1;;;;;;;;;;;1461:15;1444:14;;:32;;;;;;;;;;;;;;;;;;1392:91::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1545:786:2:-;1606:14;;;;;;;;;;;1598:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:14;1695:6;1665:15;:27;1681:10;1665:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1657:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1824:9;1814:6;1784:15;:27;1800:10;1784:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1776:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:6;1899:12;;;;;;;;;;;1893:29;;;1923:10;1893:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1884:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1993:12;;;;;;;;;;;1987:32;;;2020:10;2040:4;2047:6;1987:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2095:6;2064:15;:27;2080:10;2064:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2111:21;2135:44;;;;;;;;2141:10;2135:44;;;;;;2152:6;2135:44;;;;2160:15;2135:44;;;;2177:1;2135:44;;;;;2111:68;;2219:8;2189:14;:27;2214:1;2204:9;;:11;;;;:::i;:::-;2189:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:60;2251:10;2273:1;2263:9;;:11;;;;:::i;:::-;2276:8;2286:15;2242:60;;;;;;;;;:::i;:::-;;;;;;;;2323:1;2312:9;;:12;;;;;;;:::i;:::-;;;;;;;;1588:743;1545:786;:::o;2897:256::-;2946:14;2972:21;3018:1;3008:9;;:11;;;;:::i;:::-;2996:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2972:48;;3035:7;3045:1;3035:11;;3030:94;3052:9;;3048:1;:13;;;3030:94;;;3096:14;:17;3111:1;3096:17;;;;;;;;;;;;;3082:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3091:1;3089;:3;;;;:::i;:::-;3082:11;;;;;;;;;;:::i;:::-;;;;;;;:31;;;;3063:3;;;;;:::i;:::-;;;;3030:94;;;;3140:6;3133:13;;;2897:256;:::o;491:34::-;;;;;;;;;;;;;:::o;1286:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1369:6:2::1;1354:12;;:21;;;;;;;;;;;;;;;;;;1286:96:::0;:::o;2389:502::-;2483:6;2452:15;:27;2468:10;2452:27;;;;;;;;;;;;;;;;:37;;2444:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2567:12;;;;;;;;;;;2561:28;;;2590:10;2602:6;2561:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2650:6;2619:15;:27;2635:10;2619:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2666:23;2692:44;;;;;;;;2698:10;2692:44;;;;;;2709:6;2692:44;;;;2717:15;2692:44;;;;2734:1;2692:44;;;;;2666:70;;2776:10;2746:14;:27;2771:1;2761:9;;:11;;;;:::i;:::-;2746:27;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:61;2809:10;2831:1;2821:9;;:11;;;;:::i;:::-;2834:10;2846:15;2801:61;;;;;;;;;:::i;:::-;;;;;;;;2883:1;2872:9;;:12;;;;;;;:::i;:::-;;;;;;;;2434:457;2389:502;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:267::-;2080:10;2101:90;2187:3;2179:6;2101:90;:::i;:::-;2223:4;2218:3;2214:14;2200:28;;1967:267;;;;:::o;2240:108::-;2317:24;2335:5;2317:24;:::i;:::-;2312:3;2305:37;2240:108;;:::o;2354:118::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2354:118;;:::o;2550:908::-;2713:3;2742:76;2812:5;2742:76;:::i;:::-;2834:108;2935:6;2930:3;2834:108;:::i;:::-;2827:115;;2966:78;3038:5;2966:78;:::i;:::-;3067:7;3098:1;3083:350;3108:6;3105:1;3102:13;3083:350;;;3184:6;3178:13;3211:107;3314:3;3299:13;3211:107;:::i;:::-;3204:114;;3341:82;3416:6;3341:82;:::i;:::-;3331:92;;3143:290;3130:1;3127;3123:9;3118:14;;3083:350;;;3087:14;3449:3;3442:10;;2718:740;;;2550:908;;;;:::o;3464:109::-;3545:21;3560:5;3545:21;:::i;:::-;3540:3;3533:34;3464:109;;:::o;3579:366::-;3721:3;3742:67;3806:2;3801:3;3742:67;:::i;:::-;3735:74;;3818:93;3907:3;3818:93;:::i;:::-;3936:2;3931:3;3927:12;3920:19;;3579:366;;;:::o;3951:::-;4093:3;4114:67;4178:2;4173:3;4114:67;:::i;:::-;4107:74;;4190:93;4279:3;4190:93;:::i;:::-;4308:2;4303:3;4299:12;4292:19;;3951:366;;;:::o;4323:::-;4465:3;4486:67;4550:2;4545:3;4486:67;:::i;:::-;4479:74;;4562:93;4651:3;4562:93;:::i;:::-;4680:2;4675:3;4671:12;4664:19;;4323:366;;;:::o;4695:::-;4837:3;4858:67;4922:2;4917:3;4858:67;:::i;:::-;4851:74;;4934:93;5023:3;4934:93;:::i;:::-;5052:2;5047:3;5043:12;5036:19;;4695:366;;;:::o;5067:::-;5209:3;5230:67;5294:2;5289:3;5230:67;:::i;:::-;5223:74;;5306:93;5395:3;5306:93;:::i;:::-;5424:2;5419:3;5415:12;5408:19;;5067:366;;;:::o;5439:::-;5581:3;5602:67;5666:2;5661:3;5602:67;:::i;:::-;5595:74;;5678:93;5767:3;5678:93;:::i;:::-;5796:2;5791:3;5787:12;5780:19;;5439:366;;;:::o;5879:848::-;6010:4;6005:3;6001:14;6098:4;6091:5;6087:16;6081:23;6117:63;6174:4;6169:3;6165:14;6151:12;6117:63;:::i;:::-;6025:165;6274:4;6267:5;6263:16;6257:23;6293:63;6350:4;6345:3;6341:14;6327:12;6293:63;:::i;:::-;6200:166;6453:4;6446:5;6442:16;6436:23;6472:63;6529:4;6524:3;6520:14;6506:12;6472:63;:::i;:::-;6376:169;6632:4;6625:5;6621:16;6615:23;6651:59;6704:4;6699:3;6695:14;6681:12;6651:59;:::i;:::-;6555:165;5979:748;5879:848;;:::o;6801:858::-;6942:4;6937:3;6933:14;7030:4;7023:5;7019:16;7013:23;7049:63;7106:4;7101:3;7097:14;7083:12;7049:63;:::i;:::-;6957:165;7206:4;7199:5;7195:16;7189:23;7225:63;7282:4;7277:3;7273:14;7259:12;7225:63;:::i;:::-;7132:166;7385:4;7378:5;7374:16;7368:23;7404:63;7461:4;7456:3;7452:14;7438:12;7404:63;:::i;:::-;7308:169;7564:4;7557:5;7553:16;7547:23;7583:59;7636:4;7631:3;7627:14;7613:12;7583:59;:::i;:::-;7487:165;6911:748;6801:858;;:::o;7665:108::-;7742:24;7760:5;7742:24;:::i;:::-;7737:3;7730:37;7665:108;;:::o;7779:118::-;7866:24;7884:5;7866:24;:::i;:::-;7861:3;7854:37;7779:118;;:::o;7903:102::-;7976:22;7992:5;7976:22;:::i;:::-;7971:3;7964:35;7903:102;;:::o;8011:222::-;8104:4;8142:2;8131:9;8127:18;8119:26;;8155:71;8223:1;8212:9;8208:17;8199:6;8155:71;:::i;:::-;8011:222;;;;:::o;8239:442::-;8388:4;8426:2;8415:9;8411:18;8403:26;;8439:71;8507:1;8496:9;8492:17;8483:6;8439:71;:::i;:::-;8520:72;8588:2;8577:9;8573:18;8564:6;8520:72;:::i;:::-;8602;8670:2;8659:9;8655:18;8646:6;8602:72;:::i;:::-;8239:442;;;;;;:::o;8687:332::-;8808:4;8846:2;8835:9;8831:18;8823:26;;8859:71;8927:1;8916:9;8912:17;8903:6;8859:71;:::i;:::-;8940:72;9008:2;8997:9;8993:18;8984:6;8940:72;:::i;:::-;8687:332;;;;;:::o;9025:642::-;9246:4;9284:3;9273:9;9269:19;9261:27;;9298:71;9366:1;9355:9;9351:17;9342:6;9298:71;:::i;:::-;9379:72;9447:2;9436:9;9432:18;9423:6;9379:72;:::i;:::-;9461:116;9573:2;9562:9;9558:18;9549:6;9461:116;:::i;:::-;9587:73;9655:3;9644:9;9640:19;9631:6;9587:73;:::i;:::-;9025:642;;;;;;;:::o;9673:461::-;9860:4;9898:2;9887:9;9883:18;9875:26;;9947:9;9941:4;9937:20;9933:1;9922:9;9918:17;9911:47;9975:152;10122:4;10113:6;9975:152;:::i;:::-;9967:160;;9673:461;;;;:::o;10140:210::-;10227:4;10265:2;10254:9;10250:18;10242:26;;10278:65;10340:1;10329:9;10325:17;10316:6;10278:65;:::i;:::-;10140:210;;;;:::o;10356:419::-;10522:4;10560:2;10549:9;10545:18;10537:26;;10609:9;10603:4;10599:20;10595:1;10584:9;10580:17;10573:47;10637:131;10763:4;10637:131;:::i;:::-;10629:139;;10356:419;;;:::o;10781:::-;10947:4;10985:2;10974:9;10970:18;10962:26;;11034:9;11028:4;11024:20;11020:1;11009:9;11005:17;10998:47;11062:131;11188:4;11062:131;:::i;:::-;11054:139;;10781:419;;;:::o;11206:::-;11372:4;11410:2;11399:9;11395:18;11387:26;;11459:9;11453:4;11449:20;11445:1;11434:9;11430:17;11423:47;11487:131;11613:4;11487:131;:::i;:::-;11479:139;;11206:419;;;:::o;11631:::-;11797:4;11835:2;11824:9;11820:18;11812:26;;11884:9;11878:4;11874:20;11870:1;11859:9;11855:17;11848:47;11912:131;12038:4;11912:131;:::i;:::-;11904:139;;11631:419;;;:::o;12056:::-;12222:4;12260:2;12249:9;12245:18;12237:26;;12309:9;12303:4;12299:20;12295:1;12284:9;12280:17;12273:47;12337:131;12463:4;12337:131;:::i;:::-;12329:139;;12056:419;;;:::o;12481:::-;12647:4;12685:2;12674:9;12670:18;12662:26;;12734:9;12728:4;12724:20;12720:1;12709:9;12705:17;12698:47;12762:131;12888:4;12762:131;:::i;:::-;12754:139;;12481:419;;;:::o;12987:154::-;13076:4;13099:3;13091:11;;13129:4;13124:3;13120:14;13112:22;;12987:154;;;:::o;13147:136::-;13236:6;13270:5;13264:12;13254:22;;13147:136;;;:::o;13289:135::-;13381:4;13413;13408:3;13404:14;13396:22;;13289:135;;;:::o;13430:206::-;13551:11;13585:6;13580:3;13573:19;13625:4;13620:3;13616:14;13601:29;;13430:206;;;;:::o;13642:169::-;13726:11;13760:6;13755:3;13748:19;13800:4;13795:3;13791:14;13776:29;;13642:169;;;;:::o;13817:305::-;13857:3;13876:20;13894:1;13876:20;:::i;:::-;13871:25;;13910:20;13928:1;13910:20;:::i;:::-;13905:25;;14064:1;13996:66;13992:74;13989:1;13986:81;13983:107;;;14070:18;;:::i;:::-;13983:107;14114:1;14111;14107:9;14100:16;;13817:305;;;;:::o;14128:191::-;14168:4;14188:20;14206:1;14188:20;:::i;:::-;14183:25;;14222:20;14240:1;14222:20;:::i;:::-;14217:25;;14261:1;14258;14255:8;14252:34;;;14266:18;;:::i;:::-;14252:34;14311:1;14308;14304:9;14296:17;;14128:191;;;;:::o;14325:185::-;14363:4;14383:18;14399:1;14383:18;:::i;:::-;14378:23;;14415:18;14431:1;14415:18;:::i;:::-;14410:23;;14452:1;14449;14446:8;14443:34;;;14457:18;;:::i;:::-;14443:34;14502:1;14499;14495:9;14487:17;;14325:185;;;;:::o;14516:96::-;14553:7;14582:24;14600:5;14582:24;:::i;:::-;14571:35;;14516:96;;;:::o;14618:90::-;14652:7;14695:5;14688:13;14681:21;14670:32;;14618:90;;;:::o;14714:126::-;14751:7;14791:42;14784:5;14780:54;14769:65;;14714:126;;;:::o;14846:77::-;14883:7;14912:5;14901:16;;14846:77;;;:::o;14929:86::-;14964:7;15004:4;14997:5;14993:16;14982:27;;14929:86;;;:::o;15021:167::-;15058:3;15081:22;15097:5;15081:22;:::i;:::-;15072:31;;15125:4;15118:5;15115:15;15112:41;;;15133:18;;:::i;:::-;15112:41;15180:1;15173:5;15169:13;15162:20;;15021:167;;;:::o;15194:180::-;15242:77;15239:1;15232:88;15339:4;15336:1;15329:15;15363:4;15360:1;15353:15;15380:180;15428:77;15425:1;15418:88;15525:4;15522:1;15515:15;15549:4;15546:1;15539:15;15566:180;15614:77;15611:1;15604:88;15711:4;15708:1;15701:15;15735:4;15732:1;15725:15;15875:117;15984:1;15981;15974:12;15998:177;16138:29;16134:1;16126:6;16122:14;16115:53;15998:177;:::o;16181:225::-;16321:34;16317:1;16309:6;16305:14;16298:58;16390:8;16385:2;16377:6;16373:15;16366:33;16181:225;:::o;16412:172::-;16552:24;16548:1;16540:6;16536:14;16529:48;16412:172;:::o;16590:170::-;16730:22;16726:1;16718:6;16714:14;16707:46;16590:170;:::o;16766:182::-;16906:34;16902:1;16894:6;16890:14;16883:58;16766:182;:::o;16954:170::-;17094:22;17090:1;17082:6;17078:14;17071:46;16954:170;:::o;17130:122::-;17203:24;17221:5;17203:24;:::i;:::-;17196:5;17193:35;17183:63;;17242:1;17239;17232:12;17183:63;17130:122;:::o;17258:116::-;17328:21;17343:5;17328:21;:::i;:::-;17321:5;17318:32;17308:60;;17364:1;17361;17354:12;17308:60;17258:116;:::o;17380:122::-;17453:24;17471:5;17453:24;:::i;:::-;17446:5;17443:35;17433:63;;17492:1;17489;17482:12;17433:63;17380:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1218800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"GetStakingHistory()": "infinite",
								"SetStakingToken(address)": "27006",
								"StakeToken(uint256)": "infinite",
								"StakingEnabled()": "2493",
								"ToggleStaking()": "28791",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30397",
								"transferOwnership(address)": "30811"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5044,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ad391c68e294b83de53995806b5226da70238b63a5d6dc976fab378f98ea59364736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5044,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1691,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1719,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1833,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1810,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1833,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1923,
											"end": 1933,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1944,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2020,
											"end": 2030,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612"
										},
										{
											"begin": 2251,
											"end": 2261,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2301,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2960,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2972,
											"end": 2993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3008,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3035,
											"end": 3046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3048,
											"end": 3061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3061,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3030,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 3153,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2478,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2489,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2590,
											"end": 2600,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2645,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "117"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2218,
											"end": 2221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2812,
											"end": 2817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2942,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3318,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3423,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3118,
											"end": 3132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3118,
											"end": 3132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3452,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3452,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3806,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3801,
											"end": 3804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4178,
											"end": 4180,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4173,
											"end": 4176,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4279,
											"end": 4282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4545,
											"end": 4548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4479,
											"end": 4553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4479,
											"end": 4553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4651,
											"end": 4654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5023,
											"end": 5026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5292,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5661,
											"end": 5664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5767,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6010,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6005,
											"end": 6008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6103,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6257,
											"end": 6280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6345,
											"end": 6348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6446,
											"end": 6451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6529,
											"end": 6533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 6637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6615,
											"end": 6638,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6699,
											"end": 6702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6937,
											"end": 6940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7013,
											"end": 7036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7106,
											"end": 7110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7111,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 7122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7210,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7259,
											"end": 7271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7461,
											"end": 7465,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7452,
											"end": 7466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7308,
											"end": 7477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7636,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7631,
											"end": 7634,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7641,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6911,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7760,
											"end": 7765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 7767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7884,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7992,
											"end": 7997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8144,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8140,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8223,
											"end": 8224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8208,
											"end": 8225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8199,
											"end": 8205,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8155,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8415,
											"end": 8424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8403,
											"end": 8429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8403,
											"end": 8429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8439,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8507,
											"end": 8508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8496,
											"end": 8505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8492,
											"end": 8509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8483,
											"end": 8489,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8439,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8439,
											"end": 8510,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8439,
											"end": 8510,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8439,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8520,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8564,
											"end": 8570,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8520,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8520,
											"end": 8592,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8592,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8520,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8670,
											"end": 8672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8602,
											"end": 8674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8602,
											"end": 8674,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8602,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8681,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8808,
											"end": 8812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 8849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 8927,
											"end": 8928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8925,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8912,
											"end": 8929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 8909,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8859,
											"end": 8930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8859,
											"end": 8930,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 8859,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9008,
											"end": 9010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8997,
											"end": 9006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8993,
											"end": 9011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8940,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8940,
											"end": 9012,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8940,
											"end": 9012,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 8940,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8687,
											"end": 9019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9287,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9273,
											"end": 9282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9269,
											"end": 9288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9351,
											"end": 9368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9298,
											"end": 9369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9298,
											"end": 9369,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9298,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9379,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9447,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9436,
											"end": 9445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9429,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9379,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9379,
											"end": 9451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9379,
											"end": 9451,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9379,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 9461,
											"end": 9577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9461,
											"end": 9577,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9461,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9655,
											"end": 9658,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 9644,
											"end": 9653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9640,
											"end": 9659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 9637,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9587,
											"end": 9660,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9587,
											"end": 9660,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9587,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9025,
											"end": 9667,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9860,
											"end": 9864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9898,
											"end": 9900,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 9896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9883,
											"end": 9901,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 9901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 9901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9937,
											"end": 9957,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9933,
											"end": 9934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9931,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9935,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9958,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9975,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10122,
											"end": 10126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10113,
											"end": 10119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9975,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 9975,
											"end": 10127,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9975,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9975,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9967,
											"end": 10127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9967,
											"end": 10127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10134,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10278,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10340,
											"end": 10341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10329,
											"end": 10338,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10278,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10278,
											"end": 10343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10278,
											"end": 10343,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10278,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10140,
											"end": 10350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10560,
											"end": 10562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10545,
											"end": 10563,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10537,
											"end": 10563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10537,
											"end": 10563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10609,
											"end": 10618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10603,
											"end": 10607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10619,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10595,
											"end": 10596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10573,
											"end": 10620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 10763,
											"end": 10767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10637,
											"end": 10768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10637,
											"end": 10768,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 10637,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10629,
											"end": 10768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10629,
											"end": 10768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10356,
											"end": 10775,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 10951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10962,
											"end": 10988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10962,
											"end": 10988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11028,
											"end": 11032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10998,
											"end": 11045,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 11188,
											"end": 11192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 11062,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11054,
											"end": 11193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10781,
											"end": 11200,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11410,
											"end": 11412,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11399,
											"end": 11408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11395,
											"end": 11413,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11387,
											"end": 11413,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11387,
											"end": 11413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11459,
											"end": 11468,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11453,
											"end": 11457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11445,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11434,
											"end": 11443,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11430,
											"end": 11447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11423,
											"end": 11470,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11613,
											"end": 11617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 11487,
											"end": 11618,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11487,
											"end": 11618,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11487,
											"end": 11618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11479,
											"end": 11618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11625,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11797,
											"end": 11801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11835,
											"end": 11837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11820,
											"end": 11838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11812,
											"end": 11838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11812,
											"end": 11838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11884,
											"end": 11893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11874,
											"end": 11894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11859,
											"end": 11868,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11855,
											"end": 11872,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11848,
											"end": 11895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 12038,
											"end": 12042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 11912,
											"end": 12043,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11912,
											"end": 12043,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 11912,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11904,
											"end": 12043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11904,
											"end": 12043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 12050,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12249,
											"end": 12258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12245,
											"end": 12263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12237,
											"end": 12263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12237,
											"end": 12263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12309,
											"end": 12318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12303,
											"end": 12307,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12299,
											"end": 12319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12284,
											"end": 12293,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12280,
											"end": 12297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12273,
											"end": 12320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12337,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12463,
											"end": 12467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12337,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 12337,
											"end": 12468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12337,
											"end": 12468,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 12337,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12329,
											"end": 12468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12329,
											"end": 12468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12475,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12647,
											"end": 12651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12685,
											"end": 12687,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12674,
											"end": 12683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12662,
											"end": 12688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12734,
											"end": 12743,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12728,
											"end": 12732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12724,
											"end": 12744,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12720,
											"end": 12721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12705,
											"end": 12722,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12698,
											"end": 12745,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12762,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12762,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 12762,
											"end": 12893,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12762,
											"end": 12893,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12762,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12754,
											"end": 12893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12754,
											"end": 12893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12900,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13076,
											"end": 13080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13091,
											"end": 13102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13091,
											"end": 13102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13129,
											"end": 13133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13124,
											"end": 13127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13120,
											"end": 13134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13112,
											"end": 13134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12987,
											"end": 13141,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13236,
											"end": 13242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13270,
											"end": 13275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13264,
											"end": 13276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13254,
											"end": 13276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13254,
											"end": 13276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13147,
											"end": 13283,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13413,
											"end": 13417,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13408,
											"end": 13411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13404,
											"end": 13418,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13396,
											"end": 13418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13396,
											"end": 13418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13551,
											"end": 13562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13585,
											"end": 13591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13580,
											"end": 13583,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13573,
											"end": 13592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13625,
											"end": 13629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13620,
											"end": 13623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13616,
											"end": 13630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13601,
											"end": 13630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13601,
											"end": 13630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13430,
											"end": 13636,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13726,
											"end": 13737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13748,
											"end": 13767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13800,
											"end": 13804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13795,
											"end": 13798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13791,
											"end": 13805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13776,
											"end": 13805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13776,
											"end": 13805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13642,
											"end": 13811,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13857,
											"end": 13860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 13894,
											"end": 13895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 13876,
											"end": 13896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 13928,
											"end": 13929,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13905,
											"end": 13930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13905,
											"end": 13930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14064,
											"end": 14065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13996,
											"end": 14062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13992,
											"end": 14066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13986,
											"end": 14067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 13983,
											"end": 14090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13983,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 13983,
											"end": 14090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14070,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 14070,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 14070,
											"end": 14088,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14070,
											"end": 14088,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 14070,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13983,
											"end": 14090,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 13983,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14114,
											"end": 14115,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14107,
											"end": 14116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14100,
											"end": 14116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13817,
											"end": 14122,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14168,
											"end": 14172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 14206,
											"end": 14207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14188,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 14188,
											"end": 14208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14188,
											"end": 14208,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 14188,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14183,
											"end": 14208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14183,
											"end": 14208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 14240,
											"end": 14241,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 14222,
											"end": 14242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14217,
											"end": 14242,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14217,
											"end": 14242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14261,
											"end": 14262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14258,
											"end": 14259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14255,
											"end": 14263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 14252,
											"end": 14286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14266,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 14266,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 14266,
											"end": 14284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14266,
											"end": 14284,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 14266,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14252,
											"end": 14286,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 14252,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14311,
											"end": 14312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14304,
											"end": 14313,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14296,
											"end": 14313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14296,
											"end": 14313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14128,
											"end": 14319,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 14399,
											"end": 14400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 14415,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14410,
											"end": 14433,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14410,
											"end": 14433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14452,
											"end": 14453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14446,
											"end": 14454,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 14443,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14502,
											"end": 14503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14495,
											"end": 14504,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14487,
											"end": 14504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14487,
											"end": 14504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14510,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14553,
											"end": 14560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 14600,
											"end": 14605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14582,
											"end": 14606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14582,
											"end": 14606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14582,
											"end": 14606,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 14582,
											"end": 14606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14571,
											"end": 14606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14571,
											"end": 14606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14612,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14652,
											"end": 14659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14695,
											"end": 14700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14688,
											"end": 14701,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14681,
											"end": 14702,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14670,
											"end": 14702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14670,
											"end": 14702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14618,
											"end": 14708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14751,
											"end": 14758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14833,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14784,
											"end": 14789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14780,
											"end": 14834,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14769,
											"end": 14834,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14769,
											"end": 14834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 14840,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14883,
											"end": 14890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14912,
											"end": 14917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14901,
											"end": 14917,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14846,
											"end": 14923,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14964,
											"end": 14971,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15004,
											"end": 15008,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 14997,
											"end": 15002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14993,
											"end": 15009,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14982,
											"end": 15009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14982,
											"end": 15009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14929,
											"end": 15015,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15058,
											"end": 15061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 15097,
											"end": 15102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 15081,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15072,
											"end": 15103,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15072,
											"end": 15103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15125,
											"end": 15129,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15118,
											"end": 15123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15112,
											"end": 15153,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15112,
											"end": 15153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 15112,
											"end": 15153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 15133,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15112,
											"end": 15153,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 15112,
											"end": 15153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15180,
											"end": 15181,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15173,
											"end": 15178,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15169,
											"end": 15182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15162,
											"end": 15182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15162,
											"end": 15182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15021,
											"end": 15188,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15194,
											"end": 15374,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 15194,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15242,
											"end": 15319,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15239,
											"end": 15240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15232,
											"end": 15320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15339,
											"end": 15343,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15329,
											"end": 15344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15363,
											"end": 15367,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 15360,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15368,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15380,
											"end": 15560,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 15380,
											"end": 15560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15428,
											"end": 15505,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15425,
											"end": 15426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15418,
											"end": 15506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15525,
											"end": 15529,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15515,
											"end": 15530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15549,
											"end": 15553,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 15546,
											"end": 15547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15539,
											"end": 15554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15566,
											"end": 15746,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 15566,
											"end": 15746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15614,
											"end": 15691,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15611,
											"end": 15612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15711,
											"end": 15715,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 15708,
											"end": 15709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15701,
											"end": 15716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15735,
											"end": 15739,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 15732,
											"end": 15733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15725,
											"end": 15740,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15875,
											"end": 15992,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 15875,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15984,
											"end": 15985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15974,
											"end": 15986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15998,
											"end": 16175,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 15998,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16138,
											"end": 16167,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 16134,
											"end": 16135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16126,
											"end": 16132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16122,
											"end": 16136,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16115,
											"end": 16168,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15998,
											"end": 16175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15998,
											"end": 16175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16181,
											"end": 16406,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 16181,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16321,
											"end": 16355,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16317,
											"end": 16318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16309,
											"end": 16315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16305,
											"end": 16319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16298,
											"end": 16356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16390,
											"end": 16398,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 16377,
											"end": 16383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16373,
											"end": 16388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16366,
											"end": 16399,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16181,
											"end": 16406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16181,
											"end": 16406,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16412,
											"end": 16584,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 16412,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16552,
											"end": 16576,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 16548,
											"end": 16549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16540,
											"end": 16546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16529,
											"end": 16577,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16412,
											"end": 16584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16412,
											"end": 16584,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16590,
											"end": 16760,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 16590,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 16726,
											"end": 16727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16718,
											"end": 16724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16714,
											"end": 16728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16707,
											"end": 16753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16590,
											"end": 16760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16590,
											"end": 16760,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16766,
											"end": 16948,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 16766,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16906,
											"end": 16940,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16902,
											"end": 16903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16894,
											"end": 16900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16890,
											"end": 16904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16883,
											"end": 16941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16766,
											"end": 16948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16766,
											"end": 16948,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16954,
											"end": 17124,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 16954,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17094,
											"end": 17116,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 17090,
											"end": 17091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17082,
											"end": 17088,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17078,
											"end": 17092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17071,
											"end": 17117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16954,
											"end": 17124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16954,
											"end": 17124,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17130,
											"end": 17252,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 17130,
											"end": 17252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17203,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 17221,
											"end": 17226,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17203,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 17203,
											"end": 17227,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17203,
											"end": 17227,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 17203,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17196,
											"end": 17201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17193,
											"end": 17228,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17183,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 17183,
											"end": 17246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17242,
											"end": 17243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17239,
											"end": 17240,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17232,
											"end": 17244,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17183,
											"end": 17246,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 17183,
											"end": 17246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17130,
											"end": 17252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17130,
											"end": 17252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17258,
											"end": 17374,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 17258,
											"end": 17374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17328,
											"end": 17349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 17343,
											"end": 17348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17328,
											"end": 17349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 17328,
											"end": 17349,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17328,
											"end": 17349,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 17328,
											"end": 17349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17321,
											"end": 17326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17318,
											"end": 17350,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 17308,
											"end": 17368,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17364,
											"end": 17365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17354,
											"end": 17366,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17368,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 17308,
											"end": 17368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17258,
											"end": 17374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17258,
											"end": 17374,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17380,
											"end": 17502,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 17380,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17453,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 17471,
											"end": 17476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17453,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 17453,
											"end": 17477,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17453,
											"end": 17477,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 17453,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17446,
											"end": 17451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17443,
											"end": 17478,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17433,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 17433,
											"end": 17496,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17492,
											"end": 17493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17490,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17482,
											"end": 17494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17433,
											"end": 17496,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 17433,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17380,
											"end": 17502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17380,
											"end": 17502,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakingHistory()": "b0adfa09",
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingEnabled()": "da917aea",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GetStakingHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"internalType\":\"struct StakingContract.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x0e962b0aa81778cd2e909925aa0dc8666c52786d1ae3ba3059cca5db45b631bc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b4f96182971adccb97821936d398c2560853cc7ae1f09746ab867e6a08c12031\",\"dweb:/ipfs/QmQUJCBHEZVByUtqtCsuAx2EirFcdVSLuDV6RQqzMRZ7n2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "EventTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "eventType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							463
						]
					},
					"id": 464,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 464,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 464,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 463,
							"linearizedBaseContracts": [
								463,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "EventTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "eventType",
											"nameLocation": "781:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "775:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 174,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "775:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 463,
									"src": "532:265:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "876:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "852:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "852:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "869:5:2"
											},
											"referencedDeclaration": 176,
											"src": "869:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "953:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 463,
									"src": "927:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "927:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "944:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1018:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:0:2"
									},
									"scope": 463,
									"src": "991:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1053:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:2"
									},
									"scope": 463,
									"src": "1025:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1080:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1097:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1089:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1113:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1105:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1123:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1117:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1117:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1117:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1138:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1130:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:60:2"
									},
									"src": "1074:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1160:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1176:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1168:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1192:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1184:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1202:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1196:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1196:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1196:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1217:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1209:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:60:2"
									},
									"src": "1154:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1344:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1354:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1369:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1354:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1354:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1334:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1334:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1295:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1319:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1311:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:2"
									},
									"scope": 463,
									"src": "1286:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1434:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1444:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1461:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1462:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1444:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1444:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1424:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1424:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1401:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:0:2"
									},
									"scope": 463,
									"src": "1392:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1588:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1606:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1598:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1665:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1681:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1681:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1665:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1695:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1665:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1713:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1717:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1713:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1705:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1665:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1657:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1784:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1800:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1800:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1784:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1814:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1824:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1827:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1831:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1827:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1824:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1784:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1835:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1776:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1923:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1923:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1899:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1893:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1893:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1893:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1893:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1938:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1893:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1884:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1884:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2020:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2020:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2040:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$463",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$463",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2032:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2032:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1993:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1987:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1987:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1987:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1987:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2064:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2080:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2080:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2064:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2095:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2064:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2064:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2124:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2111:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2111:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2111:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2141:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2141:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2152:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2160:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2160:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2135:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2111:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2189:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2204:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2214:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2204:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2189:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2219:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2189:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2189:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2251:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2251:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2263:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2273:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2263:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2276:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2286:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2286:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2242:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2237:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2312:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2323:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2312:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2312:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1554:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1573:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1565:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:0:2"
									},
									"scope": 463,
									"src": "1545:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2434:457:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2452:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2468:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2468:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2452:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2483:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2452:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2491:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2444:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2444:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2590:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2590:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2602:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2567:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2561:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2561:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "2561:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2561:48:2"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 373,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2619:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2635:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2635:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2619:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2650:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2619:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2619:37:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "newUnstake",
														"nameLocation": "2679:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2666:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 380,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2666:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2666:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2698:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2698:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2709:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 387,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2717:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2717:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2734:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 383,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2692:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2666:70:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2746:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 396,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2761:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2761:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2746:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "newUnstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2776:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2746:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2746:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2809:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2809:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2821:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2831:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2821:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "newUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2834:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2846:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2846:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2801:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2801:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "EmitStatement",
												"src": "2796:66:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2872:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2883:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2872:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2872:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2398:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2419:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2411:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:0:2"
									},
									"scope": 463,
									"src": "2389:502:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2962:191:2",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "2987:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 461,
														"src": "2972:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 425,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 424,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "2972:5:2"
																},
																"referencedDeclaration": 176,
																"src": "2972:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 426,
															"nodeType": "ArrayTypeName",
															"src": "2972:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3008:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3018:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3008:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2996:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct StakingContract.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 429,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 428,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "3000:5:2"
																},
																"referencedDeclaration": 176,
																"src": "3000:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 430,
															"nodeType": "ArrayTypeName",
															"src": "3000:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2996:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct StakingContract.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2972:48:2"
											},
											{
												"body": {
													"id": 457,
													"nodeType": "Block",
													"src": "3068:56:2",
													"statements": [
														{
															"expression": {
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 447,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "3082:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct StakingContract.Stake memory[] memory"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 448,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "3089:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3091:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3089:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3082:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 452,
																		"name": "StakingHistory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "3096:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																			"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
																		}
																	},
																	"id": 454,
																	"indexExpression": {
																		"id": 453,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "3111:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3096:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_storage",
																		"typeString": "struct StakingContract.Stake storage ref"
																	}
																},
																"src": "3082:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "3082:31:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "3048:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 442,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3052:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3048:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"initializationExpression": {
													"assignments": [
														438
													],
													"declarations": [
														{
															"constant": false,
															"id": 438,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3041:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 458,
															"src": "3035:7:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 437,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3035:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 440,
													"initialValue": {
														"hexValue": "31",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3045:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3035:11:2"
												},
												"loopExpression": {
													"expression": {
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3063:3:2",
														"subExpression": {
															"id": 444,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3063:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 446,
													"nodeType": "ExpressionStatement",
													"src": "3063:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3030:94:2"
											},
											{
												"expression": {
													"id": 459,
													"name": "stakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "3140:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct StakingContract.Stake memory[] memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 460,
												"nodeType": "Return",
												"src": "3133:13:2"
											}
										]
									},
									"functionSelector": "b0adfa09",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakingHistory",
									"nameLocation": "2906:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2923:2:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2946:14:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct StakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 419,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 418,
															"name": "Stake",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 176,
															"src": "2946:5:2"
														},
														"referencedDeclaration": 176,
														"src": "2946:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														}
													},
													"id": 420,
													"nodeType": "ArrayTypeName",
													"src": "2946:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
														"typeString": "struct StakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:16:2"
									},
									"scope": 463,
									"src": "2897:256:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 464,
							"src": "386:4658:2",
							"usedErrors": []
						}
					],
					"src": "36:5008:2"
				},
				"id": 2
			}
		}
	}
}