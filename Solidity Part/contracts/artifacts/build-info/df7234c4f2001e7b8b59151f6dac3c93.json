{
	"id": "df7234c4f2001e7b8b59151f6dac3c93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 EventTime;\n        //stake (0) or unstake (1)\n        uint8 eventType;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n\n    //set the erc20 token address for the contract\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner {\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\"); //unstaking more than staked\n\n        ERC20(StakingToken).transfer(msg.sender, amount);\n        StakingBalances[msg.sender] -= amount;\n        Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1);\n        StakingHistory[currentID+1] = newUnstake;\n        emit Unstake(msg.sender, currentID+1, newUnstake, block.timestamp);\n        currentID+=1;\n    }\n\n    function GetStakingHistory() public {\n\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xb491ebb0664c44aef30492ccf9df57ba1ebb12f29cf5e40b74df7184fe4ffe65\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7b1db5c7ad0fde1586da0642996ae31de8b9042e15bcae2ea805ec107bb682c2\",\"dweb:/ipfs/QmUMH4UUVGYZEHESjNsBwk2jFaridBUArp1R6fKrbmWJhU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "GetStakingHistory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:4832  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:4832  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:4832  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:4832  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:4832  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb0adfa09\n      gt\n      tag_12\n      jumpi\n      dup1\n      0xb0adfa09\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x64cb560c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2897:2941  function GetStakingHistory() public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"Solidity Part/contracts/staking.sol\":1462:1476  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1461:1476  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1444:1458  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1444:1476  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1392:1483  function ToggleStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_60\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n    tag_32:\n        /* \"Solidity Part/contracts/staking.sol\":1606:1620  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1598:1647  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"Solidity Part/contracts/staking.sol\":1705:1719  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1695:1701  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1665:1680  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1665:1692  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1681:1691  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1665:1692  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1665:1701  StakingBalances[msg.sender] + amount */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"Solidity Part/contracts/staking.sol\":1665:1719  StakingBalances[msg.sender] + amount >= 1000000*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1657:1744  require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Solidity Part/contracts/staking.sol\":1824:1833  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1814:1820  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1784:1799  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1784:1811  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1800:1810  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1784:1811  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1784:1820  StakingBalances[msg.sender] + amount */\n      tag_80\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_80:\n        /* \"Solidity Part/contracts/staking.sol\":1784:1833  StakingBalances[msg.sender] + amount <= 10*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1776:1858  require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"Solidity Part/contracts/staking.sol\":1938:1944  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1899:1911  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1893:1922  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1923:1933  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1893:1934  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"Solidity Part/contracts/staking.sol\":1893:1944  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1884:1976  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"Solidity Part/contracts/staking.sol\":1993:2005  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1987:2019  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":2020:2030  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2040:2044  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":2047:2053  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":1987:2054  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2095:2101  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2064:2079  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2064:2091  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2080:2090  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2064:2091  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2064:2101  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_100\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_100:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2111:2132  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2141:2151  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2152:2158  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2160:2175  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2177:2178  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2135:2179  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2111:2179  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2219:2227  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2189:2203  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2189:2216  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2214:2215  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2204:2213  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2204:2215  currentID+1 */\n      tag_101\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"Solidity Part/contracts/staking.sol\":2189:2216  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2189:2227  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2242:2302  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b612\n        /* \"Solidity Part/contracts/staking.sol\":2251:2261  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2273:2274  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2263:2272  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2263:2274  currentID+1 */\n      tag_102\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_102:\n        /* \"Solidity Part/contracts/staking.sol\":2276:2284  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2286:2301  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2242:2302  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_103\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2323:2324  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2312:2321  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2312:2324  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1588:2331  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1545:2331  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2897:2941  function GetStakingHistory() public {... */\n    tag_35:\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_38:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_60\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"Solidity Part/contracts/staking.sol\":1369:1375  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1354:1366  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1354:1375  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1286:1382  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n    tag_49:\n        /* \"Solidity Part/contracts/staking.sol\":2483:2489  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2452:2467  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2452:2479  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2468:2478  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2452:2479  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2452:2489  StakingBalances[msg.sender] <= amount */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2444:2521  require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_92\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Solidity Part/contracts/staking.sol\":2567:2579  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2561:2589  ERC20(StakingToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Solidity Part/contracts/staking.sol\":2590:2600  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2602:2608  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2561:2609  ERC20(StakingToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_121:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2650:2656  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2619:2634  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2619:2646  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2635:2645  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2619:2646  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2619:2656  StakingBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2666:2689  Stake memory newUnstake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2698:2708  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2709:2715  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2717:2732  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2734:2735  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2692:2736  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2666:2736  Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2776:2786  newUnstake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2746:2760  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2746:2773  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2771:2772  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2761:2770  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2761:2772  currentID+1 */\n      tag_124\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_124:\n        /* \"Solidity Part/contracts/staking.sol\":2746:2773  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2746:2786  StakingHistory[currentID+1] = newUnstake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2801:2862  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      0x27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24\n        /* \"Solidity Part/contracts/staking.sol\":2809:2819  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2831:2832  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2821:2830  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2821:2832  currentID+1 */\n      tag_125\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_125:\n        /* \"Solidity Part/contracts/staking.sol\":2834:2844  newUnstake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2846:2861  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2801:2862  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      mload(0x40)\n      tag_126\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2883:2884  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2872:2881  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2872:2884  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2434:2891  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2389:2891  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_25\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_60\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_141:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_143\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_145:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_147\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_149:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_151\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_153:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_155\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_152\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_44:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":665:784   */\n    tag_157:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_160\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_141\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_99:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_163\n      tag_159\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1008:1127   */\n    tag_162:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_164\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_145\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_31:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_167\n      tag_159\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1351:1470   */\n    tag_166:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_168\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_149\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_89:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_171\n      tag_159\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1697:1816   */\n    tag_170:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_172\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_153\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2075   */\n    tag_173:\n        /* \"#utility.yul\":2044:2068   */\n      tag_175\n        /* \"#utility.yul\":2062:2067   */\n      dup2\n        /* \"#utility.yul\":2044:2068   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2039:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2069   */\n      mstore\n        /* \"#utility.yul\":1967:2075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2199   */\n    tag_177:\n        /* \"#utility.yul\":2168:2192   */\n      tag_179\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2168:2192   */\n      tag_176\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2193   */\n      mstore\n        /* \"#utility.yul\":2081:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2314   */\n    tag_180:\n        /* \"#utility.yul\":2286:2307   */\n      tag_182\n        /* \"#utility.yul\":2301:2306   */\n      dup2\n        /* \"#utility.yul\":2286:2307   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2281:2284   */\n      dup3\n        /* \"#utility.yul\":2274:2308   */\n      mstore\n        /* \"#utility.yul\":2205:2314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2686   */\n    tag_184:\n        /* \"#utility.yul\":2462:2465   */\n      0x00\n        /* \"#utility.yul\":2483:2550   */\n      tag_186\n        /* \"#utility.yul\":2547:2549   */\n      0x1b\n        /* \"#utility.yul\":2542:2545   */\n      dup4\n        /* \"#utility.yul\":2483:2550   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2476:2550   */\n      swap2\n      pop\n        /* \"#utility.yul\":2559:2652   */\n      tag_188\n        /* \"#utility.yul\":2648:2651   */\n      dup3\n        /* \"#utility.yul\":2559:2652   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2672:2675   */\n      dup3\n        /* \"#utility.yul\":2668:2680   */\n      add\n        /* \"#utility.yul\":2661:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2320:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:3058   */\n    tag_190:\n        /* \"#utility.yul\":2834:2837   */\n      0x00\n        /* \"#utility.yul\":2855:2922   */\n      tag_192\n        /* \"#utility.yul\":2919:2921   */\n      0x26\n        /* \"#utility.yul\":2914:2917   */\n      dup4\n        /* \"#utility.yul\":2855:2922   */\n      tag_187\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2848:2922   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3024   */\n      tag_193\n        /* \"#utility.yul\":3020:3023   */\n      dup3\n        /* \"#utility.yul\":2931:3024   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3052   */\n      add\n        /* \"#utility.yul\":3033:3052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:3058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3430   */\n    tag_195:\n        /* \"#utility.yul\":3206:3209   */\n      0x00\n        /* \"#utility.yul\":3227:3294   */\n      tag_197\n        /* \"#utility.yul\":3291:3293   */\n      0x16\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3227:3294   */\n      tag_187\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3220:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3303:3396   */\n      tag_198\n        /* \"#utility.yul\":3392:3395   */\n      dup3\n        /* \"#utility.yul\":3303:3396   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3412:3424   */\n      add\n        /* \"#utility.yul\":3405:3424   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3802   */\n    tag_200:\n        /* \"#utility.yul\":3578:3581   */\n      0x00\n        /* \"#utility.yul\":3599:3666   */\n      tag_202\n        /* \"#utility.yul\":3663:3665   */\n      0x14\n        /* \"#utility.yul\":3658:3661   */\n      dup4\n        /* \"#utility.yul\":3599:3666   */\n      tag_187\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3592:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3768   */\n      tag_203\n        /* \"#utility.yul\":3764:3767   */\n      dup3\n        /* \"#utility.yul\":3675:3768   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3784:3796   */\n      add\n        /* \"#utility.yul\":3777:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4174   */\n    tag_205:\n        /* \"#utility.yul\":3950:3953   */\n      0x00\n        /* \"#utility.yul\":3971:4038   */\n      tag_207\n        /* \"#utility.yul\":4035:4037   */\n      0x20\n        /* \"#utility.yul\":4030:4033   */\n      dup4\n        /* \"#utility.yul\":3971:4038   */\n      tag_187\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3964:4038   */\n      swap2\n      pop\n        /* \"#utility.yul\":4047:4140   */\n      tag_208\n        /* \"#utility.yul\":4136:4139   */\n      dup3\n        /* \"#utility.yul\":4047:4140   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4156:4168   */\n      add\n        /* \"#utility.yul\":4149:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_210:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_212\n        /* \"#utility.yul\":4407:4409   */\n      0x14\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_187\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_213\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:5478   */\n    tag_215:\n        /* \"#utility.yul\":4761:4765   */\n      0x80\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4752:4766   */\n      add\n        /* \"#utility.yul\":4849:4853   */\n      0x00\n        /* \"#utility.yul\":4842:4847   */\n      dup3\n        /* \"#utility.yul\":4838:4854   */\n      add\n        /* \"#utility.yul\":4832:4855   */\n      mload\n        /* \"#utility.yul\":4868:4931   */\n      tag_217\n        /* \"#utility.yul\":4925:4929   */\n      0x00\n        /* \"#utility.yul\":4920:4923   */\n      dup6\n        /* \"#utility.yul\":4916:4930   */\n      add\n        /* \"#utility.yul\":4902:4914   */\n      dup3\n        /* \"#utility.yul\":4868:4931   */\n      tag_173\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4776:4941   */\n      pop\n        /* \"#utility.yul\":5025:5029   */\n      0x20\n        /* \"#utility.yul\":5018:5023   */\n      dup3\n        /* \"#utility.yul\":5014:5030   */\n      add\n        /* \"#utility.yul\":5008:5031   */\n      mload\n        /* \"#utility.yul\":5044:5107   */\n      tag_218\n        /* \"#utility.yul\":5101:5105   */\n      0x20\n        /* \"#utility.yul\":5096:5099   */\n      dup6\n        /* \"#utility.yul\":5092:5106   */\n      add\n        /* \"#utility.yul\":5078:5090   */\n      dup3\n        /* \"#utility.yul\":5044:5107   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4951:5117   */\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x40\n        /* \"#utility.yul\":5197:5202   */\n      dup3\n        /* \"#utility.yul\":5193:5209   */\n      add\n        /* \"#utility.yul\":5187:5210   */\n      mload\n        /* \"#utility.yul\":5223:5286   */\n      tag_220\n        /* \"#utility.yul\":5280:5284   */\n      0x40\n        /* \"#utility.yul\":5275:5278   */\n      dup6\n        /* \"#utility.yul\":5271:5285   */\n      add\n        /* \"#utility.yul\":5257:5269   */\n      dup3\n        /* \"#utility.yul\":5223:5286   */\n      tag_219\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5127:5296   */\n      pop\n        /* \"#utility.yul\":5383:5387   */\n      0x60\n        /* \"#utility.yul\":5376:5381   */\n      dup3\n        /* \"#utility.yul\":5372:5388   */\n      add\n        /* \"#utility.yul\":5366:5389   */\n      mload\n        /* \"#utility.yul\":5402:5461   */\n      tag_221\n        /* \"#utility.yul\":5455:5459   */\n      0x60\n        /* \"#utility.yul\":5450:5453   */\n      dup6\n        /* \"#utility.yul\":5446:5460   */\n      add\n        /* \"#utility.yul\":5432:5444   */\n      dup3\n        /* \"#utility.yul\":5402:5461   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5306:5471   */\n      pop\n        /* \"#utility.yul\":4730:5478   */\n      pop\n        /* \"#utility.yul\":4620:5478   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5592   */\n    tag_219:\n        /* \"#utility.yul\":5561:5585   */\n      tag_224\n        /* \"#utility.yul\":5579:5584   */\n      dup2\n        /* \"#utility.yul\":5561:5585   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5556:5559   */\n      dup3\n        /* \"#utility.yul\":5549:5586   */\n      mstore\n        /* \"#utility.yul\":5484:5592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5598:5716   */\n    tag_226:\n        /* \"#utility.yul\":5685:5709   */\n      tag_228\n        /* \"#utility.yul\":5703:5708   */\n      dup2\n        /* \"#utility.yul\":5685:5709   */\n      tag_225\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5680:5683   */\n      dup3\n        /* \"#utility.yul\":5673:5710   */\n      mstore\n        /* \"#utility.yul\":5598:5716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5722:5824   */\n    tag_222:\n        /* \"#utility.yul\":5795:5817   */\n      tag_230\n        /* \"#utility.yul\":5811:5816   */\n      dup2\n        /* \"#utility.yul\":5795:5817   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5790:5793   */\n      dup3\n        /* \"#utility.yul\":5783:5818   */\n      mstore\n        /* \"#utility.yul\":5722:5824   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5830:6052   */\n    tag_27:\n        /* \"#utility.yul\":5923:5927   */\n      0x00\n        /* \"#utility.yul\":5961:5963   */\n      0x20\n        /* \"#utility.yul\":5950:5959   */\n      dup3\n        /* \"#utility.yul\":5946:5964   */\n      add\n        /* \"#utility.yul\":5938:5964   */\n      swap1\n      pop\n        /* \"#utility.yul\":5974:6045   */\n      tag_233\n        /* \"#utility.yul\":6042:6043   */\n      0x00\n        /* \"#utility.yul\":6031:6040   */\n      dup4\n        /* \"#utility.yul\":6027:6044   */\n      add\n        /* \"#utility.yul\":6018:6024   */\n      dup5\n        /* \"#utility.yul\":5974:6045   */\n      tag_177\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5830:6052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6500   */\n    tag_94:\n        /* \"#utility.yul\":6207:6211   */\n      0x00\n        /* \"#utility.yul\":6245:6247   */\n      0x60\n        /* \"#utility.yul\":6234:6243   */\n      dup3\n        /* \"#utility.yul\":6230:6248   */\n      add\n        /* \"#utility.yul\":6222:6248   */\n      swap1\n      pop\n        /* \"#utility.yul\":6258:6329   */\n      tag_235\n        /* \"#utility.yul\":6326:6327   */\n      0x00\n        /* \"#utility.yul\":6315:6324   */\n      dup4\n        /* \"#utility.yul\":6311:6328   */\n      add\n        /* \"#utility.yul\":6302:6308   */\n      dup7\n        /* \"#utility.yul\":6258:6329   */\n      tag_177\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6339:6411   */\n      tag_236\n        /* \"#utility.yul\":6407:6409   */\n      0x20\n        /* \"#utility.yul\":6396:6405   */\n      dup4\n        /* \"#utility.yul\":6392:6410   */\n      add\n        /* \"#utility.yul\":6383:6389   */\n      dup6\n        /* \"#utility.yul\":6339:6411   */\n      tag_177\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6421:6493   */\n      tag_237\n        /* \"#utility.yul\":6489:6491   */\n      0x40\n        /* \"#utility.yul\":6478:6487   */\n      dup4\n        /* \"#utility.yul\":6474:6492   */\n      add\n        /* \"#utility.yul\":6465:6471   */\n      dup5\n        /* \"#utility.yul\":6421:6493   */\n      tag_226\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6058:6500   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6506:6838   */\n    tag_117:\n        /* \"#utility.yul\":6627:6631   */\n      0x00\n        /* \"#utility.yul\":6665:6667   */\n      0x40\n        /* \"#utility.yul\":6654:6663   */\n      dup3\n        /* \"#utility.yul\":6650:6668   */\n      add\n        /* \"#utility.yul\":6642:6668   */\n      swap1\n      pop\n        /* \"#utility.yul\":6678:6749   */\n      tag_239\n        /* \"#utility.yul\":6746:6747   */\n      0x00\n        /* \"#utility.yul\":6735:6744   */\n      dup4\n        /* \"#utility.yul\":6731:6748   */\n      add\n        /* \"#utility.yul\":6722:6728   */\n      dup6\n        /* \"#utility.yul\":6678:6749   */\n      tag_177\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6759:6831   */\n      tag_240\n        /* \"#utility.yul\":6827:6829   */\n      0x20\n        /* \"#utility.yul\":6816:6825   */\n      dup4\n        /* \"#utility.yul\":6812:6830   */\n      add\n        /* \"#utility.yul\":6803:6809   */\n      dup5\n        /* \"#utility.yul\":6759:6831   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6506:6838   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6844:7486   */\n    tag_104:\n        /* \"#utility.yul\":7065:7069   */\n      0x00\n        /* \"#utility.yul\":7103:7106   */\n      0xe0\n        /* \"#utility.yul\":7092:7101   */\n      dup3\n        /* \"#utility.yul\":7088:7107   */\n      add\n        /* \"#utility.yul\":7080:7107   */\n      swap1\n      pop\n        /* \"#utility.yul\":7117:7188   */\n      tag_242\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7174:7183   */\n      dup4\n        /* \"#utility.yul\":7170:7187   */\n      add\n        /* \"#utility.yul\":7161:7167   */\n      dup8\n        /* \"#utility.yul\":7117:7188   */\n      tag_177\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7198:7270   */\n      tag_243\n        /* \"#utility.yul\":7266:7268   */\n      0x20\n        /* \"#utility.yul\":7255:7264   */\n      dup4\n        /* \"#utility.yul\":7251:7269   */\n      add\n        /* \"#utility.yul\":7242:7248   */\n      dup7\n        /* \"#utility.yul\":7198:7270   */\n      tag_226\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7280:7396   */\n      tag_244\n        /* \"#utility.yul\":7392:7394   */\n      0x40\n        /* \"#utility.yul\":7381:7390   */\n      dup4\n        /* \"#utility.yul\":7377:7395   */\n      add\n        /* \"#utility.yul\":7368:7374   */\n      dup6\n        /* \"#utility.yul\":7280:7396   */\n      tag_215\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7406:7479   */\n      tag_245\n        /* \"#utility.yul\":7474:7477   */\n      0xc0\n        /* \"#utility.yul\":7463:7472   */\n      dup4\n        /* \"#utility.yul\":7459:7478   */\n      add\n        /* \"#utility.yul\":7450:7456   */\n      dup5\n        /* \"#utility.yul\":7406:7479   */\n      tag_226\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6844:7486   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7492:7702   */\n    tag_40:\n        /* \"#utility.yul\":7579:7583   */\n      0x00\n        /* \"#utility.yul\":7617:7619   */\n      0x20\n        /* \"#utility.yul\":7606:7615   */\n      dup3\n        /* \"#utility.yul\":7602:7620   */\n      add\n        /* \"#utility.yul\":7594:7620   */\n      swap1\n      pop\n        /* \"#utility.yul\":7630:7695   */\n      tag_247\n        /* \"#utility.yul\":7692:7693   */\n      0x00\n        /* \"#utility.yul\":7681:7690   */\n      dup4\n        /* \"#utility.yul\":7677:7694   */\n      add\n        /* \"#utility.yul\":7668:7674   */\n      dup5\n        /* \"#utility.yul\":7630:7695   */\n      tag_180\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7492:7702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7708:8127   */\n    tag_92:\n        /* \"#utility.yul\":7874:7878   */\n      0x00\n        /* \"#utility.yul\":7912:7914   */\n      0x20\n        /* \"#utility.yul\":7901:7910   */\n      dup3\n        /* \"#utility.yul\":7897:7915   */\n      add\n        /* \"#utility.yul\":7889:7915   */\n      swap1\n      pop\n        /* \"#utility.yul\":7961:7970   */\n      dup2\n        /* \"#utility.yul\":7955:7959   */\n      dup2\n        /* \"#utility.yul\":7951:7971   */\n      sub\n        /* \"#utility.yul\":7947:7948   */\n      0x00\n        /* \"#utility.yul\":7936:7945   */\n      dup4\n        /* \"#utility.yul\":7932:7949   */\n      add\n        /* \"#utility.yul\":7925:7972   */\n      mstore\n        /* \"#utility.yul\":7989:8120   */\n      tag_249\n        /* \"#utility.yul\":8115:8119   */\n      dup2\n        /* \"#utility.yul\":7989:8120   */\n      tag_184\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7981:8120   */\n      swap1\n      pop\n        /* \"#utility.yul\":7708:8127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8133:8552   */\n    tag_136:\n        /* \"#utility.yul\":8299:8303   */\n      0x00\n        /* \"#utility.yul\":8337:8339   */\n      0x20\n        /* \"#utility.yul\":8326:8335   */\n      dup3\n        /* \"#utility.yul\":8322:8340   */\n      add\n        /* \"#utility.yul\":8314:8340   */\n      swap1\n      pop\n        /* \"#utility.yul\":8386:8395   */\n      dup2\n        /* \"#utility.yul\":8380:8384   */\n      dup2\n        /* \"#utility.yul\":8376:8396   */\n      sub\n        /* \"#utility.yul\":8372:8373   */\n      0x00\n        /* \"#utility.yul\":8361:8370   */\n      dup4\n        /* \"#utility.yul\":8357:8374   */\n      add\n        /* \"#utility.yul\":8350:8397   */\n      mstore\n        /* \"#utility.yul\":8414:8545   */\n      tag_251\n        /* \"#utility.yul\":8540:8544   */\n      dup2\n        /* \"#utility.yul\":8414:8545   */\n      tag_190\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8406:8545   */\n      swap1\n      pop\n        /* \"#utility.yul\":8133:8552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8558:8977   */\n    tag_74:\n        /* \"#utility.yul\":8724:8728   */\n      0x00\n        /* \"#utility.yul\":8762:8764   */\n      0x20\n        /* \"#utility.yul\":8751:8760   */\n      dup3\n        /* \"#utility.yul\":8747:8765   */\n      add\n        /* \"#utility.yul\":8739:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8811:8820   */\n      dup2\n        /* \"#utility.yul\":8805:8809   */\n      dup2\n        /* \"#utility.yul\":8801:8821   */\n      sub\n        /* \"#utility.yul\":8797:8798   */\n      0x00\n        /* \"#utility.yul\":8786:8795   */\n      dup4\n        /* \"#utility.yul\":8782:8799   */\n      add\n        /* \"#utility.yul\":8775:8822   */\n      mstore\n        /* \"#utility.yul\":8839:8970   */\n      tag_253\n        /* \"#utility.yul\":8965:8969   */\n      dup2\n        /* \"#utility.yul\":8839:8970   */\n      tag_195\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8831:8970   */\n      swap1\n      pop\n        /* \"#utility.yul\":8558:8977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8983:9402   */\n    tag_79:\n        /* \"#utility.yul\":9149:9153   */\n      0x00\n        /* \"#utility.yul\":9187:9189   */\n      0x20\n        /* \"#utility.yul\":9176:9185   */\n      dup3\n        /* \"#utility.yul\":9172:9190   */\n      add\n        /* \"#utility.yul\":9164:9190   */\n      swap1\n      pop\n        /* \"#utility.yul\":9236:9245   */\n      dup2\n        /* \"#utility.yul\":9230:9234   */\n      dup2\n        /* \"#utility.yul\":9226:9246   */\n      sub\n        /* \"#utility.yul\":9222:9223   */\n      0x00\n        /* \"#utility.yul\":9211:9220   */\n      dup4\n        /* \"#utility.yul\":9207:9224   */\n      add\n        /* \"#utility.yul\":9200:9247   */\n      mstore\n        /* \"#utility.yul\":9264:9395   */\n      tag_255\n        /* \"#utility.yul\":9390:9394   */\n      dup2\n        /* \"#utility.yul\":9264:9395   */\n      tag_200\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9256:9395   */\n      swap1\n      pop\n        /* \"#utility.yul\":8983:9402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9408:9827   */\n    tag_60:\n        /* \"#utility.yul\":9574:9578   */\n      0x00\n        /* \"#utility.yul\":9612:9614   */\n      0x20\n        /* \"#utility.yul\":9601:9610   */\n      dup3\n        /* \"#utility.yul\":9597:9615   */\n      add\n        /* \"#utility.yul\":9589:9615   */\n      swap1\n      pop\n        /* \"#utility.yul\":9661:9670   */\n      dup2\n        /* \"#utility.yul\":9655:9659   */\n      dup2\n        /* \"#utility.yul\":9651:9671   */\n      sub\n        /* \"#utility.yul\":9647:9648   */\n      0x00\n        /* \"#utility.yul\":9636:9645   */\n      dup4\n        /* \"#utility.yul\":9632:9649   */\n      add\n        /* \"#utility.yul\":9625:9672   */\n      mstore\n        /* \"#utility.yul\":9689:9820   */\n      tag_257\n        /* \"#utility.yul\":9815:9819   */\n      dup2\n        /* \"#utility.yul\":9689:9820   */\n      tag_205\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9681:9820   */\n      swap1\n      pop\n        /* \"#utility.yul\":9408:9827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9833:10252   */\n    tag_83:\n        /* \"#utility.yul\":9999:10003   */\n      0x00\n        /* \"#utility.yul\":10037:10039   */\n      0x20\n        /* \"#utility.yul\":10026:10035   */\n      dup3\n        /* \"#utility.yul\":10022:10040   */\n      add\n        /* \"#utility.yul\":10014:10040   */\n      swap1\n      pop\n        /* \"#utility.yul\":10086:10095   */\n      dup2\n        /* \"#utility.yul\":10080:10084   */\n      dup2\n        /* \"#utility.yul\":10076:10096   */\n      sub\n        /* \"#utility.yul\":10072:10073   */\n      0x00\n        /* \"#utility.yul\":10061:10070   */\n      dup4\n        /* \"#utility.yul\":10057:10074   */\n      add\n        /* \"#utility.yul\":10050:10097   */\n      mstore\n        /* \"#utility.yul\":10114:10245   */\n      tag_259\n        /* \"#utility.yul\":10240:10244   */\n      dup2\n        /* \"#utility.yul\":10114:10245   */\n      tag_210\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10106:10245   */\n      swap1\n      pop\n        /* \"#utility.yul\":9833:10252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10339:10508   */\n    tag_187:\n        /* \"#utility.yul\":10423:10434   */\n      0x00\n        /* \"#utility.yul\":10457:10463   */\n      dup3\n        /* \"#utility.yul\":10452:10455   */\n      dup3\n        /* \"#utility.yul\":10445:10464   */\n      mstore\n        /* \"#utility.yul\":10497:10501   */\n      0x20\n        /* \"#utility.yul\":10492:10495   */\n      dup3\n        /* \"#utility.yul\":10488:10502   */\n      add\n        /* \"#utility.yul\":10473:10502   */\n      swap1\n      pop\n        /* \"#utility.yul\":10339:10508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10819   */\n    tag_76:\n        /* \"#utility.yul\":10554:10557   */\n      0x00\n        /* \"#utility.yul\":10573:10593   */\n      tag_264\n        /* \"#utility.yul\":10591:10592   */\n      dup3\n        /* \"#utility.yul\":10573:10593   */\n      tag_225\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10568:10593   */\n      swap2\n      pop\n        /* \"#utility.yul\":10607:10627   */\n      tag_265\n        /* \"#utility.yul\":10625:10626   */\n      dup4\n        /* \"#utility.yul\":10607:10627   */\n      tag_225\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10602:10627   */\n      swap3\n      pop\n        /* \"#utility.yul\":10761:10762   */\n      dup3\n        /* \"#utility.yul\":10693:10759   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10689:10763   */\n      sub\n        /* \"#utility.yul\":10686:10687   */\n      dup3\n        /* \"#utility.yul\":10683:10764   */\n      gt\n        /* \"#utility.yul\":10680:10787   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":10767:10785   */\n      tag_267\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10680:10787   */\n    tag_266:\n        /* \"#utility.yul\":10811:10812   */\n      dup3\n        /* \"#utility.yul\":10808:10809   */\n      dup3\n        /* \"#utility.yul\":10804:10813   */\n      add\n        /* \"#utility.yul\":10797:10813   */\n      swap1\n      pop\n        /* \"#utility.yul\":10514:10819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10825:11016   */\n    tag_123:\n        /* \"#utility.yul\":10865:10869   */\n      0x00\n        /* \"#utility.yul\":10885:10905   */\n      tag_270\n        /* \"#utility.yul\":10903:10904   */\n      dup3\n        /* \"#utility.yul\":10885:10905   */\n      tag_225\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10880:10905   */\n      swap2\n      pop\n        /* \"#utility.yul\":10919:10939   */\n      tag_271\n        /* \"#utility.yul\":10937:10938   */\n      dup4\n        /* \"#utility.yul\":10919:10939   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10914:10939   */\n      swap3\n      pop\n        /* \"#utility.yul\":10958:10959   */\n      dup3\n        /* \"#utility.yul\":10955:10956   */\n      dup3\n        /* \"#utility.yul\":10952:10960   */\n      lt\n        /* \"#utility.yul\":10949:10983   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":10963:10981   */\n      tag_273\n      tag_268\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10949:10983   */\n    tag_272:\n        /* \"#utility.yul\":11008:11009   */\n      dup3\n        /* \"#utility.yul\":11005:11006   */\n      dup3\n        /* \"#utility.yul\":11001:11010   */\n      sub\n        /* \"#utility.yul\":10993:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":10825:11016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11022:11118   */\n    tag_176:\n        /* \"#utility.yul\":11059:11066   */\n      0x00\n        /* \"#utility.yul\":11088:11112   */\n      tag_275\n        /* \"#utility.yul\":11106:11111   */\n      dup3\n        /* \"#utility.yul\":11088:11112   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11077:11112   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11124:11214   */\n    tag_183:\n        /* \"#utility.yul\":11158:11165   */\n      0x00\n        /* \"#utility.yul\":11201:11206   */\n      dup2\n        /* \"#utility.yul\":11194:11207   */\n      iszero\n        /* \"#utility.yul\":11187:11208   */\n      iszero\n        /* \"#utility.yul\":11176:11208   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11220:11346   */\n    tag_276:\n        /* \"#utility.yul\":11257:11264   */\n      0x00\n        /* \"#utility.yul\":11297:11339   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11290:11295   */\n      dup3\n        /* \"#utility.yul\":11286:11340   */\n      and\n        /* \"#utility.yul\":11275:11340   */\n      swap1\n      pop\n        /* \"#utility.yul\":11220:11346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:11429   */\n    tag_225:\n        /* \"#utility.yul\":11389:11396   */\n      0x00\n        /* \"#utility.yul\":11418:11423   */\n      dup2\n        /* \"#utility.yul\":11407:11423   */\n      swap1\n      pop\n        /* \"#utility.yul\":11352:11429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11435:11521   */\n    tag_231:\n        /* \"#utility.yul\":11470:11477   */\n      0x00\n        /* \"#utility.yul\":11510:11514   */\n      0xff\n        /* \"#utility.yul\":11503:11508   */\n      dup3\n        /* \"#utility.yul\":11499:11515   */\n      and\n        /* \"#utility.yul\":11488:11515   */\n      swap1\n      pop\n        /* \"#utility.yul\":11435:11521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11527:11707   */\n    tag_268:\n        /* \"#utility.yul\":11575:11652   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11572:11573   */\n      0x00\n        /* \"#utility.yul\":11565:11653   */\n      mstore\n        /* \"#utility.yul\":11672:11676   */\n      0x11\n        /* \"#utility.yul\":11669:11670   */\n      0x04\n        /* \"#utility.yul\":11662:11677   */\n      mstore\n        /* \"#utility.yul\":11696:11700   */\n      0x24\n        /* \"#utility.yul\":11693:11694   */\n      0x00\n        /* \"#utility.yul\":11686:11701   */\n      revert\n        /* \"#utility.yul\":11836:11953   */\n    tag_159:\n        /* \"#utility.yul\":11945:11946   */\n      0x00\n        /* \"#utility.yul\":11942:11943   */\n      dup1\n        /* \"#utility.yul\":11935:11947   */\n      revert\n        /* \"#utility.yul\":11959:12136   */\n    tag_189:\n        /* \"#utility.yul\":12099:12128   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":12095:12096   */\n      0x00\n        /* \"#utility.yul\":12087:12093   */\n      dup3\n        /* \"#utility.yul\":12083:12097   */\n      add\n        /* \"#utility.yul\":12076:12129   */\n      mstore\n        /* \"#utility.yul\":11959:12136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12142:12367   */\n    tag_194:\n        /* \"#utility.yul\":12282:12316   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12278:12279   */\n      0x00\n        /* \"#utility.yul\":12270:12276   */\n      dup3\n        /* \"#utility.yul\":12266:12280   */\n      add\n        /* \"#utility.yul\":12259:12317   */\n      mstore\n        /* \"#utility.yul\":12351:12359   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12346:12348   */\n      0x20\n        /* \"#utility.yul\":12338:12344   */\n      dup3\n        /* \"#utility.yul\":12334:12349   */\n      add\n        /* \"#utility.yul\":12327:12360   */\n      mstore\n        /* \"#utility.yul\":12142:12367   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12373:12545   */\n    tag_199:\n        /* \"#utility.yul\":12513:12537   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":12509:12510   */\n      0x00\n        /* \"#utility.yul\":12501:12507   */\n      dup3\n        /* \"#utility.yul\":12497:12511   */\n      add\n        /* \"#utility.yul\":12490:12538   */\n      mstore\n        /* \"#utility.yul\":12373:12545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12551:12721   */\n    tag_204:\n        /* \"#utility.yul\":12691:12713   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":12687:12688   */\n      0x00\n        /* \"#utility.yul\":12679:12685   */\n      dup3\n        /* \"#utility.yul\":12675:12689   */\n      add\n        /* \"#utility.yul\":12668:12714   */\n      mstore\n        /* \"#utility.yul\":12551:12721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12727:12909   */\n    tag_209:\n        /* \"#utility.yul\":12867:12901   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12863:12864   */\n      0x00\n        /* \"#utility.yul\":12855:12861   */\n      dup3\n        /* \"#utility.yul\":12851:12865   */\n      add\n        /* \"#utility.yul\":12844:12902   */\n      mstore\n        /* \"#utility.yul\":12727:12909   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12915:13085   */\n    tag_214:\n        /* \"#utility.yul\":13055:13077   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":13051:13052   */\n      0x00\n        /* \"#utility.yul\":13043:13049   */\n      dup3\n        /* \"#utility.yul\":13039:13053   */\n      add\n        /* \"#utility.yul\":13032:13078   */\n      mstore\n        /* \"#utility.yul\":12915:13085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13091:13213   */\n    tag_144:\n        /* \"#utility.yul\":13164:13188   */\n      tag_292\n        /* \"#utility.yul\":13182:13187   */\n      dup2\n        /* \"#utility.yul\":13164:13188   */\n      tag_176\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13157:13162   */\n      dup2\n        /* \"#utility.yul\":13154:13189   */\n      eq\n        /* \"#utility.yul\":13144:13207   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13200:13201   */\n      dup1\n        /* \"#utility.yul\":13193:13205   */\n      revert\n        /* \"#utility.yul\":13144:13207   */\n    tag_293:\n        /* \"#utility.yul\":13091:13213   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13219:13335   */\n    tag_148:\n        /* \"#utility.yul\":13289:13310   */\n      tag_295\n        /* \"#utility.yul\":13304:13309   */\n      dup2\n        /* \"#utility.yul\":13289:13310   */\n      tag_183\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":13282:13287   */\n      dup2\n        /* \"#utility.yul\":13279:13311   */\n      eq\n        /* \"#utility.yul\":13269:13329   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":13325:13326   */\n      0x00\n        /* \"#utility.yul\":13322:13323   */\n      dup1\n        /* \"#utility.yul\":13315:13327   */\n      revert\n        /* \"#utility.yul\":13269:13329   */\n    tag_296:\n        /* \"#utility.yul\":13219:13335   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13341:13463   */\n    tag_152:\n        /* \"#utility.yul\":13414:13438   */\n      tag_298\n        /* \"#utility.yul\":13432:13437   */\n      dup2\n        /* \"#utility.yul\":13414:13438   */\n      tag_225\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":13407:13412   */\n      dup2\n        /* \"#utility.yul\":13404:13439   */\n      eq\n        /* \"#utility.yul\":13394:13457   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":13453:13454   */\n      0x00\n        /* \"#utility.yul\":13450:13451   */\n      dup1\n        /* \"#utility.yul\":13443:13455   */\n      revert\n        /* \"#utility.yul\":13394:13457   */\n    tag_299:\n        /* \"#utility.yul\":13341:13463   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f10101de1595803208a2c9cfb32426595da62f72a53383147deab3a93689bdd464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61142d8061012d6000396000f3fe60806040526004361061008a5760003560e01c8063b0adfa0911610059578063b0adfa0914610115578063da917aea1461012c578063db56892214610157578063df6a8a1514610180578063f2fde38b146101a957610091565b806364cb560c14610093578063715018a6146100aa5780638da5cb5b146100c1578063ad95b1c6146100ec57610091565b3661009157005b005b34801561009f57600080fd5b506100a86101d2565b005b3480156100b657600080fd5b506100bf61027a565b005b3480156100cd57600080fd5b506100d6610302565b6040516100e39190610fd7565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610dfc565b61032b565b005b34801561012157600080fd5b5061012a6107e4565b005b34801561013857600080fd5b506101416107e6565b60405161014e9190611097565b60405180910390f35b34801561016357600080fd5b5061017e60048036038101906101799190610da2565b6107f9565b005b34801561018c57600080fd5b506101a760048036038101906101a29190610dfc565b6108b9565b005b3480156101b557600080fd5b506101d060048036038101906101cb9190610da2565b610b8a565b005b6101da610c82565b73ffffffffffffffffffffffffffffffffffffffff166101f8610302565b73ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024590611132565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610282610c82565b73ffffffffffffffffffffffffffffffffffffffff166102a0610302565b73ffffffffffffffffffffffffffffffffffffffff16146102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90611132565b60405180910390fd5b6103006000610c8a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661037a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610371906110f2565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103d09190611183565b1015610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890611112565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104659190611183565b11156104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d90611152565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105029190610fd7565b60206040518083038186803b15801561051a57600080fd5b505afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610e29565b1015610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906110b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105f293929190610ff2565b602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106449190610dcf565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106949190611183565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff168152509050806004600060016002546106ee9190611183565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546107ac9190611183565b83426040516107be9493929190611052565b60405180910390a16001600260008282546107d99190611183565b925050819055505050565b565b600360009054906101000a900460ff1681565b610801610c82565b73ffffffffffffffffffffffffffffffffffffffff1661081f610302565b73ffffffffffffffffffffffffffffffffffffffff1614610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90611132565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561093b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610932906110b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610998929190611029565b602060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190610dcf565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a3a91906111d9565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610a949190611183565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610b529190611183565b8342604051610b649493929190611052565b60405180910390a1600160026000828254610b7f9190611183565b925050819055505050565b610b92610c82565b73ffffffffffffffffffffffffffffffffffffffff16610bb0610302565b73ffffffffffffffffffffffffffffffffffffffff1614610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd90611132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d906110d2565b60405180910390fd5b610c7f81610c8a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d5d816113b2565b92915050565b600081519050610d72816113c9565b92915050565b600081359050610d87816113e0565b92915050565b600081519050610d9c816113e0565b92915050565b600060208284031215610db857610db7611291565b5b6000610dc684828501610d4e565b91505092915050565b600060208284031215610de557610de4611291565b5b6000610df384828501610d63565b91505092915050565b600060208284031215610e1257610e11611291565b5b6000610e2084828501610d78565b91505092915050565b600060208284031215610e3f57610e3e611291565b5b6000610e4d84828501610d8d565b91505092915050565b610e5f8161120d565b82525050565b610e6e8161120d565b82525050565b610e7d8161121f565b82525050565b6000610e90601b83611172565b9150610e9b82611296565b602082019050919050565b6000610eb3602683611172565b9150610ebe826112bf565b604082019050919050565b6000610ed6601683611172565b9150610ee18261130e565b602082019050919050565b6000610ef9601483611172565b9150610f0482611337565b602082019050919050565b6000610f1c602083611172565b9150610f2782611360565b602082019050919050565b6000610f3f601483611172565b9150610f4a82611389565b602082019050919050565b608082016000820151610f6b6000850182610e56565b506020820151610f7e6020850182610faa565b506040820151610f916040850182610faa565b506060820151610fa46060850182610fc8565b50505050565b610fb38161124b565b82525050565b610fc28161124b565b82525050565b610fd181611255565b82525050565b6000602082019050610fec6000830184610e65565b92915050565b60006060820190506110076000830186610e65565b6110146020830185610e65565b6110216040830184610fb9565b949350505050565b600060408201905061103e6000830185610e65565b61104b6020830184610fb9565b9392505050565b600060e0820190506110676000830187610e65565b6110746020830186610fb9565b6110816040830185610f55565b61108e60c0830184610fb9565b95945050505050565b60006020820190506110ac6000830184610e74565b92915050565b600060208201905081810360008301526110cb81610e83565b9050919050565b600060208201905081810360008301526110eb81610ea6565b9050919050565b6000602082019050818103600083015261110b81610ec9565b9050919050565b6000602082019050818103600083015261112b81610eec565b9050919050565b6000602082019050818103600083015261114b81610f0f565b9050919050565b6000602082019050818103600083015261116b81610f32565b9050919050565b600082825260208201905092915050565b600061118e8261124b565b91506111998361124b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111ce576111cd611262565b5b828201905092915050565b60006111e48261124b565b91506111ef8361124b565b92508282101561120257611201611262565b5b828203905092915050565b60006112188261122b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6113bb8161120d565b81146113c657600080fd5b50565b6113d28161121f565b81146113dd57600080fd5b50565b6113e98161124b565b81146113f457600080fd5b5056fea2646970667358221220f10101de1595803208a2c9cfb32426595da62f72a53383147deab3a93689bdd464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x142D DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0ADFA09 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A9 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xEC JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x300 PUSH1 0x0 PUSH2 0xC8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP1 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x7BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x801 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81F PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB92 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB0 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFD SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7F DUP2 PUSH2 0xC8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5D DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD72 DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD87 DUP2 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD9C DUP2 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP5 DUP3 DUP6 ADD PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF3 DUP5 DUP3 DUP6 ADD PUSH2 0xD63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP5 DUP3 DUP6 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP5 DUP3 DUP6 ADD PUSH2 0xD8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 PUSH1 0x1B DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB3 PUSH1 0x26 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBE DUP3 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED6 PUSH1 0x16 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE1 DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF9 PUSH1 0x14 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1C PUSH1 0x20 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x14 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xF6B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xE56 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF7E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xFAA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xF91 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xFAA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFA4 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xFC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1007 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x103E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x104B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1067 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1074 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x1081 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x108E PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CB DUP2 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10EB DUP2 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x110B DUP2 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112B DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116B DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118E DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH2 0x1199 DUP4 PUSH2 0x124B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CD PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E4 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH2 0x11EF DUP4 PUSH2 0x124B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1218 DUP3 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x13BB DUP2 PUSH2 0x120D JUMP JUMPDEST DUP2 EQ PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP2 EQ PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL ADD ADD 0xDE ISZERO SWAP6 DUP1 ORIGIN ADDMOD LOG2 0xC9 0xCF 0xB3 0x24 0x26 MSIZE 0x5D 0xA6 0x2F PUSH19 0xA53383147DEAB3A93689BDD464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:4446:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4446;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4446:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4446:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakingHistory_420": {
									"entryPoint": 2020,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SetStakingToken_227": {
									"entryPoint": 2041,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 811,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 2022,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 466,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_416": {
									"entryPoint": 2233,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3202,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3210,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 770,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 634,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2954,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 4758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 5001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13466:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2062:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2044:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2010:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2017:3:3",
														"type": ""
													}
												],
												"src": "1967:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2168:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2141:3:3",
														"type": ""
													}
												],
												"src": "2081:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2301:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2286:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2259:3:3",
														"type": ""
													}
												],
												"src": "2205:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "2559:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2672:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2462:3:3",
														"type": ""
													}
												],
												"src": "2320:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2834:3:3",
														"type": ""
													}
												],
												"src": "2692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3286:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3227:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3392:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "3303:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:3",
														"type": ""
													}
												],
												"src": "3064:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3599:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3764:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "3675:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3570:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:3",
														"type": ""
													}
												],
												"src": "3436:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3971:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4136:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4047:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:3",
														"type": ""
													}
												],
												"src": "3808:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4180:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4744:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4776:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4842:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4849:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4832:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4816:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4902:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4925:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4868:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4868:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4951:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4988:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5018:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5025:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5014:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5008:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4992:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5078:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5096:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5101:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5044:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5044:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5127:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5167:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5197:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5204:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5193:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5193:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5187:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5187:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5171:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5257:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5275:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5280:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5271:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5271:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5223:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5223:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5306:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5346:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5376:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5383:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5372:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5372:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5366:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5350:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5432:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5450:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5455:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5446:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5402:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5402:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4717:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4724:3:3",
														"type": ""
													}
												],
												"src": "4620:858:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5556:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5579:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5561:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5527:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5534:3:3",
														"type": ""
													}
												],
												"src": "5484:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5680:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5703:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5685:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5673:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5651:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5658:3:3",
														"type": ""
													}
												],
												"src": "5598:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5790:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5811:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5795:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5761:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5768:3:3",
														"type": ""
													}
												],
												"src": "5722:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5928:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5938:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5961:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6018:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6031:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5974:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5974:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5900:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5912:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5923:4:3",
														"type": ""
													}
												],
												"src": "5830:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6212:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6222:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6234:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6245:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6222:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6302:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6315:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6326:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6258:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6258:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6258:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6383:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6396:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6407:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6392:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6339:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6465:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6478:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6489:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6474:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6474:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6421:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6168:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6180:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6188:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6196:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6207:4:3",
														"type": ""
													}
												],
												"src": "6058:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6632:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6642:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6654:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6650:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6642:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6722:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6735:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6746:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6731:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6731:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6678:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6678:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6803:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6816:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6827:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6812:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6759:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6759:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6596:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6608:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6616:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6627:4:3",
														"type": ""
													}
												],
												"src": "6506:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7070:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7080:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7080:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7161:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7174:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7185:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7170:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7117:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7117:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7242:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7255:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7266:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7251:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7251:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7198:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7198:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7368:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7280:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7280:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7450:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7463:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7474:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7459:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7459:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7406:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7406:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7406:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7018:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7030:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7038:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7046:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7054:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7065:4:3",
														"type": ""
													}
												],
												"src": "6844:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7584:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7594:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7606:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7602:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7594:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7668:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7677:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7630:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7630:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7556:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7568:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7579:4:3",
														"type": ""
													}
												],
												"src": "7492:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7889:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7901:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7936:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7932:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7932:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7951:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7925:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7925:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7981:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8115:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7989:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7981:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7859:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7874:4:3",
														"type": ""
													}
												],
												"src": "7708:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8304:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8314:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8326:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8337:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8322:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8314:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8372:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8380:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8386:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8376:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8376:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8350:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8350:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8406:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8540:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8414:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8406:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8284:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8299:4:3",
														"type": ""
													}
												],
												"src": "8133:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8729:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8739:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8751:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8762:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8747:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8739:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8786:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8797:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8782:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8782:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8805:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8811:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8775:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8775:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8775:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8831:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8965:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8839:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8831:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8709:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8724:4:3",
														"type": ""
													}
												],
												"src": "8558:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9154:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9164:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9176:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9187:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9172:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9172:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9164:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9211:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9222:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9207:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9230:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9236:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9200:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9200:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9256:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9390:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9264:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9264:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9256:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9134:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9149:4:3",
														"type": ""
													}
												],
												"src": "8983:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9579:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9589:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9601:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9612:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9597:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9597:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9589:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9647:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9632:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9655:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9661:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9651:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9651:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9681:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9815:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9689:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9689:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9681:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9559:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9574:4:3",
														"type": ""
													}
												],
												"src": "9408:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10004:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10014:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10026:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10037:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10022:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10014:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10061:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10072:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10057:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10057:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10080:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10086:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10076:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10076:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10050:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10050:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10050:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10106:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10240:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10114:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10114:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10106:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9984:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9999:4:3",
														"type": ""
													}
												],
												"src": "9833:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10298:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10308:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10324:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10318:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10291:6:3",
														"type": ""
													}
												],
												"src": "10258:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10435:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10452:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10457:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10445:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10473:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10492:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10497:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10473:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10407:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10412:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10423:11:3",
														"type": ""
													}
												],
												"src": "10339:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10558:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10568:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10591:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10573:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10573:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10568:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10602:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10625:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10607:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10607:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10602:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10765:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10767:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10767:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10767:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10686:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10693:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10761:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10689:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10683:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:81:3"
															},
															"nodeType": "YulIf",
															"src": "10680:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10808:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10811:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10545:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10548:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10554:3:3",
														"type": ""
													}
												],
												"src": "10514:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10870:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10880:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10903:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10885:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10885:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10880:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10914:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10937:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10919:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10919:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10914:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10961:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10963:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10963:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10963:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10955:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10958:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10952:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:8:3"
															},
															"nodeType": "YulIf",
															"src": "10949:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10993:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11005:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11008:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11001:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10993:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10856:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10859:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10865:4:3",
														"type": ""
													}
												],
												"src": "10825:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11067:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11077:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11106:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11088:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11088:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11077:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11049:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11059:7:3",
														"type": ""
													}
												],
												"src": "11022:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11166:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11176:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11201:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11194:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11194:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11187:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11176:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11148:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11158:7:3",
														"type": ""
													}
												],
												"src": "11124:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11265:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11275:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11290:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11297:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11286:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11286:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11275:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11247:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11257:7:3",
														"type": ""
													}
												],
												"src": "11220:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11397:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11407:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11418:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11407:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11379:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11389:7:3",
														"type": ""
													}
												],
												"src": "11352:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11478:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11488:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11503:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11510:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11499:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11499:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11488:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11460:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11470:7:3",
														"type": ""
													}
												],
												"src": "11435:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11555:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11572:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11575:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11565:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11565:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11669:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11672:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11662:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11662:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11693:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11696:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11527:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11802:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11819:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11822:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11812:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11812:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11812:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11713:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11925:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11942:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11945:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11935:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11836:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12065:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12087:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12095:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12083:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12083:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12099:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12076:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12076:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12057:6:3",
														"type": ""
													}
												],
												"src": "11959:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12248:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12270:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12278:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12266:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12266:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12282:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12259:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12259:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12338:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12346:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12334:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12334:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12351:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12240:6:3",
														"type": ""
													}
												],
												"src": "12142:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12479:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12501:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12509:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12497:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12513:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12490:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12490:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12490:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12471:6:3",
														"type": ""
													}
												],
												"src": "12373:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12657:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12679:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12687:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12675:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12675:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12691:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12668:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12668:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12668:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12649:6:3",
														"type": ""
													}
												],
												"src": "12551:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12833:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12855:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12863:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12851:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12851:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12867:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12844:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12844:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12844:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12825:6:3",
														"type": ""
													}
												],
												"src": "12727:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13021:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13043:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13051:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13039:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13039:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13055:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13032:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13032:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13013:6:3",
														"type": ""
													}
												],
												"src": "12915:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13134:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13191:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13200:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13203:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13193:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13193:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13193:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13157:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13182:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13164:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13164:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13154:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13154:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13147:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13147:43:3"
															},
															"nodeType": "YulIf",
															"src": "13144:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13127:5:3",
														"type": ""
													}
												],
												"src": "13091:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13259:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13313:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13322:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13325:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13315:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13315:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13315:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13282:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13304:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13289:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13289:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13279:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13279:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13272:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13272:40:3"
															},
															"nodeType": "YulIf",
															"src": "13269:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13252:5:3",
														"type": ""
													}
												],
												"src": "13219:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13384:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13441:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13450:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13453:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13443:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13443:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13443:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13407:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13432:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13414:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13414:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13404:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13404:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13397:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13397:43:3"
															},
															"nodeType": "YulIf",
															"src": "13394:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13377:5:3",
														"type": ""
													}
												],
												"src": "13341:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c8063b0adfa0911610059578063b0adfa0914610115578063da917aea1461012c578063db56892214610157578063df6a8a1514610180578063f2fde38b146101a957610091565b806364cb560c14610093578063715018a6146100aa5780638da5cb5b146100c1578063ad95b1c6146100ec57610091565b3661009157005b005b34801561009f57600080fd5b506100a86101d2565b005b3480156100b657600080fd5b506100bf61027a565b005b3480156100cd57600080fd5b506100d6610302565b6040516100e39190610fd7565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610dfc565b61032b565b005b34801561012157600080fd5b5061012a6107e4565b005b34801561013857600080fd5b506101416107e6565b60405161014e9190611097565b60405180910390f35b34801561016357600080fd5b5061017e60048036038101906101799190610da2565b6107f9565b005b34801561018c57600080fd5b506101a760048036038101906101a29190610dfc565b6108b9565b005b3480156101b557600080fd5b506101d060048036038101906101cb9190610da2565b610b8a565b005b6101da610c82565b73ffffffffffffffffffffffffffffffffffffffff166101f8610302565b73ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024590611132565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610282610c82565b73ffffffffffffffffffffffffffffffffffffffff166102a0610302565b73ffffffffffffffffffffffffffffffffffffffff16146102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed90611132565b60405180910390fd5b6103006000610c8a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661037a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610371906110f2565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103d09190611183565b1015610411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040890611112565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104659190611183565b11156104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d90611152565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105029190610fd7565b60206040518083038186803b15801561051a57600080fd5b505afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610e29565b1015610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906110b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105f293929190610ff2565b602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106449190610dcf565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106949190611183565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff168152509050806004600060016002546106ee9190611183565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546107ac9190611183565b83426040516107be9493929190611052565b60405180910390a16001600260008282546107d99190611183565b925050819055505050565b565b600360009054906101000a900460ff1681565b610801610c82565b73ffffffffffffffffffffffffffffffffffffffff1661081f610302565b73ffffffffffffffffffffffffffffffffffffffff1614610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c90611132565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561093b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610932906110b2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610998929190611029565b602060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea9190610dcf565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a3a91906111d9565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610a949190611183565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610b529190611183565b8342604051610b649493929190611052565b60405180910390a1600160026000828254610b7f9190611183565b925050819055505050565b610b92610c82565b73ffffffffffffffffffffffffffffffffffffffff16610bb0610302565b73ffffffffffffffffffffffffffffffffffffffff1614610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd90611132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d906110d2565b60405180910390fd5b610c7f81610c8a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d5d816113b2565b92915050565b600081519050610d72816113c9565b92915050565b600081359050610d87816113e0565b92915050565b600081519050610d9c816113e0565b92915050565b600060208284031215610db857610db7611291565b5b6000610dc684828501610d4e565b91505092915050565b600060208284031215610de557610de4611291565b5b6000610df384828501610d63565b91505092915050565b600060208284031215610e1257610e11611291565b5b6000610e2084828501610d78565b91505092915050565b600060208284031215610e3f57610e3e611291565b5b6000610e4d84828501610d8d565b91505092915050565b610e5f8161120d565b82525050565b610e6e8161120d565b82525050565b610e7d8161121f565b82525050565b6000610e90601b83611172565b9150610e9b82611296565b602082019050919050565b6000610eb3602683611172565b9150610ebe826112bf565b604082019050919050565b6000610ed6601683611172565b9150610ee18261130e565b602082019050919050565b6000610ef9601483611172565b9150610f0482611337565b602082019050919050565b6000610f1c602083611172565b9150610f2782611360565b602082019050919050565b6000610f3f601483611172565b9150610f4a82611389565b602082019050919050565b608082016000820151610f6b6000850182610e56565b506020820151610f7e6020850182610faa565b506040820151610f916040850182610faa565b506060820151610fa46060850182610fc8565b50505050565b610fb38161124b565b82525050565b610fc28161124b565b82525050565b610fd181611255565b82525050565b6000602082019050610fec6000830184610e65565b92915050565b60006060820190506110076000830186610e65565b6110146020830185610e65565b6110216040830184610fb9565b949350505050565b600060408201905061103e6000830185610e65565b61104b6020830184610fb9565b9392505050565b600060e0820190506110676000830187610e65565b6110746020830186610fb9565b6110816040830185610f55565b61108e60c0830184610fb9565b95945050505050565b60006020820190506110ac6000830184610e74565b92915050565b600060208201905081810360008301526110cb81610e83565b9050919050565b600060208201905081810360008301526110eb81610ea6565b9050919050565b6000602082019050818103600083015261110b81610ec9565b9050919050565b6000602082019050818103600083015261112b81610eec565b9050919050565b6000602082019050818103600083015261114b81610f0f565b9050919050565b6000602082019050818103600083015261116b81610f32565b9050919050565b600082825260208201905092915050565b600061118e8261124b565b91506111998361124b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111ce576111cd611262565b5b828201905092915050565b60006111e48261124b565b91506111ef8361124b565b92508282101561120257611201611262565b5b828203905092915050565b60006112188261122b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6113bb8161120d565b81146113c657600080fd5b50565b6113d28161121f565b81146113dd57600080fd5b50565b6113e98161124b565b81146113f457600080fd5b5056fea2646970667358221220f10101de1595803208a2c9cfb32426595da62f72a53383147deab3a93689bdd464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0ADFA09 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A9 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xEC JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x245 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x282 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A0 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x300 PUSH1 0x0 PUSH2 0xC8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP1 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x552 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58A SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x694 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x7BE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x801 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81F PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB92 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB0 PUSH2 0x302 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFD SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7F DUP2 PUSH2 0xC8A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5D DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD72 DUP2 PUSH2 0x13C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD87 DUP2 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD9C DUP2 PUSH2 0x13E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP5 DUP3 DUP6 ADD PUSH2 0xD4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF3 DUP5 DUP3 DUP6 ADD PUSH2 0xD63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE20 DUP5 DUP3 DUP6 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x1291 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP5 DUP3 DUP6 ADD PUSH2 0xD8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0x120D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0x121F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 PUSH1 0x1B DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB3 PUSH1 0x26 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xEBE DUP3 PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED6 PUSH1 0x16 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE1 DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF9 PUSH1 0x14 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0x1337 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1C PUSH1 0x20 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF27 DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x14 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xF6B PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xE56 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xF7E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xFAA JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xF91 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xFAA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xFA4 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xFC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFB3 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1007 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1021 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x103E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x104B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1067 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1074 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x1081 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x108E PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CB DUP2 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10EB DUP2 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x110B DUP2 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112B DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114B DUP2 PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116B DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118E DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH2 0x1199 DUP4 PUSH2 0x124B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CD PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E4 DUP3 PUSH2 0x124B JUMP JUMPDEST SWAP2 POP PUSH2 0x11EF DUP4 PUSH2 0x124B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x1262 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1218 DUP3 PUSH2 0x122B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x13BB DUP2 PUSH2 0x120D JUMP JUMPDEST DUP2 EQ PUSH2 0x13C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13D2 DUP2 PUSH2 0x121F JUMP JUMPDEST DUP2 EQ PUSH2 0x13DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x124B JUMP JUMPDEST DUP2 EQ PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL ADD ADD 0xDE ISZERO SWAP6 DUP1 ORIGIN ADDMOD LOG2 0xC9 0xCF 0xB3 0x24 0x26 MSIZE 0x5D 0xA6 0x2F PUSH19 0xA53383147DEAB3A93689BDD464736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:4446:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:91;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2897:44;;;;;;;;;;;;;:::i;:::-;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1286:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2389:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:91:2;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1462:14:2::1;;;;;;;;;;;1461:15;1444:14;;:32;;;;;;;;;;;;;;;;;;1392:91::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1545:786:2:-;1606:14;;;;;;;;;;;1598:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:14;1695:6;1665:15;:27;1681:10;1665:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1657:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1824:9;1814:6;1784:15;:27;1800:10;1784:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1776:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:6;1899:12;;;;;;;;;;;1893:29;;;1923:10;1893:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1884:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1993:12;;;;;;;;;;;1987:32;;;2020:10;2040:4;2047:6;1987:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2095:6;2064:15;:27;2080:10;2064:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2111:21;2135:44;;;;;;;;2141:10;2135:44;;;;;;2152:6;2135:44;;;;2160:15;2135:44;;;;2177:1;2135:44;;;;;2111:68;;2219:8;2189:14;:27;2214:1;2204:9;;:11;;;;:::i;:::-;2189:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:60;2251:10;2273:1;2263:9;;:11;;;;:::i;:::-;2276:8;2286:15;2242:60;;;;;;;;;:::i;:::-;;;;;;;;2323:1;2312:9;;:12;;;;;;;:::i;:::-;;;;;;;;1588:743;1545:786;:::o;2897:44::-;:::o;491:34::-;;;;;;;;;;;;;:::o;1286:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1369:6:2::1;1354:12;;:21;;;;;;;;;;;;;;;;;;1286:96:::0;:::o;2389:502::-;2483:6;2452:15;:27;2468:10;2452:27;;;;;;;;;;;;;;;;:37;;2444:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2567:12;;;;;;;;;;;2561:28;;;2590:10;2602:6;2561:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2650:6;2619:15;:27;2635:10;2619:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2666:23;2692:44;;;;;;;;2698:10;2692:44;;;;;;2709:6;2692:44;;;;2717:15;2692:44;;;;2734:1;2692:44;;;;;2666:70;;2776:10;2746:14;:27;2771:1;2761:9;;:11;;;;:::i;:::-;2746:27;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:61;2809:10;2831:1;2821:9;;:11;;;;:::i;:::-;2834:10;2846:15;2801:61;;;;;;;;;:::i;:::-;;;;;;;;2883:1;2872:9;;:12;;;;;;;:::i;:::-;;;;;;;;2434:457;2389:502;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:108::-;2044:24;2062:5;2044:24;:::i;:::-;2039:3;2032:37;1967:108;;:::o;2081:118::-;2168:24;2186:5;2168:24;:::i;:::-;2163:3;2156:37;2081:118;;:::o;2205:109::-;2286:21;2301:5;2286:21;:::i;:::-;2281:3;2274:34;2205:109;;:::o;2320:366::-;2462:3;2483:67;2547:2;2542:3;2483:67;:::i;:::-;2476:74;;2559:93;2648:3;2559:93;:::i;:::-;2677:2;2672:3;2668:12;2661:19;;2320:366;;;:::o;2692:::-;2834:3;2855:67;2919:2;2914:3;2855:67;:::i;:::-;2848:74;;2931:93;3020:3;2931:93;:::i;:::-;3049:2;3044:3;3040:12;3033:19;;2692:366;;;:::o;3064:::-;3206:3;3227:67;3291:2;3286:3;3227:67;:::i;:::-;3220:74;;3303:93;3392:3;3303:93;:::i;:::-;3421:2;3416:3;3412:12;3405:19;;3064:366;;;:::o;3436:::-;3578:3;3599:67;3663:2;3658:3;3599:67;:::i;:::-;3592:74;;3675:93;3764:3;3675:93;:::i;:::-;3793:2;3788:3;3784:12;3777:19;;3436:366;;;:::o;3808:::-;3950:3;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4047:93;4136:3;4047:93;:::i;:::-;4165:2;4160:3;4156:12;4149:19;;3808:366;;;:::o;4180:::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4620:858::-;4761:4;4756:3;4752:14;4849:4;4842:5;4838:16;4832:23;4868:63;4925:4;4920:3;4916:14;4902:12;4868:63;:::i;:::-;4776:165;5025:4;5018:5;5014:16;5008:23;5044:63;5101:4;5096:3;5092:14;5078:12;5044:63;:::i;:::-;4951:166;5204:4;5197:5;5193:16;5187:23;5223:63;5280:4;5275:3;5271:14;5257:12;5223:63;:::i;:::-;5127:169;5383:4;5376:5;5372:16;5366:23;5402:59;5455:4;5450:3;5446:14;5432:12;5402:59;:::i;:::-;5306:165;4730:748;4620:858;;:::o;5484:108::-;5561:24;5579:5;5561:24;:::i;:::-;5556:3;5549:37;5484:108;;:::o;5598:118::-;5685:24;5703:5;5685:24;:::i;:::-;5680:3;5673:37;5598:118;;:::o;5722:102::-;5795:22;5811:5;5795:22;:::i;:::-;5790:3;5783:35;5722:102;;:::o;5830:222::-;5923:4;5961:2;5950:9;5946:18;5938:26;;5974:71;6042:1;6031:9;6027:17;6018:6;5974:71;:::i;:::-;5830:222;;;;:::o;6058:442::-;6207:4;6245:2;6234:9;6230:18;6222:26;;6258:71;6326:1;6315:9;6311:17;6302:6;6258:71;:::i;:::-;6339:72;6407:2;6396:9;6392:18;6383:6;6339:72;:::i;:::-;6421;6489:2;6478:9;6474:18;6465:6;6421:72;:::i;:::-;6058:442;;;;;;:::o;6506:332::-;6627:4;6665:2;6654:9;6650:18;6642:26;;6678:71;6746:1;6735:9;6731:17;6722:6;6678:71;:::i;:::-;6759:72;6827:2;6816:9;6812:18;6803:6;6759:72;:::i;:::-;6506:332;;;;;:::o;6844:642::-;7065:4;7103:3;7092:9;7088:19;7080:27;;7117:71;7185:1;7174:9;7170:17;7161:6;7117:71;:::i;:::-;7198:72;7266:2;7255:9;7251:18;7242:6;7198:72;:::i;:::-;7280:116;7392:2;7381:9;7377:18;7368:6;7280:116;:::i;:::-;7406:73;7474:3;7463:9;7459:19;7450:6;7406:73;:::i;:::-;6844:642;;;;;;;:::o;7492:210::-;7579:4;7617:2;7606:9;7602:18;7594:26;;7630:65;7692:1;7681:9;7677:17;7668:6;7630:65;:::i;:::-;7492:210;;;;:::o;7708:419::-;7874:4;7912:2;7901:9;7897:18;7889:26;;7961:9;7955:4;7951:20;7947:1;7936:9;7932:17;7925:47;7989:131;8115:4;7989:131;:::i;:::-;7981:139;;7708:419;;;:::o;8133:::-;8299:4;8337:2;8326:9;8322:18;8314:26;;8386:9;8380:4;8376:20;8372:1;8361:9;8357:17;8350:47;8414:131;8540:4;8414:131;:::i;:::-;8406:139;;8133:419;;;:::o;8558:::-;8724:4;8762:2;8751:9;8747:18;8739:26;;8811:9;8805:4;8801:20;8797:1;8786:9;8782:17;8775:47;8839:131;8965:4;8839:131;:::i;:::-;8831:139;;8558:419;;;:::o;8983:::-;9149:4;9187:2;9176:9;9172:18;9164:26;;9236:9;9230:4;9226:20;9222:1;9211:9;9207:17;9200:47;9264:131;9390:4;9264:131;:::i;:::-;9256:139;;8983:419;;;:::o;9408:::-;9574:4;9612:2;9601:9;9597:18;9589:26;;9661:9;9655:4;9651:20;9647:1;9636:9;9632:17;9625:47;9689:131;9815:4;9689:131;:::i;:::-;9681:139;;9408:419;;;:::o;9833:::-;9999:4;10037:2;10026:9;10022:18;10014:26;;10086:9;10080:4;10076:20;10072:1;10061:9;10057:17;10050:47;10114:131;10240:4;10114:131;:::i;:::-;10106:139;;9833:419;;;:::o;10339:169::-;10423:11;10457:6;10452:3;10445:19;10497:4;10492:3;10488:14;10473:29;;10339:169;;;;:::o;10514:305::-;10554:3;10573:20;10591:1;10573:20;:::i;:::-;10568:25;;10607:20;10625:1;10607:20;:::i;:::-;10602:25;;10761:1;10693:66;10689:74;10686:1;10683:81;10680:107;;;10767:18;;:::i;:::-;10680:107;10811:1;10808;10804:9;10797:16;;10514:305;;;;:::o;10825:191::-;10865:4;10885:20;10903:1;10885:20;:::i;:::-;10880:25;;10919:20;10937:1;10919:20;:::i;:::-;10914:25;;10958:1;10955;10952:8;10949:34;;;10963:18;;:::i;:::-;10949:34;11008:1;11005;11001:9;10993:17;;10825:191;;;;:::o;11022:96::-;11059:7;11088:24;11106:5;11088:24;:::i;:::-;11077:35;;11022:96;;;:::o;11124:90::-;11158:7;11201:5;11194:13;11187:21;11176:32;;11124:90;;;:::o;11220:126::-;11257:7;11297:42;11290:5;11286:54;11275:65;;11220:126;;;:::o;11352:77::-;11389:7;11418:5;11407:16;;11352:77;;;:::o;11435:86::-;11470:7;11510:4;11503:5;11499:16;11488:27;;11435:86;;;:::o;11527:180::-;11575:77;11572:1;11565:88;11672:4;11669:1;11662:15;11696:4;11693:1;11686:15;11836:117;11945:1;11942;11935:12;11959:177;12099:29;12095:1;12087:6;12083:14;12076:53;11959:177;:::o;12142:225::-;12282:34;12278:1;12270:6;12266:14;12259:58;12351:8;12346:2;12338:6;12334:15;12327:33;12142:225;:::o;12373:172::-;12513:24;12509:1;12501:6;12497:14;12490:48;12373:172;:::o;12551:170::-;12691:22;12687:1;12679:6;12675:14;12668:46;12551:170;:::o;12727:182::-;12867:34;12863:1;12855:6;12851:14;12844:58;12727:182;:::o;12915:170::-;13055:22;13051:1;13043:6;13039:14;13032:46;12915:170;:::o;13091:122::-;13164:24;13182:5;13164:24;:::i;:::-;13157:5;13154:35;13144:63;;13203:1;13200;13193:12;13144:63;13091:122;:::o;13219:116::-;13289:21;13304:5;13289:21;:::i;:::-;13282:5;13279:32;13269:60;;13325:1;13322;13315:12;13269:60;13219:116;:::o;13341:122::-;13414:24;13432:5;13414:24;:::i;:::-;13407:5;13404:35;13394:63;;13453:1;13450;13443:12;13394:63;13341:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1033000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"GetStakingHistory()": "144",
								"SetStakingToken(address)": "27006",
								"StakeToken(uint256)": "infinite",
								"StakingEnabled()": "2493",
								"ToggleStaking()": "28791",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30397",
								"transferOwnership(address)": "30811"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4832,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f10101de1595803208a2c9cfb32426595da62f72a53383147deab3a93689bdd464736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4832,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1444,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1483,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1606,
											"end": 1620,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1598,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1691,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1719,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1657,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1833,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1810,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1811,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1833,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1833,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1776,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1923,
											"end": 1933,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1893,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1944,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1944,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1884,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2020,
											"end": 2030,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2044,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2064,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2175,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2204,
											"end": 2213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2216,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2227,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612"
										},
										{
											"begin": 2251,
											"end": 2261,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2263,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2284,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2301,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2302,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2941,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2478,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2479,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2489,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2452,
											"end": 2489,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2444,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2589,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2590,
											"end": 2600,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2634,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2645,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2776,
											"end": 2786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24"
										},
										{
											"begin": 2809,
											"end": 2819,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2821,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2862,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3764,
											"end": 3767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4923,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5031,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 5117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5210,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5376,
											"end": 5381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5579,
											"end": 5584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5703,
											"end": 5708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5811,
											"end": 5816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5793,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 5927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5964,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 5964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5974,
											"end": 6045,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 5974,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 6052,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6207,
											"end": 6211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6247,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6326,
											"end": 6327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6311,
											"end": 6328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6258,
											"end": 6329,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6258,
											"end": 6329,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6258,
											"end": 6329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6389,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6339,
											"end": 6411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6339,
											"end": 6411,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 6339,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6421,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6489,
											"end": 6491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6478,
											"end": 6487,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6421,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6421,
											"end": 6493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6421,
											"end": 6493,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6421,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6500,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6627,
											"end": 6631,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6744,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6731,
											"end": 6748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6678,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6809,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 6759,
											"end": 6831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6759,
											"end": 6831,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6759,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6838,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7092,
											"end": 7101,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7117,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7161,
											"end": 7167,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7117,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7117,
											"end": 7188,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7188,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7117,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7266,
											"end": 7268,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7242,
											"end": 7248,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7392,
											"end": 7394,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7390,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7280,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7474,
											"end": 7477,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7463,
											"end": 7472,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 7406,
											"end": 7479,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7406,
											"end": 7479,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 7406,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 7486,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7579,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7594,
											"end": 7620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7692,
											"end": 7693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7677,
											"end": 7694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7630,
											"end": 7695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7630,
											"end": 7695,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 7630,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7702,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7901,
											"end": 7910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7889,
											"end": 7915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7889,
											"end": 7915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7951,
											"end": 7971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 7949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7925,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7989,
											"end": 8120,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7989,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7989,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 8120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7981,
											"end": 8120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7708,
											"end": 8127,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8299,
											"end": 8303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8339,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8380,
											"end": 8384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8372,
											"end": 8373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8350,
											"end": 8397,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 8414,
											"end": 8545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8545,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 8414,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8406,
											"end": 8545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8406,
											"end": 8545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8552,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8764,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8751,
											"end": 8760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8765,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 8809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8801,
											"end": 8821,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8797,
											"end": 8798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8786,
											"end": 8795,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8782,
											"end": 8799,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8775,
											"end": 8822,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8839,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8839,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8839,
											"end": 8970,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8839,
											"end": 8970,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8839,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 8970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 8970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8977,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9149,
											"end": 9153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9236,
											"end": 9245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9230,
											"end": 9234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9220,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9207,
											"end": 9224,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9200,
											"end": 9247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 9390,
											"end": 9394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9264,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9264,
											"end": 9395,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9264,
											"end": 9395,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 9264,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9395,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9402,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9614,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9655,
											"end": 9659,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9651,
											"end": 9671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9647,
											"end": 9648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9645,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 9672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 9815,
											"end": 9819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 9689,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9681,
											"end": 9820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9681,
											"end": 9820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9827,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10003,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10037,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10026,
											"end": 10035,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10014,
											"end": 10040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10086,
											"end": 10095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10076,
											"end": 10096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10072,
											"end": 10073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10050,
											"end": 10097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10240,
											"end": 10244,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10114,
											"end": 10245,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10114,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 10114,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10106,
											"end": 10245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10106,
											"end": 10245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 10252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10452,
											"end": 10455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10445,
											"end": 10464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10492,
											"end": 10495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10473,
											"end": 10502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10473,
											"end": 10502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10339,
											"end": 10508,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10573,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 10591,
											"end": 10592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10573,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10573,
											"end": 10593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10573,
											"end": 10593,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 10573,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10568,
											"end": 10593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10568,
											"end": 10593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10627,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10761,
											"end": 10762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10693,
											"end": 10759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10689,
											"end": 10763,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10686,
											"end": 10687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10764,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10680,
											"end": 10787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10680,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10680,
											"end": 10787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10680,
											"end": 10787,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10680,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10811,
											"end": 10812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10813,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10797,
											"end": 10813,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10797,
											"end": 10813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10819,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10865,
											"end": 10869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10885,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10903,
											"end": 10904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10885,
											"end": 10905,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10885,
											"end": 10905,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10885,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10919,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10919,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10919,
											"end": 10939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10919,
											"end": 10939,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 10919,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10914,
											"end": 10939,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10914,
											"end": 10939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10955,
											"end": 10956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10952,
											"end": 10960,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10949,
											"end": 10983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10949,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10949,
											"end": 10983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10949,
											"end": 10983,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10949,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11008,
											"end": 11009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11001,
											"end": 11010,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 11016,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11059,
											"end": 11066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 11106,
											"end": 11111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 11088,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11022,
											"end": 11118,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11194,
											"end": 11207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11187,
											"end": 11208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11176,
											"end": 11208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11176,
											"end": 11208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11214,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11257,
											"end": 11264,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11297,
											"end": 11339,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11290,
											"end": 11295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11286,
											"end": 11340,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11275,
											"end": 11340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11220,
											"end": 11346,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11418,
											"end": 11423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11407,
											"end": 11423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11407,
											"end": 11423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11429,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11470,
											"end": 11477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11514,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11503,
											"end": 11508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11499,
											"end": 11515,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11488,
											"end": 11515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11488,
											"end": 11515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11521,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11527,
											"end": 11707,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 11527,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11575,
											"end": 11652,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11572,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11565,
											"end": 11653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11672,
											"end": 11676,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11669,
											"end": 11670,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11662,
											"end": 11677,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11696,
											"end": 11700,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11693,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11686,
											"end": 11701,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11836,
											"end": 11953,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 11836,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11945,
											"end": 11946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 11943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11959,
											"end": 12136,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11959,
											"end": 12136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12099,
											"end": 12128,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 12095,
											"end": 12096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12083,
											"end": 12097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12076,
											"end": 12129,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11959,
											"end": 12136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11959,
											"end": 12136,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12142,
											"end": 12367,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 12142,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12282,
											"end": 12316,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12276,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12266,
											"end": 12280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12259,
											"end": 12317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12346,
											"end": 12348,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12338,
											"end": 12344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12334,
											"end": 12349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12327,
											"end": 12360,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12142,
											"end": 12367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12142,
											"end": 12367,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12373,
											"end": 12545,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12373,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12513,
											"end": 12537,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 12509,
											"end": 12510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12501,
											"end": 12507,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12497,
											"end": 12511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12490,
											"end": 12538,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12373,
											"end": 12545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12373,
											"end": 12545,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12551,
											"end": 12721,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 12551,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12691,
											"end": 12713,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 12687,
											"end": 12688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12675,
											"end": 12689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12668,
											"end": 12714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12551,
											"end": 12721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12551,
											"end": 12721,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12727,
											"end": 12909,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 12727,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12867,
											"end": 12901,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12863,
											"end": 12864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12851,
											"end": 12865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12844,
											"end": 12902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12727,
											"end": 12909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12727,
											"end": 12909,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12915,
											"end": 13085,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 12915,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13055,
											"end": 13077,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 13051,
											"end": 13052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13043,
											"end": 13049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13039,
											"end": 13053,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13032,
											"end": 13078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12915,
											"end": 13085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12915,
											"end": 13085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13091,
											"end": 13213,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 13091,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13164,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 13182,
											"end": 13187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13164,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 13164,
											"end": 13188,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13164,
											"end": 13188,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 13164,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13154,
											"end": 13189,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13144,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 13144,
											"end": 13207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13201,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13144,
											"end": 13207,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 13144,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13091,
											"end": 13213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13091,
											"end": 13213,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13219,
											"end": 13335,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 13219,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13304,
											"end": 13309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13282,
											"end": 13287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13279,
											"end": 13311,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13269,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 13269,
											"end": 13329,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13325,
											"end": 13326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13315,
											"end": 13327,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13269,
											"end": 13329,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 13269,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13219,
											"end": 13335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13219,
											"end": 13335,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13341,
											"end": 13463,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 13341,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13414,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 13432,
											"end": 13437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13414,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 13414,
											"end": 13438,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13414,
											"end": 13438,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 13414,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13407,
											"end": 13412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13404,
											"end": 13439,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 13394,
											"end": 13457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13453,
											"end": 13454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13443,
											"end": 13455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13457,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 13394,
											"end": 13457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13341,
											"end": 13463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13341,
											"end": 13463,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakingHistory()": "b0adfa09",
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingEnabled()": "da917aea",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GetStakingHistory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xb491ebb0664c44aef30492ccf9df57ba1ebb12f29cf5e40b74df7184fe4ffe65\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7b1db5c7ad0fde1586da0642996ae31de8b9042e15bcae2ea805ec107bb682c2\",\"dweb:/ipfs/QmUMH4UUVGYZEHESjNsBwk2jFaridBUArp1R6fKrbmWJhU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "EventTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "eventType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							421
						]
					},
					"id": 422,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 421,
							"linearizedBaseContracts": [
								421,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "EventTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "eventType",
											"nameLocation": "781:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "775:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 174,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "775:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 421,
									"src": "532:265:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "876:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "852:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "852:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "869:5:2"
											},
											"referencedDeclaration": 176,
											"src": "869:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "953:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 421,
									"src": "927:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "927:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "944:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1018:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:0:2"
									},
									"scope": 421,
									"src": "991:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1053:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:2"
									},
									"scope": 421,
									"src": "1025:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1080:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1097:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1089:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1113:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1105:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1123:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1117:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1117:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1117:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1138:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1130:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:60:2"
									},
									"src": "1074:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1160:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1176:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1168:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1192:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1184:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1202:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1196:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1196:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1196:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1217:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1209:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:60:2"
									},
									"src": "1154:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1344:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1354:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1369:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1354:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1354:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1334:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1334:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1295:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1319:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1311:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:2"
									},
									"scope": 421,
									"src": "1286:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1434:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1444:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1461:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1462:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1444:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1444:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1424:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1424:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1401:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1434:0:2"
									},
									"scope": 421,
									"src": "1392:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1588:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1606:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1598:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1665:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1681:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1681:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1665:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1695:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1665:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1713:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1717:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1713:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1705:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1665:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1657:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1784:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1800:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1800:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1784:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1814:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1824:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1827:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1831:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1827:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1824:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1784:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1835:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1776:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1923:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1923:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1899:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1893:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1893:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1893:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1893:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1938:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1893:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1884:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1884:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2020:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2020:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2040:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$421",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$421",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2032:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2032:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1993:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1987:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1987:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1987:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1987:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2064:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2080:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2080:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2064:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2095:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2064:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2064:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2124:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2111:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2111:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2111:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2141:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2141:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2152:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2160:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2160:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2135:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2111:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2189:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2204:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2214:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2204:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2189:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2219:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2189:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2189:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2251:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2251:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2263:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2273:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2263:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2276:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2286:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2286:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2242:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2237:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2312:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2323:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2312:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2312:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1554:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1573:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1565:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:0:2"
									},
									"scope": 421,
									"src": "1545:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2434:457:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2452:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2468:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2468:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2452:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2483:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2452:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2491:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2444:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2444:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2590:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2590:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2602:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2567:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2561:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2561:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "2561:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2561:48:2"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 373,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2619:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2635:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2635:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2619:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2650:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2619:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2619:37:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "newUnstake",
														"nameLocation": "2679:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2666:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 380,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2666:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2666:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2698:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2698:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2709:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 387,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2717:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2717:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2734:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 383,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2692:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2666:70:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2746:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 396,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2761:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2761:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2746:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "newUnstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2776:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2746:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2746:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2809:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2809:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2821:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2831:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2821:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "newUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2834:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2846:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2846:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2801:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2801:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "EmitStatement",
												"src": "2796:66:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2872:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2883:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2872:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2872:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2398:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2419:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2411:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2434:0:2"
									},
									"scope": 421,
									"src": "2389:502:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2933:8:2",
										"statements": []
									},
									"functionSelector": "b0adfa09",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakingHistory",
									"nameLocation": "2906:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2923:2:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2933:0:2"
									},
									"scope": 421,
									"src": "2897:44:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 422,
							"src": "386:4446:2",
							"usedErrors": []
						}
					],
					"src": "36:4796:2"
				},
				"id": 2
			}
		}
	}
}