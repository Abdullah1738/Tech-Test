{
	"id": "906e13fcb6b9186e288829a4fa67eafe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 EventTime;\n        //stake (0) or unstake (1)\n        uint8 eventType;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) public StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) public StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n\n    //set the erc20 token address for the contract\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner {\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\"); //unstaking more than staked\n\n        ERC20(StakingToken).transfer(msg.sender, amount);\n        StakingBalances[msg.sender] -= amount;\n        Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1);\n        StakingHistory[currentID+1] = newUnstake;\n        emit Unstake(msg.sender, currentID+1, newUnstake, block.timestamp);\n        currentID+=1;\n    }\n\n    function GetStakingHistory() public view returns(Stake memory) {\n        Stake[] memory stakes = new Stake[](currentID-1);\n        for (uint i = 1; i < currentID; i++) {\n            stakes[i-1] = StakingHistory[i];\n        }\n        return stakes[0];\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x231dba41ba4df6928c68ba4a6e1dd82969398c13255bd0294063966e45237358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce2d51e438d7ccc9c48e729a3f6bb3d4bdf08410c07bd119faab780415819ae0\",\"dweb:/ipfs/QmPzyHSMGJzsw7jDEry9Ce5oT9p95q4kwZNkKiAoz8KCdP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "GetStakingHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"internalType": "struct StakingContract.Stake",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "StakingBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "StakingHistory",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "EventTime",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "eventType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:5058  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:5058  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:5058  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:5058  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:5058  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad95b1c6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb0adfa09\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x356bb8db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x376aa972\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x64cb560c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":852:897  mapping(uint256=>Stake) public StakingHistory */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":934:982  mapping(address=>uint256) public StakingBalances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2911:3167  function GetStakingHistory() public view returns(Stake memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":852:897  mapping(uint256=>Stake) public StakingHistory */\n    tag_23:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":934:982  mapping(address=>uint256) public StakingBalances */\n    tag_30:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Solidity Part/contracts/staking.sol\":1476:1490  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1475:1490  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1458:1472  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1458:1490  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_76\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n    tag_47:\n        /* \"Solidity Part/contracts/staking.sol\":1620:1634  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1612:1661  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Solidity Part/contracts/staking.sol\":1719:1733  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1709:1715  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1679:1694  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1679:1706  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1695:1705  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1679:1706  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1679:1715  StakingBalances[msg.sender] + amount */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"Solidity Part/contracts/staking.sol\":1679:1733  StakingBalances[msg.sender] + amount <= 1000000*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1671:1758  require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Solidity Part/contracts/staking.sol\":1838:1847  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1828:1834  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1798:1813  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1798:1825  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1814:1824  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1798:1825  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1798:1834  StakingBalances[msg.sender] + amount */\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"Solidity Part/contracts/staking.sol\":1798:1847  StakingBalances[msg.sender] + amount >= 10*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1790:1872  require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Solidity Part/contracts/staking.sol\":1952:1958  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1913:1925  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1907:1936  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1937:1947  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1907:1948  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"Solidity Part/contracts/staking.sol\":1907:1958  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1898:1990  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"Solidity Part/contracts/staking.sol\":2007:2019  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2001:2033  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":2034:2044  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2054:2058  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":2061:2067  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":2001:2068  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2109:2115  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2078:2093  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2078:2105  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2094:2104  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2078:2105  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2078:2115  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2125:2146  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2155:2165  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2166:2172  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2174:2189  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2191:2192  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2125:2193  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2233:2241  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2203:2217  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2203:2230  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2228:2229  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2218:2227  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2218:2229  currentID+1 */\n      tag_117\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_117:\n        /* \"Solidity Part/contracts/staking.sol\":2203:2230  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2203:2241  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2256:2316  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b612\n        /* \"Solidity Part/contracts/staking.sol\":2265:2275  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2287:2288  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2277:2286  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2277:2288  currentID+1 */\n      tag_118\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_118:\n        /* \"Solidity Part/contracts/staking.sol\":2290:2298  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2300:2315  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2256:2316  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_119\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2337:2338  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2326:2335  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2326:2338  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1602:2345  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2911:3167  function GetStakingHistory() public view returns(Stake memory) {... */\n    tag_50:\n        /* \"Solidity Part/contracts/staking.sol\":2960:2972  Stake memory */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"Solidity Part/contracts/staking.sol\":2984:3005  Stake[] memory stakes */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3030:3031  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3020:3029  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3020:3031  currentID-1 */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"Solidity Part/contracts/staking.sol\":3008:3032  new Stake[](currentID-1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n    tag_127:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup2\n      0x20\n      add\n    tag_131:\n      tag_132\n      tag_123\n      jump\t// in\n    tag_132:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_131\n      jumpi\n      swap1\n      pop\n    tag_130:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2984:3032  Stake[] memory stakes = new Stake[](currentID-1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3047:3053  uint i */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3056:3057  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3047:3057  uint i = 1 */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3042:3135  for (uint i = 1; i < currentID; i++) {... */\n    tag_133:\n        /* \"Solidity Part/contracts/staking.sol\":3063:3072  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3059:3060  i */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":3059:3072  i < currentID */\n      lt\n        /* \"Solidity Part/contracts/staking.sol\":3042:3135  for (uint i = 1; i < currentID; i++) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"Solidity Part/contracts/staking.sol\":3107:3121  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":3107:3124  StakingHistory[i] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3122:3123  i */\n      dup3\n        /* \"Solidity Part/contracts/staking.sol\":3107:3124  StakingHistory[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":3093:3124  stakes[i-1] = StakingHistory[i] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3093:3099  stakes */\n      dup3\n        /* \"Solidity Part/contracts/staking.sol\":3102:3103  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3100:3101  i */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":3100:3103  i-1 */\n      tag_136\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_136:\n        /* \"Solidity Part/contracts/staking.sol\":3093:3104  stakes[i-1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Solidity Part/contracts/staking.sol\":3093:3124  stakes[i-1] = StakingHistory[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3074:3077  i++ */\n      dup1\n      dup1\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3042:3135  for (uint i = 1; i < currentID; i++) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3151:3157  stakes */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":3158:3159  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3151:3160  stakes[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_143\n      tag_139\n      jump\t// in\n    tag_143:\n    tag_142:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"Solidity Part/contracts/staking.sol\":3144:3160  return stakes[0] */\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2911:3167  function GetStakingHistory() public view returns(Stake memory) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_55:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_76\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Solidity Part/contracts/staking.sol\":1383:1389  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1368:1380  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1368:1389  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n    tag_65:\n        /* \"Solidity Part/contracts/staking.sol\":2497:2503  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2466:2481  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2466:2493  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2482:2492  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2466:2493  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2466:2503  StakingBalances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2458:2535  require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_108\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Solidity Part/contracts/staking.sol\":2581:2593  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2575:2603  ERC20(StakingToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Solidity Part/contracts/staking.sol\":2604:2614  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2616:2622  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2575:2623  ERC20(StakingToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_158:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2664:2670  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2633:2648  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2633:2660  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2649:2659  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2633:2660  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2633:2670  StakingBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2680:2703  Stake memory newUnstake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2712:2722  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2723:2729  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2731:2746  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2748:2749  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2680:2750  Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2790:2800  newUnstake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2760:2774  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2760:2787  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2785:2786  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2775:2784  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2775:2786  currentID+1 */\n      tag_160\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_160:\n        /* \"Solidity Part/contracts/staking.sol\":2760:2787  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2760:2800  StakingHistory[currentID+1] = newUnstake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2815:2876  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      0x27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24\n        /* \"Solidity Part/contracts/staking.sol\":2823:2833  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2845:2846  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2835:2844  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2835:2846  currentID+1 */\n      tag_161\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_161:\n        /* \"Solidity Part/contracts/staking.sol\":2848:2858  newUnstake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2860:2875  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2815:2876  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      mload(0x40)\n      tag_162\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2897:2898  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2886:2895  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2886:2898  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_163\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2448:2905  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_76\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_123:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_177:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_179\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_181:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_183\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_185:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_187\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_189:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_191\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_188\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_29:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_194\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":665:784   */\n    tag_193:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_196\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_177\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_115:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_199\n      tag_195\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1008:1127   */\n    tag_198:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_200\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_181\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_22:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_203\n      tag_195\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1351:1470   */\n    tag_202:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_204\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_185\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_105:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_207\n      tag_195\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1697:1816   */\n    tag_206:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_208\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_189\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2075   */\n    tag_209:\n        /* \"#utility.yul\":2044:2068   */\n      tag_211\n        /* \"#utility.yul\":2062:2067   */\n      dup2\n        /* \"#utility.yul\":2044:2068   */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2039:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2069   */\n      mstore\n        /* \"#utility.yul\":1967:2075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2199   */\n    tag_213:\n        /* \"#utility.yul\":2168:2192   */\n      tag_215\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2168:2192   */\n      tag_212\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2193   */\n      mstore\n        /* \"#utility.yul\":2081:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2314   */\n    tag_216:\n        /* \"#utility.yul\":2286:2307   */\n      tag_218\n        /* \"#utility.yul\":2301:2306   */\n      dup2\n        /* \"#utility.yul\":2286:2307   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2281:2284   */\n      dup3\n        /* \"#utility.yul\":2274:2308   */\n      mstore\n        /* \"#utility.yul\":2205:2314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2686   */\n    tag_220:\n        /* \"#utility.yul\":2462:2465   */\n      0x00\n        /* \"#utility.yul\":2483:2550   */\n      tag_222\n        /* \"#utility.yul\":2547:2549   */\n      0x1b\n        /* \"#utility.yul\":2542:2545   */\n      dup4\n        /* \"#utility.yul\":2483:2550   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2476:2550   */\n      swap2\n      pop\n        /* \"#utility.yul\":2559:2652   */\n      tag_224\n        /* \"#utility.yul\":2648:2651   */\n      dup3\n        /* \"#utility.yul\":2559:2652   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2672:2675   */\n      dup3\n        /* \"#utility.yul\":2668:2680   */\n      add\n        /* \"#utility.yul\":2661:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2320:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:3058   */\n    tag_226:\n        /* \"#utility.yul\":2834:2837   */\n      0x00\n        /* \"#utility.yul\":2855:2922   */\n      tag_228\n        /* \"#utility.yul\":2919:2921   */\n      0x26\n        /* \"#utility.yul\":2914:2917   */\n      dup4\n        /* \"#utility.yul\":2855:2922   */\n      tag_223\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2848:2922   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3024   */\n      tag_229\n        /* \"#utility.yul\":3020:3023   */\n      dup3\n        /* \"#utility.yul\":2931:3024   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3052   */\n      add\n        /* \"#utility.yul\":3033:3052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:3058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3430   */\n    tag_231:\n        /* \"#utility.yul\":3206:3209   */\n      0x00\n        /* \"#utility.yul\":3227:3294   */\n      tag_233\n        /* \"#utility.yul\":3291:3293   */\n      0x16\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3227:3294   */\n      tag_223\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3220:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3303:3396   */\n      tag_234\n        /* \"#utility.yul\":3392:3395   */\n      dup3\n        /* \"#utility.yul\":3303:3396   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3412:3424   */\n      add\n        /* \"#utility.yul\":3405:3424   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3802   */\n    tag_236:\n        /* \"#utility.yul\":3578:3581   */\n      0x00\n        /* \"#utility.yul\":3599:3666   */\n      tag_238\n        /* \"#utility.yul\":3663:3665   */\n      0x14\n        /* \"#utility.yul\":3658:3661   */\n      dup4\n        /* \"#utility.yul\":3599:3666   */\n      tag_223\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3592:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3768   */\n      tag_239\n        /* \"#utility.yul\":3764:3767   */\n      dup3\n        /* \"#utility.yul\":3675:3768   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3784:3796   */\n      add\n        /* \"#utility.yul\":3777:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4174   */\n    tag_241:\n        /* \"#utility.yul\":3950:3953   */\n      0x00\n        /* \"#utility.yul\":3971:4038   */\n      tag_243\n        /* \"#utility.yul\":4035:4037   */\n      0x20\n        /* \"#utility.yul\":4030:4033   */\n      dup4\n        /* \"#utility.yul\":3971:4038   */\n      tag_223\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3964:4038   */\n      swap2\n      pop\n        /* \"#utility.yul\":4047:4140   */\n      tag_244\n        /* \"#utility.yul\":4136:4139   */\n      dup3\n        /* \"#utility.yul\":4047:4140   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4156:4168   */\n      add\n        /* \"#utility.yul\":4149:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_246:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_248\n        /* \"#utility.yul\":4407:4409   */\n      0x14\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_223\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_249\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:5478   */\n    tag_251:\n        /* \"#utility.yul\":4761:4765   */\n      0x80\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4752:4766   */\n      add\n        /* \"#utility.yul\":4849:4853   */\n      0x00\n        /* \"#utility.yul\":4842:4847   */\n      dup3\n        /* \"#utility.yul\":4838:4854   */\n      add\n        /* \"#utility.yul\":4832:4855   */\n      mload\n        /* \"#utility.yul\":4868:4931   */\n      tag_253\n        /* \"#utility.yul\":4925:4929   */\n      0x00\n        /* \"#utility.yul\":4920:4923   */\n      dup6\n        /* \"#utility.yul\":4916:4930   */\n      add\n        /* \"#utility.yul\":4902:4914   */\n      dup3\n        /* \"#utility.yul\":4868:4931   */\n      tag_209\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4776:4941   */\n      pop\n        /* \"#utility.yul\":5025:5029   */\n      0x20\n        /* \"#utility.yul\":5018:5023   */\n      dup3\n        /* \"#utility.yul\":5014:5030   */\n      add\n        /* \"#utility.yul\":5008:5031   */\n      mload\n        /* \"#utility.yul\":5044:5107   */\n      tag_254\n        /* \"#utility.yul\":5101:5105   */\n      0x20\n        /* \"#utility.yul\":5096:5099   */\n      dup6\n        /* \"#utility.yul\":5092:5106   */\n      add\n        /* \"#utility.yul\":5078:5090   */\n      dup3\n        /* \"#utility.yul\":5044:5107   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4951:5117   */\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x40\n        /* \"#utility.yul\":5197:5202   */\n      dup3\n        /* \"#utility.yul\":5193:5209   */\n      add\n        /* \"#utility.yul\":5187:5210   */\n      mload\n        /* \"#utility.yul\":5223:5286   */\n      tag_256\n        /* \"#utility.yul\":5280:5284   */\n      0x40\n        /* \"#utility.yul\":5275:5278   */\n      dup6\n        /* \"#utility.yul\":5271:5285   */\n      add\n        /* \"#utility.yul\":5257:5269   */\n      dup3\n        /* \"#utility.yul\":5223:5286   */\n      tag_255\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5127:5296   */\n      pop\n        /* \"#utility.yul\":5383:5387   */\n      0x60\n        /* \"#utility.yul\":5376:5381   */\n      dup3\n        /* \"#utility.yul\":5372:5388   */\n      add\n        /* \"#utility.yul\":5366:5389   */\n      mload\n        /* \"#utility.yul\":5402:5461   */\n      tag_257\n        /* \"#utility.yul\":5455:5459   */\n      0x60\n        /* \"#utility.yul\":5450:5453   */\n      dup6\n        /* \"#utility.yul\":5446:5460   */\n      add\n        /* \"#utility.yul\":5432:5444   */\n      dup3\n        /* \"#utility.yul\":5402:5461   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5306:5471   */\n      pop\n        /* \"#utility.yul\":4730:5478   */\n      pop\n        /* \"#utility.yul\":4620:5478   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5484:5592   */\n    tag_255:\n        /* \"#utility.yul\":5561:5585   */\n      tag_260\n        /* \"#utility.yul\":5579:5584   */\n      dup2\n        /* \"#utility.yul\":5561:5585   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5556:5559   */\n      dup3\n        /* \"#utility.yul\":5549:5586   */\n      mstore\n        /* \"#utility.yul\":5484:5592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5598:5716   */\n    tag_262:\n        /* \"#utility.yul\":5685:5709   */\n      tag_264\n        /* \"#utility.yul\":5703:5708   */\n      dup2\n        /* \"#utility.yul\":5685:5709   */\n      tag_261\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5680:5683   */\n      dup3\n        /* \"#utility.yul\":5673:5710   */\n      mstore\n        /* \"#utility.yul\":5598:5716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5722:5824   */\n    tag_258:\n        /* \"#utility.yul\":5795:5817   */\n      tag_266\n        /* \"#utility.yul\":5811:5816   */\n      dup2\n        /* \"#utility.yul\":5795:5817   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5790:5793   */\n      dup3\n        /* \"#utility.yul\":5783:5818   */\n      mstore\n        /* \"#utility.yul\":5722:5824   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5830:5942   */\n    tag_268:\n        /* \"#utility.yul\":5913:5935   */\n      tag_270\n        /* \"#utility.yul\":5929:5934   */\n      dup2\n        /* \"#utility.yul\":5913:5935   */\n      tag_267\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5908:5911   */\n      dup3\n        /* \"#utility.yul\":5901:5936   */\n      mstore\n        /* \"#utility.yul\":5830:5942   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5948:6170   */\n    tag_43:\n        /* \"#utility.yul\":6041:6045   */\n      0x00\n        /* \"#utility.yul\":6079:6081   */\n      0x20\n        /* \"#utility.yul\":6068:6077   */\n      dup3\n        /* \"#utility.yul\":6064:6082   */\n      add\n        /* \"#utility.yul\":6056:6082   */\n      swap1\n      pop\n        /* \"#utility.yul\":6092:6163   */\n      tag_272\n        /* \"#utility.yul\":6160:6161   */\n      0x00\n        /* \"#utility.yul\":6149:6158   */\n      dup4\n        /* \"#utility.yul\":6145:6162   */\n      add\n        /* \"#utility.yul\":6136:6142   */\n      dup5\n        /* \"#utility.yul\":6092:6163   */\n      tag_213\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5948:6170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6176:6618   */\n    tag_110:\n        /* \"#utility.yul\":6325:6329   */\n      0x00\n        /* \"#utility.yul\":6363:6365   */\n      0x60\n        /* \"#utility.yul\":6352:6361   */\n      dup3\n        /* \"#utility.yul\":6348:6366   */\n      add\n        /* \"#utility.yul\":6340:6366   */\n      swap1\n      pop\n        /* \"#utility.yul\":6376:6447   */\n      tag_274\n        /* \"#utility.yul\":6444:6445   */\n      0x00\n        /* \"#utility.yul\":6433:6442   */\n      dup4\n        /* \"#utility.yul\":6429:6446   */\n      add\n        /* \"#utility.yul\":6420:6426   */\n      dup7\n        /* \"#utility.yul\":6376:6447   */\n      tag_213\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6457:6529   */\n      tag_275\n        /* \"#utility.yul\":6525:6527   */\n      0x20\n        /* \"#utility.yul\":6514:6523   */\n      dup4\n        /* \"#utility.yul\":6510:6528   */\n      add\n        /* \"#utility.yul\":6501:6507   */\n      dup6\n        /* \"#utility.yul\":6457:6529   */\n      tag_213\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6539:6611   */\n      tag_276\n        /* \"#utility.yul\":6607:6609   */\n      0x40\n        /* \"#utility.yul\":6596:6605   */\n      dup4\n        /* \"#utility.yul\":6592:6610   */\n      add\n        /* \"#utility.yul\":6583:6589   */\n      dup5\n        /* \"#utility.yul\":6539:6611   */\n      tag_262\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6176:6618   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:6956   */\n    tag_154:\n        /* \"#utility.yul\":6745:6749   */\n      0x00\n        /* \"#utility.yul\":6783:6785   */\n      0x40\n        /* \"#utility.yul\":6772:6781   */\n      dup3\n        /* \"#utility.yul\":6768:6786   */\n      add\n        /* \"#utility.yul\":6760:6786   */\n      swap1\n      pop\n        /* \"#utility.yul\":6796:6867   */\n      tag_278\n        /* \"#utility.yul\":6864:6865   */\n      0x00\n        /* \"#utility.yul\":6853:6862   */\n      dup4\n        /* \"#utility.yul\":6849:6866   */\n      add\n        /* \"#utility.yul\":6840:6846   */\n      dup6\n        /* \"#utility.yul\":6796:6867   */\n      tag_213\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6877:6949   */\n      tag_279\n        /* \"#utility.yul\":6945:6947   */\n      0x20\n        /* \"#utility.yul\":6934:6943   */\n      dup4\n        /* \"#utility.yul\":6930:6948   */\n      add\n        /* \"#utility.yul\":6921:6927   */\n      dup5\n        /* \"#utility.yul\":6877:6949   */\n      tag_262\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6624:6956   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7604   */\n    tag_120:\n        /* \"#utility.yul\":7183:7187   */\n      0x00\n        /* \"#utility.yul\":7221:7224   */\n      0xe0\n        /* \"#utility.yul\":7210:7219   */\n      dup3\n        /* \"#utility.yul\":7206:7225   */\n      add\n        /* \"#utility.yul\":7198:7225   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7306   */\n      tag_281\n        /* \"#utility.yul\":7303:7304   */\n      0x00\n        /* \"#utility.yul\":7292:7301   */\n      dup4\n        /* \"#utility.yul\":7288:7305   */\n      add\n        /* \"#utility.yul\":7279:7285   */\n      dup8\n        /* \"#utility.yul\":7235:7306   */\n      tag_213\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7316:7388   */\n      tag_282\n        /* \"#utility.yul\":7384:7386   */\n      0x20\n        /* \"#utility.yul\":7373:7382   */\n      dup4\n        /* \"#utility.yul\":7369:7387   */\n      add\n        /* \"#utility.yul\":7360:7366   */\n      dup7\n        /* \"#utility.yul\":7316:7388   */\n      tag_262\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7398:7514   */\n      tag_283\n        /* \"#utility.yul\":7510:7512   */\n      0x40\n        /* \"#utility.yul\":7499:7508   */\n      dup4\n        /* \"#utility.yul\":7495:7513   */\n      add\n        /* \"#utility.yul\":7486:7492   */\n      dup6\n        /* \"#utility.yul\":7398:7514   */\n      tag_251\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7524:7597   */\n      tag_284\n        /* \"#utility.yul\":7592:7595   */\n      0xc0\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7577:7596   */\n      add\n        /* \"#utility.yul\":7568:7574   */\n      dup5\n        /* \"#utility.yul\":7524:7597   */\n      tag_262\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6962:7604   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7610:8155   */\n    tag_25:\n        /* \"#utility.yul\":7783:7787   */\n      0x00\n        /* \"#utility.yul\":7821:7824   */\n      0x80\n        /* \"#utility.yul\":7810:7819   */\n      dup3\n        /* \"#utility.yul\":7806:7825   */\n      add\n        /* \"#utility.yul\":7798:7825   */\n      swap1\n      pop\n        /* \"#utility.yul\":7835:7906   */\n      tag_286\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7892:7901   */\n      dup4\n        /* \"#utility.yul\":7888:7905   */\n      add\n        /* \"#utility.yul\":7879:7885   */\n      dup8\n        /* \"#utility.yul\":7835:7906   */\n      tag_213\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7916:7988   */\n      tag_287\n        /* \"#utility.yul\":7984:7986   */\n      0x20\n        /* \"#utility.yul\":7973:7982   */\n      dup4\n        /* \"#utility.yul\":7969:7987   */\n      add\n        /* \"#utility.yul\":7960:7966   */\n      dup7\n        /* \"#utility.yul\":7916:7988   */\n      tag_262\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7998:8070   */\n      tag_288\n        /* \"#utility.yul\":8066:8068   */\n      0x40\n        /* \"#utility.yul\":8055:8064   */\n      dup4\n        /* \"#utility.yul\":8051:8069   */\n      add\n        /* \"#utility.yul\":8042:8048   */\n      dup6\n        /* \"#utility.yul\":7998:8070   */\n      tag_262\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8080:8148   */\n      tag_289\n        /* \"#utility.yul\":8144:8146   */\n      0x60\n        /* \"#utility.yul\":8133:8142   */\n      dup4\n        /* \"#utility.yul\":8129:8147   */\n      add\n        /* \"#utility.yul\":8120:8126   */\n      dup5\n        /* \"#utility.yul\":8080:8148   */\n      tag_268\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7610:8155   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8161:8371   */\n    tag_57:\n        /* \"#utility.yul\":8248:8252   */\n      0x00\n        /* \"#utility.yul\":8286:8288   */\n      0x20\n        /* \"#utility.yul\":8275:8284   */\n      dup3\n        /* \"#utility.yul\":8271:8289   */\n      add\n        /* \"#utility.yul\":8263:8289   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8364   */\n      tag_291\n        /* \"#utility.yul\":8361:8362   */\n      0x00\n        /* \"#utility.yul\":8350:8359   */\n      dup4\n        /* \"#utility.yul\":8346:8363   */\n      add\n        /* \"#utility.yul\":8337:8343   */\n      dup5\n        /* \"#utility.yul\":8299:8364   */\n      tag_216\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8161:8371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8377:8796   */\n    tag_108:\n        /* \"#utility.yul\":8543:8547   */\n      0x00\n        /* \"#utility.yul\":8581:8583   */\n      0x20\n        /* \"#utility.yul\":8570:8579   */\n      dup3\n        /* \"#utility.yul\":8566:8584   */\n      add\n        /* \"#utility.yul\":8558:8584   */\n      swap1\n      pop\n        /* \"#utility.yul\":8630:8639   */\n      dup2\n        /* \"#utility.yul\":8624:8628   */\n      dup2\n        /* \"#utility.yul\":8620:8640   */\n      sub\n        /* \"#utility.yul\":8616:8617   */\n      0x00\n        /* \"#utility.yul\":8605:8614   */\n      dup4\n        /* \"#utility.yul\":8601:8618   */\n      add\n        /* \"#utility.yul\":8594:8641   */\n      mstore\n        /* \"#utility.yul\":8658:8789   */\n      tag_293\n        /* \"#utility.yul\":8784:8788   */\n      dup2\n        /* \"#utility.yul\":8658:8789   */\n      tag_220\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8650:8789   */\n      swap1\n      pop\n        /* \"#utility.yul\":8377:8796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8802:9221   */\n    tag_172:\n        /* \"#utility.yul\":8968:8972   */\n      0x00\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"#utility.yul\":8995:9004   */\n      dup3\n        /* \"#utility.yul\":8991:9009   */\n      add\n        /* \"#utility.yul\":8983:9009   */\n      swap1\n      pop\n        /* \"#utility.yul\":9055:9064   */\n      dup2\n        /* \"#utility.yul\":9049:9053   */\n      dup2\n        /* \"#utility.yul\":9045:9065   */\n      sub\n        /* \"#utility.yul\":9041:9042   */\n      0x00\n        /* \"#utility.yul\":9030:9039   */\n      dup4\n        /* \"#utility.yul\":9026:9043   */\n      add\n        /* \"#utility.yul\":9019:9066   */\n      mstore\n        /* \"#utility.yul\":9083:9214   */\n      tag_295\n        /* \"#utility.yul\":9209:9213   */\n      dup2\n        /* \"#utility.yul\":9083:9214   */\n      tag_226\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9075:9214   */\n      swap1\n      pop\n        /* \"#utility.yul\":8802:9221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9227:9646   */\n    tag_90:\n        /* \"#utility.yul\":9393:9397   */\n      0x00\n        /* \"#utility.yul\":9431:9433   */\n      0x20\n        /* \"#utility.yul\":9420:9429   */\n      dup3\n        /* \"#utility.yul\":9416:9434   */\n      add\n        /* \"#utility.yul\":9408:9434   */\n      swap1\n      pop\n        /* \"#utility.yul\":9480:9489   */\n      dup2\n        /* \"#utility.yul\":9474:9478   */\n      dup2\n        /* \"#utility.yul\":9470:9490   */\n      sub\n        /* \"#utility.yul\":9466:9467   */\n      0x00\n        /* \"#utility.yul\":9455:9464   */\n      dup4\n        /* \"#utility.yul\":9451:9468   */\n      add\n        /* \"#utility.yul\":9444:9491   */\n      mstore\n        /* \"#utility.yul\":9508:9639   */\n      tag_297\n        /* \"#utility.yul\":9634:9638   */\n      dup2\n        /* \"#utility.yul\":9508:9639   */\n      tag_231\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9500:9639   */\n      swap1\n      pop\n        /* \"#utility.yul\":9227:9646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9652:10071   */\n    tag_95:\n        /* \"#utility.yul\":9818:9822   */\n      0x00\n        /* \"#utility.yul\":9856:9858   */\n      0x20\n        /* \"#utility.yul\":9845:9854   */\n      dup3\n        /* \"#utility.yul\":9841:9859   */\n      add\n        /* \"#utility.yul\":9833:9859   */\n      swap1\n      pop\n        /* \"#utility.yul\":9905:9914   */\n      dup2\n        /* \"#utility.yul\":9899:9903   */\n      dup2\n        /* \"#utility.yul\":9895:9915   */\n      sub\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9880:9889   */\n      dup4\n        /* \"#utility.yul\":9876:9893   */\n      add\n        /* \"#utility.yul\":9869:9916   */\n      mstore\n        /* \"#utility.yul\":9933:10064   */\n      tag_299\n        /* \"#utility.yul\":10059:10063   */\n      dup2\n        /* \"#utility.yul\":9933:10064   */\n      tag_236\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9925:10064   */\n      swap1\n      pop\n        /* \"#utility.yul\":9652:10071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10077:10496   */\n    tag_76:\n        /* \"#utility.yul\":10243:10247   */\n      0x00\n        /* \"#utility.yul\":10281:10283   */\n      0x20\n        /* \"#utility.yul\":10270:10279   */\n      dup3\n        /* \"#utility.yul\":10266:10284   */\n      add\n        /* \"#utility.yul\":10258:10284   */\n      swap1\n      pop\n        /* \"#utility.yul\":10330:10339   */\n      dup2\n        /* \"#utility.yul\":10324:10328   */\n      dup2\n        /* \"#utility.yul\":10320:10340   */\n      sub\n        /* \"#utility.yul\":10316:10317   */\n      0x00\n        /* \"#utility.yul\":10305:10314   */\n      dup4\n        /* \"#utility.yul\":10301:10318   */\n      add\n        /* \"#utility.yul\":10294:10341   */\n      mstore\n        /* \"#utility.yul\":10358:10489   */\n      tag_301\n        /* \"#utility.yul\":10484:10488   */\n      dup2\n        /* \"#utility.yul\":10358:10489   */\n      tag_241\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10350:10489   */\n      swap1\n      pop\n        /* \"#utility.yul\":10077:10496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10502:10921   */\n    tag_99:\n        /* \"#utility.yul\":10668:10672   */\n      0x00\n        /* \"#utility.yul\":10706:10708   */\n      0x20\n        /* \"#utility.yul\":10695:10704   */\n      dup3\n        /* \"#utility.yul\":10691:10709   */\n      add\n        /* \"#utility.yul\":10683:10709   */\n      swap1\n      pop\n        /* \"#utility.yul\":10755:10764   */\n      dup2\n        /* \"#utility.yul\":10749:10753   */\n      dup2\n        /* \"#utility.yul\":10745:10765   */\n      sub\n        /* \"#utility.yul\":10741:10742   */\n      0x00\n        /* \"#utility.yul\":10730:10739   */\n      dup4\n        /* \"#utility.yul\":10726:10743   */\n      add\n        /* \"#utility.yul\":10719:10766   */\n      mstore\n        /* \"#utility.yul\":10783:10914   */\n      tag_303\n        /* \"#utility.yul\":10909:10913   */\n      dup2\n        /* \"#utility.yul\":10783:10914   */\n      tag_246\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10775:10914   */\n      swap1\n      pop\n        /* \"#utility.yul\":10502:10921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10927:11238   */\n    tag_52:\n        /* \"#utility.yul\":11064:11068   */\n      0x00\n        /* \"#utility.yul\":11102:11105   */\n      0x80\n        /* \"#utility.yul\":11091:11100   */\n      dup3\n        /* \"#utility.yul\":11087:11106   */\n      add\n        /* \"#utility.yul\":11079:11106   */\n      swap1\n      pop\n        /* \"#utility.yul\":11116:11231   */\n      tag_305\n        /* \"#utility.yul\":11228:11229   */\n      0x00\n        /* \"#utility.yul\":11217:11226   */\n      dup4\n        /* \"#utility.yul\":11213:11230   */\n      add\n        /* \"#utility.yul\":11204:11210   */\n      dup5\n        /* \"#utility.yul\":11116:11231   */\n      tag_251\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10927:11238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11244:11466   */\n    tag_32:\n        /* \"#utility.yul\":11337:11341   */\n      0x00\n        /* \"#utility.yul\":11375:11377   */\n      0x20\n        /* \"#utility.yul\":11364:11373   */\n      dup3\n        /* \"#utility.yul\":11360:11378   */\n      add\n        /* \"#utility.yul\":11352:11378   */\n      swap1\n      pop\n        /* \"#utility.yul\":11388:11459   */\n      tag_307\n        /* \"#utility.yul\":11456:11457   */\n      0x00\n        /* \"#utility.yul\":11445:11454   */\n      dup4\n        /* \"#utility.yul\":11441:11458   */\n      add\n        /* \"#utility.yul\":11432:11438   */\n      dup5\n        /* \"#utility.yul\":11388:11459   */\n      tag_262\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11244:11466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11553:11722   */\n    tag_223:\n        /* \"#utility.yul\":11637:11648   */\n      0x00\n        /* \"#utility.yul\":11671:11677   */\n      dup3\n        /* \"#utility.yul\":11666:11669   */\n      dup3\n        /* \"#utility.yul\":11659:11678   */\n      mstore\n        /* \"#utility.yul\":11711:11715   */\n      0x20\n        /* \"#utility.yul\":11706:11709   */\n      dup3\n        /* \"#utility.yul\":11702:11716   */\n      add\n        /* \"#utility.yul\":11687:11716   */\n      swap1\n      pop\n        /* \"#utility.yul\":11553:11722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11728:12033   */\n    tag_92:\n        /* \"#utility.yul\":11768:11771   */\n      0x00\n        /* \"#utility.yul\":11787:11807   */\n      tag_312\n        /* \"#utility.yul\":11805:11806   */\n      dup3\n        /* \"#utility.yul\":11787:11807   */\n      tag_261\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11782:11807   */\n      swap2\n      pop\n        /* \"#utility.yul\":11821:11841   */\n      tag_313\n        /* \"#utility.yul\":11839:11840   */\n      dup4\n        /* \"#utility.yul\":11821:11841   */\n      tag_261\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11816:11841   */\n      swap3\n      pop\n        /* \"#utility.yul\":11975:11976   */\n      dup3\n        /* \"#utility.yul\":11907:11973   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11903:11977   */\n      sub\n        /* \"#utility.yul\":11900:11901   */\n      dup3\n        /* \"#utility.yul\":11897:11978   */\n      gt\n        /* \"#utility.yul\":11894:12001   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":11981:11999   */\n      tag_315\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11894:12001   */\n    tag_314:\n        /* \"#utility.yul\":12025:12026   */\n      dup3\n        /* \"#utility.yul\":12022:12023   */\n      dup3\n        /* \"#utility.yul\":12018:12027   */\n      add\n        /* \"#utility.yul\":12011:12027   */\n      swap1\n      pop\n        /* \"#utility.yul\":11728:12033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12039:12230   */\n    tag_126:\n        /* \"#utility.yul\":12079:12083   */\n      0x00\n        /* \"#utility.yul\":12099:12119   */\n      tag_318\n        /* \"#utility.yul\":12117:12118   */\n      dup3\n        /* \"#utility.yul\":12099:12119   */\n      tag_261\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12094:12119   */\n      swap2\n      pop\n        /* \"#utility.yul\":12133:12153   */\n      tag_319\n        /* \"#utility.yul\":12151:12152   */\n      dup4\n        /* \"#utility.yul\":12133:12153   */\n      tag_261\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12128:12153   */\n      swap3\n      pop\n        /* \"#utility.yul\":12172:12173   */\n      dup3\n        /* \"#utility.yul\":12169:12170   */\n      dup3\n        /* \"#utility.yul\":12166:12174   */\n      lt\n        /* \"#utility.yul\":12163:12197   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":12177:12195   */\n      tag_321\n      tag_316\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12163:12197   */\n    tag_320:\n        /* \"#utility.yul\":12222:12223   */\n      dup3\n        /* \"#utility.yul\":12219:12220   */\n      dup3\n        /* \"#utility.yul\":12215:12224   */\n      sub\n        /* \"#utility.yul\":12207:12224   */\n      swap1\n      pop\n        /* \"#utility.yul\":12039:12230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12332   */\n    tag_212:\n        /* \"#utility.yul\":12273:12280   */\n      0x00\n        /* \"#utility.yul\":12302:12326   */\n      tag_323\n        /* \"#utility.yul\":12320:12325   */\n      dup3\n        /* \"#utility.yul\":12302:12326   */\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12291:12326   */\n      swap1\n      pop\n        /* \"#utility.yul\":12236:12332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12338:12428   */\n    tag_219:\n        /* \"#utility.yul\":12372:12379   */\n      0x00\n        /* \"#utility.yul\":12415:12420   */\n      dup2\n        /* \"#utility.yul\":12408:12421   */\n      iszero\n        /* \"#utility.yul\":12401:12422   */\n      iszero\n        /* \"#utility.yul\":12390:12422   */\n      swap1\n      pop\n        /* \"#utility.yul\":12338:12428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12434:12560   */\n    tag_324:\n        /* \"#utility.yul\":12471:12478   */\n      0x00\n        /* \"#utility.yul\":12511:12553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12504:12509   */\n      dup3\n        /* \"#utility.yul\":12500:12554   */\n      and\n        /* \"#utility.yul\":12489:12554   */\n      swap1\n      pop\n        /* \"#utility.yul\":12434:12560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12566:12643   */\n    tag_261:\n        /* \"#utility.yul\":12603:12610   */\n      0x00\n        /* \"#utility.yul\":12632:12637   */\n      dup2\n        /* \"#utility.yul\":12621:12637   */\n      swap1\n      pop\n        /* \"#utility.yul\":12566:12643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12649:12735   */\n    tag_267:\n        /* \"#utility.yul\":12684:12691   */\n      0x00\n        /* \"#utility.yul\":12724:12728   */\n      0xff\n        /* \"#utility.yul\":12717:12722   */\n      dup3\n        /* \"#utility.yul\":12713:12729   */\n      and\n        /* \"#utility.yul\":12702:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12649:12735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12741:12974   */\n    tag_141:\n        /* \"#utility.yul\":12780:12783   */\n      0x00\n        /* \"#utility.yul\":12803:12827   */\n      tag_330\n        /* \"#utility.yul\":12821:12826   */\n      dup3\n        /* \"#utility.yul\":12803:12827   */\n      tag_261\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12794:12827   */\n      swap2\n      pop\n        /* \"#utility.yul\":12849:12915   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12842:12847   */\n      dup3\n        /* \"#utility.yul\":12839:12916   */\n      eq\n        /* \"#utility.yul\":12836:12939   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":12919:12937   */\n      tag_332\n      tag_316\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12836:12939   */\n    tag_331:\n        /* \"#utility.yul\":12966:12967   */\n      0x01\n        /* \"#utility.yul\":12959:12964   */\n      dup3\n        /* \"#utility.yul\":12955:12968   */\n      add\n        /* \"#utility.yul\":12948:12968   */\n      swap1\n      pop\n        /* \"#utility.yul\":12741:12974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12980:13160   */\n    tag_316:\n        /* \"#utility.yul\":13028:13105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13025:13026   */\n      0x00\n        /* \"#utility.yul\":13018:13106   */\n      mstore\n        /* \"#utility.yul\":13125:13129   */\n      0x11\n        /* \"#utility.yul\":13122:13123   */\n      0x04\n        /* \"#utility.yul\":13115:13130   */\n      mstore\n        /* \"#utility.yul\":13149:13153   */\n      0x24\n        /* \"#utility.yul\":13146:13147   */\n      0x00\n        /* \"#utility.yul\":13139:13154   */\n      revert\n        /* \"#utility.yul\":13166:13346   */\n    tag_139:\n        /* \"#utility.yul\":13214:13291   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13211:13212   */\n      0x00\n        /* \"#utility.yul\":13204:13292   */\n      mstore\n        /* \"#utility.yul\":13311:13315   */\n      0x32\n        /* \"#utility.yul\":13308:13309   */\n      0x04\n        /* \"#utility.yul\":13301:13316   */\n      mstore\n        /* \"#utility.yul\":13335:13339   */\n      0x24\n        /* \"#utility.yul\":13332:13333   */\n      0x00\n        /* \"#utility.yul\":13325:13340   */\n      revert\n        /* \"#utility.yul\":13352:13532   */\n    tag_129:\n        /* \"#utility.yul\":13400:13477   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13397:13398   */\n      0x00\n        /* \"#utility.yul\":13390:13478   */\n      mstore\n        /* \"#utility.yul\":13497:13501   */\n      0x41\n        /* \"#utility.yul\":13494:13495   */\n      0x04\n        /* \"#utility.yul\":13487:13502   */\n      mstore\n        /* \"#utility.yul\":13521:13525   */\n      0x24\n        /* \"#utility.yul\":13518:13519   */\n      0x00\n        /* \"#utility.yul\":13511:13526   */\n      revert\n        /* \"#utility.yul\":13661:13778   */\n    tag_195:\n        /* \"#utility.yul\":13770:13771   */\n      0x00\n        /* \"#utility.yul\":13767:13768   */\n      dup1\n        /* \"#utility.yul\":13760:13772   */\n      revert\n        /* \"#utility.yul\":13784:13961   */\n    tag_225:\n        /* \"#utility.yul\":13924:13953   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":13920:13921   */\n      0x00\n        /* \"#utility.yul\":13912:13918   */\n      dup3\n        /* \"#utility.yul\":13908:13922   */\n      add\n        /* \"#utility.yul\":13901:13954   */\n      mstore\n        /* \"#utility.yul\":13784:13961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13967:14192   */\n    tag_230:\n        /* \"#utility.yul\":14107:14141   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14103:14104   */\n      0x00\n        /* \"#utility.yul\":14095:14101   */\n      dup3\n        /* \"#utility.yul\":14091:14105   */\n      add\n        /* \"#utility.yul\":14084:14142   */\n      mstore\n        /* \"#utility.yul\":14176:14184   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14171:14173   */\n      0x20\n        /* \"#utility.yul\":14163:14169   */\n      dup3\n        /* \"#utility.yul\":14159:14174   */\n      add\n        /* \"#utility.yul\":14152:14185   */\n      mstore\n        /* \"#utility.yul\":13967:14192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14198:14370   */\n    tag_235:\n        /* \"#utility.yul\":14338:14362   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":14334:14335   */\n      0x00\n        /* \"#utility.yul\":14326:14332   */\n      dup3\n        /* \"#utility.yul\":14322:14336   */\n      add\n        /* \"#utility.yul\":14315:14363   */\n      mstore\n        /* \"#utility.yul\":14198:14370   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14376:14546   */\n    tag_240:\n        /* \"#utility.yul\":14516:14538   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":14512:14513   */\n      0x00\n        /* \"#utility.yul\":14504:14510   */\n      dup3\n        /* \"#utility.yul\":14500:14514   */\n      add\n        /* \"#utility.yul\":14493:14539   */\n      mstore\n        /* \"#utility.yul\":14376:14546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14552:14734   */\n    tag_245:\n        /* \"#utility.yul\":14692:14726   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14688:14689   */\n      0x00\n        /* \"#utility.yul\":14680:14686   */\n      dup3\n        /* \"#utility.yul\":14676:14690   */\n      add\n        /* \"#utility.yul\":14669:14727   */\n      mstore\n        /* \"#utility.yul\":14552:14734   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14740:14910   */\n    tag_250:\n        /* \"#utility.yul\":14880:14902   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":14876:14877   */\n      0x00\n        /* \"#utility.yul\":14868:14874   */\n      dup3\n        /* \"#utility.yul\":14864:14878   */\n      add\n        /* \"#utility.yul\":14857:14903   */\n      mstore\n        /* \"#utility.yul\":14740:14910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14916:15038   */\n    tag_180:\n        /* \"#utility.yul\":14989:15013   */\n      tag_346\n        /* \"#utility.yul\":15007:15012   */\n      dup2\n        /* \"#utility.yul\":14989:15013   */\n      tag_212\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":14982:14987   */\n      dup2\n        /* \"#utility.yul\":14979:15014   */\n      eq\n        /* \"#utility.yul\":14969:15032   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":15028:15029   */\n      0x00\n        /* \"#utility.yul\":15025:15026   */\n      dup1\n        /* \"#utility.yul\":15018:15030   */\n      revert\n        /* \"#utility.yul\":14969:15032   */\n    tag_347:\n        /* \"#utility.yul\":14916:15038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15044:15160   */\n    tag_184:\n        /* \"#utility.yul\":15114:15135   */\n      tag_349\n        /* \"#utility.yul\":15129:15134   */\n      dup2\n        /* \"#utility.yul\":15114:15135   */\n      tag_219\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":15107:15112   */\n      dup2\n        /* \"#utility.yul\":15104:15136   */\n      eq\n        /* \"#utility.yul\":15094:15154   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":15150:15151   */\n      0x00\n        /* \"#utility.yul\":15147:15148   */\n      dup1\n        /* \"#utility.yul\":15140:15152   */\n      revert\n        /* \"#utility.yul\":15094:15154   */\n    tag_350:\n        /* \"#utility.yul\":15044:15160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15166:15288   */\n    tag_188:\n        /* \"#utility.yul\":15239:15263   */\n      tag_352\n        /* \"#utility.yul\":15257:15262   */\n      dup2\n        /* \"#utility.yul\":15239:15263   */\n      tag_261\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":15232:15237   */\n      dup2\n        /* \"#utility.yul\":15229:15264   */\n      eq\n        /* \"#utility.yul\":15219:15282   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":15278:15279   */\n      0x00\n        /* \"#utility.yul\":15275:15276   */\n      dup1\n        /* \"#utility.yul\":15268:15280   */\n      revert\n        /* \"#utility.yul\":15219:15282   */\n    tag_353:\n        /* \"#utility.yul\":15166:15288   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e0d3afec34e25cc9c8ea2de22360421a5967cf94c0cebffd606e4ef7d06e51b864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61183d8061012d6000396000f3fe6080604052600436106100a05760003560e01c8063ad95b1c611610064578063ad95b1c61461017f578063b0adfa09146101a8578063da917aea146101d3578063db568922146101fe578063df6a8a1514610227578063f2fde38b14610250576100a7565b8063356bb8db146100a9578063376aa972146100e957806364cb560c14610126578063715018a61461013d5780638da5cb5b14610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906110db565b610279565b6040516100e09493929190611385565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611081565b6102d6565b60405161011d91906114c0565b60405180910390f35b34801561013257600080fd5b5061013b6102ee565b005b34801561014957600080fd5b50610152610396565b005b34801561016057600080fd5b5061016961041e565b60405161017691906112c5565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906110db565b610447565b005b3480156101b457600080fd5b506101bd610900565b6040516101ca91906114a5565b60405180910390f35b3480156101df57600080fd5b506101e8610a84565b6040516101f591906113ca565b60405180910390f35b34801561020a57600080fd5b5061022560048036038101906102209190611081565b610a97565b005b34801561023357600080fd5b5061024e600480360381019061024991906110db565b610b57565b005b34801561025c57600080fd5b5061027760048036038101906102729190611081565b610e28565b005b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60056020528060005260406000206000915090505481565b6102f6610f20565b73ffffffffffffffffffffffffffffffffffffffff1661031461041e565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190611465565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b61039e610f20565b73ffffffffffffffffffffffffffffffffffffffff166103bc61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990611465565b60405180910390fd5b61041c6000610f28565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611425565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906114ec565b111561052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490611445565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058191906114ec565b10156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990611485565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161061e91906112c5565b60206040518083038186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190611108565b10156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906113e5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070e939291906112e0565b602060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076091906110ae565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b091906114ec565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff1681525090508060046000600160025461080a91906114ec565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546108c891906114ec565b83426040516108da9493929190611340565b60405180910390a16001600260008282546108f591906114ec565b925050819055505050565b610908610fec565b600060016002546109199190611542565b67ffffffffffffffff81111561093257610931611672565b5b60405190808252806020026020018201604052801561096b57816020015b610958610fec565b8152602001906001900390816109505790505b5090506000600190505b600254811015610a6157600460008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff168152505082600183610a329190611542565b81518110610a4357610a42611643565b5b60200260200101819052508080610a59906115cb565b915050610975565b5080600081518110610a7657610a75611643565b5b602002602001015191505090565b600360009054906101000a900460ff1681565b610a9f610f20565b73ffffffffffffffffffffffffffffffffffffffff16610abd61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611465565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd0906113e5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c36929190611317565b602060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906110ae565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd89190611542565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610d3291906114ec565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610df091906114ec565b8342604051610e029493929190611340565b60405180910390a1600160026000828254610e1d91906114ec565b925050819055505050565b610e30610f20565b73ffffffffffffffffffffffffffffffffffffffff16610e4e61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b90611465565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0b90611405565b60405180910390fd5b610f1d81610f28565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b60008135905061103c816117c2565b92915050565b600081519050611051816117d9565b92915050565b600081359050611066816117f0565b92915050565b60008151905061107b816117f0565b92915050565b600060208284031215611097576110966116a1565b5b60006110a58482850161102d565b91505092915050565b6000602082840312156110c4576110c36116a1565b5b60006110d284828501611042565b91505092915050565b6000602082840312156110f1576110f06116a1565b5b60006110ff84828501611057565b91505092915050565b60006020828403121561111e5761111d6116a1565b5b600061112c8482850161106c565b91505092915050565b61113e81611576565b82525050565b61114d81611576565b82525050565b61115c81611588565b82525050565b600061116f601b836114db565b915061117a826116a6565b602082019050919050565b60006111926026836114db565b915061119d826116cf565b604082019050919050565b60006111b56016836114db565b91506111c08261171e565b602082019050919050565b60006111d86014836114db565b91506111e382611747565b602082019050919050565b60006111fb6020836114db565b915061120682611770565b602082019050919050565b600061121e6014836114db565b915061122982611799565b602082019050919050565b60808201600082015161124a6000850182611135565b50602082015161125d6020850182611289565b5060408201516112706040850182611289565b50606082015161128360608501826112a7565b50505050565b611292816115b4565b82525050565b6112a1816115b4565b82525050565b6112b0816115be565b82525050565b6112bf816115be565b82525050565b60006020820190506112da6000830184611144565b92915050565b60006060820190506112f56000830186611144565b6113026020830185611144565b61130f6040830184611298565b949350505050565b600060408201905061132c6000830185611144565b6113396020830184611298565b9392505050565b600060e0820190506113556000830187611144565b6113626020830186611298565b61136f6040830185611234565b61137c60c0830184611298565b95945050505050565b600060808201905061139a6000830187611144565b6113a76020830186611298565b6113b46040830185611298565b6113c160608301846112b6565b95945050505050565b60006020820190506113df6000830184611153565b92915050565b600060208201905081810360008301526113fe81611162565b9050919050565b6000602082019050818103600083015261141e81611185565b9050919050565b6000602082019050818103600083015261143e816111a8565b9050919050565b6000602082019050818103600083015261145e816111cb565b9050919050565b6000602082019050818103600083015261147e816111ee565b9050919050565b6000602082019050818103600083015261149e81611211565b9050919050565b60006080820190506114ba6000830184611234565b92915050565b60006020820190506114d56000830184611298565b92915050565b600082825260208201905092915050565b60006114f7826115b4565b9150611502836115b4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561153757611536611614565b5b828201905092915050565b600061154d826115b4565b9150611558836115b4565b92508282101561156b5761156a611614565b5b828203905092915050565b600061158182611594565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006115d6826115b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561160957611608611614565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6117cb81611576565b81146117d657600080fd5b50565b6117e281611588565b81146117ed57600080fd5b50565b6117f9816115b4565b811461180457600080fd5b5056fea2646970667358221220e0d3afec34e25cc9c8ea2de22360421a5967cf94c0cebffd606e4ef7d06e51b864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x183D DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD95B1C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x250 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x356BB8DB EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x376AA972 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x64CB560C EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xE28 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C PUSH1 0x0 PUSH2 0xF28 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST GT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x908 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x1672 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x96B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x958 PUSH2 0xFEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x950 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA42 PUSH2 0x1643 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xA59 SWAP1 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x975 JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA76 JUMPI PUSH2 0xA75 PUSH2 0x1643 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA9F PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABD PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP3 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xE02 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE30 PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE4E PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1D DUP2 PUSH2 0xF28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x107B DUP2 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A5 DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D2 DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F1 JUMPI PUSH2 0x10F0 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111E JUMPI PUSH2 0x111D PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112C DUP5 DUP3 DUP6 ADD PUSH2 0x106C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x114D DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115C DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116F PUSH1 0x1B DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x117A DUP3 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 PUSH1 0x26 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x119D DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B5 PUSH1 0x16 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x11C0 DUP3 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 PUSH1 0x14 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x11E3 DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0x20 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E PUSH1 0x14 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x124A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1135 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x125D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1270 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1283 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x12A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1292 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12B0 DUP2 PUSH2 0x15BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0x15BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1302 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x130F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x132C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1339 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1362 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x136F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x137C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x139A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x13A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x13B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x13C1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FE DUP2 PUSH2 0x1162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x141E DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143E DUP2 PUSH2 0x11A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145E DUP2 PUSH2 0x11CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147E DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149E DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F7 DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP4 PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x1614 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP4 PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1614 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1609 JUMPI PUSH2 0x1608 PUSH2 0x1614 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x17CB DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP2 EQ PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD3 0xAF 0xEC CALLVALUE 0xE2 0x5C 0xC9 0xC8 0xEA 0x2D 0xE2 0x23 PUSH1 0x42 BYTE MSIZE PUSH8 0xCF94C0CEBFFD606E 0x4E 0xF7 0xD0 PUSH15 0x51B864736F6C634300080700330000 ",
							"sourceMap": "386:4672:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4672;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4672:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4672:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakingHistory_463": {
									"entryPoint": 2304,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@SetStakingToken_227": {
									"entryPoint": 2711,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 1095,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingBalances_185": {
									"entryPoint": 726,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 2692,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StakingHistory_181": {
									"entryPoint": 633,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 750,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_416": {
									"entryPoint": 2903,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3872,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3880,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 1054,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 918,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3624,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 4997,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Stake_$176_memory_ptr__to_t_struct$_Stake_$176_memory_ptr__fromStack_reversed": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15291:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2062:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2044:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2010:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2017:3:3",
														"type": ""
													}
												],
												"src": "1967:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2168:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2141:3:3",
														"type": ""
													}
												],
												"src": "2081:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2301:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2286:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2259:3:3",
														"type": ""
													}
												],
												"src": "2205:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "2559:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2672:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2462:3:3",
														"type": ""
													}
												],
												"src": "2320:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2834:3:3",
														"type": ""
													}
												],
												"src": "2692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3286:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3227:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3392:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "3303:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:3",
														"type": ""
													}
												],
												"src": "3064:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3599:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3764:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "3675:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3570:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:3",
														"type": ""
													}
												],
												"src": "3436:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3971:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4136:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4047:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:3",
														"type": ""
													}
												],
												"src": "3808:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4180:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4744:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4776:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4842:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4849:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4832:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4816:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4902:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4925:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4868:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4868:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4951:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4988:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5018:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5025:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5014:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5008:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4992:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5078:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5096:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5101:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5044:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5044:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5127:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5167:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5197:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5204:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5193:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5193:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5187:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5187:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5171:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5257:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5275:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5280:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5271:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5271:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5223:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5223:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5306:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5346:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5376:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5383:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5372:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5372:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5366:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5350:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5432:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5450:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5455:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5446:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5446:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5402:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5402:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4717:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4724:3:3",
														"type": ""
													}
												],
												"src": "4620:858:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5556:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5579:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5561:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5527:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5534:3:3",
														"type": ""
													}
												],
												"src": "5484:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5680:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5703:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5685:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5685:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5673:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5651:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5658:3:3",
														"type": ""
													}
												],
												"src": "5598:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5790:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5811:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5795:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5761:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5768:3:3",
														"type": ""
													}
												],
												"src": "5722:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5891:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5908:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5929:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5913:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5913:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5901:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5879:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5886:3:3",
														"type": ""
													}
												],
												"src": "5830:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6046:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6056:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6068:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6064:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6056:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6149:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6160:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6145:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6092:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6092:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6092:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6018:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6030:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6041:4:3",
														"type": ""
													}
												],
												"src": "5948:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6330:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6340:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6352:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6348:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6340:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6420:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6444:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6429:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6376:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6376:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6501:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6514:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6525:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6457:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6457:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6583:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6596:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6607:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6592:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6592:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6539:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6539:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6286:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6298:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6306:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6314:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6325:4:3",
														"type": ""
													}
												],
												"src": "6176:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6750:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6760:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6772:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6783:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6768:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6760:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6840:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6864:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6796:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6796:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6921:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6934:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6945:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6930:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6877:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6877:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6714:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6726:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6734:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6745:4:3",
														"type": ""
													}
												],
												"src": "6624:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7188:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7198:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7210:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7221:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7206:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7198:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7279:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7303:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7288:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7235:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7235:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7360:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7373:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7384:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7316:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7316:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7316:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7486:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7499:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7510:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7495:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7398:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7568:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7592:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7577:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7524:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7524:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7136:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7148:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7156:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7164:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7172:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7183:4:3",
														"type": ""
													}
												],
												"src": "6962:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7788:367:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7798:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7810:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7821:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7806:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7798:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7879:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7892:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7903:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7888:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7888:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7835:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7960:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7973:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7984:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7916:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7916:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8042:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8055:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8051:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8051:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7998:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7998:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8120:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8133:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8144:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8129:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8129:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8080:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8080:68:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8080:68:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7736:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7748:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7756:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7764:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7772:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7783:4:3",
														"type": ""
													}
												],
												"src": "7610:545:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8253:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8263:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8275:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8271:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8263:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8299:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8225:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8237:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8248:4:3",
														"type": ""
													}
												],
												"src": "8161:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8548:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8558:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8570:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8581:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8566:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8566:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8558:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8605:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8616:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8601:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8624:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8630:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8594:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8594:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8650:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8784:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8658:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8650:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8528:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8543:4:3",
														"type": ""
													}
												],
												"src": "8377:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8973:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8983:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8995:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8983:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9030:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9041:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9026:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9026:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9049:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9055:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9045:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9045:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9019:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9019:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9075:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9209:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9083:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9083:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9075:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8953:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8968:4:3",
														"type": ""
													}
												],
												"src": "8802:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9398:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9408:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9420:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9431:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9416:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9408:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9455:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9466:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9451:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9451:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9474:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9480:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9470:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9470:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9444:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9444:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9444:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9500:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9634:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9508:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9500:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9378:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9393:4:3",
														"type": ""
													}
												],
												"src": "9227:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9823:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9833:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9845:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9856:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9833:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9880:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9891:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9876:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9899:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9905:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9895:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9895:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9869:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9925:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10059:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9933:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9933:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9925:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9803:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9818:4:3",
														"type": ""
													}
												],
												"src": "9652:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10248:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10258:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10270:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10281:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10266:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10258:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10305:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10316:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10301:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10301:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10324:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10330:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10320:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10320:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10294:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10294:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10294:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10350:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10484:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10358:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10358:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10350:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10228:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10243:4:3",
														"type": ""
													}
												],
												"src": "10077:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10673:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10683:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10706:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10691:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10683:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10730:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10741:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10726:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10726:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10749:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10745:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10745:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10719:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10719:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10775:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10909:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10783:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10653:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10668:4:3",
														"type": ""
													}
												],
												"src": "10502:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11069:169:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11079:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11091:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11102:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11087:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11087:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11079:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11204:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11217:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11228:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11213:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11213:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11116:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11116:115:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11116:115:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Stake_$176_memory_ptr__to_t_struct$_Stake_$176_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11041:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11053:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11064:4:3",
														"type": ""
													}
												],
												"src": "10927:311:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11342:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11352:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11364:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11375:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11360:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11352:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11432:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11445:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11456:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11441:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11388:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11388:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11388:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11314:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11326:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11337:4:3",
														"type": ""
													}
												],
												"src": "11244:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11512:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11522:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11538:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11532:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11532:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11522:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11505:6:3",
														"type": ""
													}
												],
												"src": "11472:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11649:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11666:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11671:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11687:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11706:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11711:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11702:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11702:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11687:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11621:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11626:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11637:11:3",
														"type": ""
													}
												],
												"src": "11553:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11772:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11782:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11805:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11787:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11782:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11816:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11821:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11816:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11981:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11981:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11981:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11900:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11907:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11975:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11903:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11903:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11897:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11897:81:3"
															},
															"nodeType": "YulIf",
															"src": "11894:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12022:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12025:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12011:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11759:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11762:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11768:3:3",
														"type": ""
													}
												],
												"src": "11728:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12094:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12117:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12099:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12099:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12094:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12128:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12151:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12133:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12133:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12128:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12175:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12177:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12177:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12177:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12169:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12172:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12166:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12166:8:3"
															},
															"nodeType": "YulIf",
															"src": "12163:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12207:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12219:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12222:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12215:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12215:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12207:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12070:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12073:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12079:4:3",
														"type": ""
													}
												],
												"src": "12039:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12281:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12291:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12320:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12302:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12302:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12291:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12263:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12273:7:3",
														"type": ""
													}
												],
												"src": "12236:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12380:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12390:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12415:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12408:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12408:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12401:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12390:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12362:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12372:7:3",
														"type": ""
													}
												],
												"src": "12338:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12479:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12489:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12504:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12511:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12500:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12500:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12489:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12461:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12471:7:3",
														"type": ""
													}
												],
												"src": "12434:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12611:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12621:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12632:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12621:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12593:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12603:7:3",
														"type": ""
													}
												],
												"src": "12566:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12692:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12702:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12717:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12724:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12713:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12702:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12674:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12684:7:3",
														"type": ""
													}
												],
												"src": "12649:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12784:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12794:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12821:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12803:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12794:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12917:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12919:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12919:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12919:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12842:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12839:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12839:77:3"
															},
															"nodeType": "YulIf",
															"src": "12836:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12948:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12959:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12966:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12955:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12955:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12948:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12770:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12780:3:3",
														"type": ""
													}
												],
												"src": "12741:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13008:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13025:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13028:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13018:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13018:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13018:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13122:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13125:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13115:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13115:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13146:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13149:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13139:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13139:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13139:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12980:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13194:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13211:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13204:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13204:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13308:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13301:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13301:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13301:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13332:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13335:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13325:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13325:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13166:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13380:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13397:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13400:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13390:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13390:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13390:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13494:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13497:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13487:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13487:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13487:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13518:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13521:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13511:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13511:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13352:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13627:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13644:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13647:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13637:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13637:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13637:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13538:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13750:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13767:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13770:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13760:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13760:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13760:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13661:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13890:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13912:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13920:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13908:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13908:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13924:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13901:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13901:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13901:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13882:6:3",
														"type": ""
													}
												],
												"src": "13784:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14073:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14095:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14103:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14091:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14091:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14107:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14084:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14084:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14163:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14171:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14159:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14176:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14152:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14152:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14065:6:3",
														"type": ""
													}
												],
												"src": "13967:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14304:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14326:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14334:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14322:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14322:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14338:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14315:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14315:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14315:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14296:6:3",
														"type": ""
													}
												],
												"src": "14198:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14482:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14504:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14500:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14500:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14516:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14493:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14493:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14493:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14474:6:3",
														"type": ""
													}
												],
												"src": "14376:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14658:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14680:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14688:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14676:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14676:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14692:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14669:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14669:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14669:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14650:6:3",
														"type": ""
													}
												],
												"src": "14552:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14846:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14868:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14876:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14864:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14864:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14880:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14857:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14857:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14857:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14838:6:3",
														"type": ""
													}
												],
												"src": "14740:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14959:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15016:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15025:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15028:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15018:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15018:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15018:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14982:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15007:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14989:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14989:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14979:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14979:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14972:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14972:43:3"
															},
															"nodeType": "YulIf",
															"src": "14969:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14952:5:3",
														"type": ""
													}
												],
												"src": "14916:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15084:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15138:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15147:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15150:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15140:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15140:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15140:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15107:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15129:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15114:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15114:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15104:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15104:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15097:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15097:40:3"
															},
															"nodeType": "YulIf",
															"src": "15094:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15077:5:3",
														"type": ""
													}
												],
												"src": "15044:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15209:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15266:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15275:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15278:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15268:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15268:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15268:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15232:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15257:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15239:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15239:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15229:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15229:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15222:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15222:43:3"
															},
															"nodeType": "YulIf",
															"src": "15219:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15202:5:3",
														"type": ""
													}
												],
												"src": "15166:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Stake_$176_memory_ptr__to_t_struct$_Stake_$176_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c8063ad95b1c611610064578063ad95b1c61461017f578063b0adfa09146101a8578063da917aea146101d3578063db568922146101fe578063df6a8a1514610227578063f2fde38b14610250576100a7565b8063356bb8db146100a9578063376aa972146100e957806364cb560c14610126578063715018a61461013d5780638da5cb5b14610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906110db565b610279565b6040516100e09493929190611385565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611081565b6102d6565b60405161011d91906114c0565b60405180910390f35b34801561013257600080fd5b5061013b6102ee565b005b34801561014957600080fd5b50610152610396565b005b34801561016057600080fd5b5061016961041e565b60405161017691906112c5565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906110db565b610447565b005b3480156101b457600080fd5b506101bd610900565b6040516101ca91906114a5565b60405180910390f35b3480156101df57600080fd5b506101e8610a84565b6040516101f591906113ca565b60405180910390f35b34801561020a57600080fd5b5061022560048036038101906102209190611081565b610a97565b005b34801561023357600080fd5b5061024e600480360381019061024991906110db565b610b57565b005b34801561025c57600080fd5b5061027760048036038101906102729190611081565b610e28565b005b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60056020528060005260406000206000915090505481565b6102f6610f20565b73ffffffffffffffffffffffffffffffffffffffff1661031461041e565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190611465565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b61039e610f20565b73ffffffffffffffffffffffffffffffffffffffff166103bc61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990611465565b60405180910390fd5b61041c6000610f28565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611425565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906114ec565b111561052d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052490611445565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058191906114ec565b10156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990611485565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161061e91906112c5565b60206040518083038186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190611108565b10156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906113e5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070e939291906112e0565b602060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076091906110ae565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b091906114ec565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff1681525090508060046000600160025461080a91906114ec565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546108c891906114ec565b83426040516108da9493929190611340565b60405180910390a16001600260008282546108f591906114ec565b925050819055505050565b610908610fec565b600060016002546109199190611542565b67ffffffffffffffff81111561093257610931611672565b5b60405190808252806020026020018201604052801561096b57816020015b610958610fec565b8152602001906001900390816109505790505b5090506000600190505b600254811015610a6157600460008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff168152505082600183610a329190611542565b81518110610a4357610a42611643565b5b60200260200101819052508080610a59906115cb565b915050610975565b5080600081518110610a7657610a75611643565b5b602002602001015191505090565b600360009054906101000a900460ff1681565b610a9f610f20565b73ffffffffffffffffffffffffffffffffffffffff16610abd61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611465565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd0906113e5565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c36929190611317565b602060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8891906110ae565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd89190611542565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610d3291906114ec565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610df091906114ec565b8342604051610e029493929190611340565b60405180910390a1600160026000828254610e1d91906114ec565b925050819055505050565b610e30610f20565b73ffffffffffffffffffffffffffffffffffffffff16610e4e61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b90611465565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0b90611405565b60405180910390fd5b610f1d81610f28565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b60008135905061103c816117c2565b92915050565b600081519050611051816117d9565b92915050565b600081359050611066816117f0565b92915050565b60008151905061107b816117f0565b92915050565b600060208284031215611097576110966116a1565b5b60006110a58482850161102d565b91505092915050565b6000602082840312156110c4576110c36116a1565b5b60006110d284828501611042565b91505092915050565b6000602082840312156110f1576110f06116a1565b5b60006110ff84828501611057565b91505092915050565b60006020828403121561111e5761111d6116a1565b5b600061112c8482850161106c565b91505092915050565b61113e81611576565b82525050565b61114d81611576565b82525050565b61115c81611588565b82525050565b600061116f601b836114db565b915061117a826116a6565b602082019050919050565b60006111926026836114db565b915061119d826116cf565b604082019050919050565b60006111b56016836114db565b91506111c08261171e565b602082019050919050565b60006111d86014836114db565b91506111e382611747565b602082019050919050565b60006111fb6020836114db565b915061120682611770565b602082019050919050565b600061121e6014836114db565b915061122982611799565b602082019050919050565b60808201600082015161124a6000850182611135565b50602082015161125d6020850182611289565b5060408201516112706040850182611289565b50606082015161128360608501826112a7565b50505050565b611292816115b4565b82525050565b6112a1816115b4565b82525050565b6112b0816115be565b82525050565b6112bf816115be565b82525050565b60006020820190506112da6000830184611144565b92915050565b60006060820190506112f56000830186611144565b6113026020830185611144565b61130f6040830184611298565b949350505050565b600060408201905061132c6000830185611144565b6113396020830184611298565b9392505050565b600060e0820190506113556000830187611144565b6113626020830186611298565b61136f6040830185611234565b61137c60c0830184611298565b95945050505050565b600060808201905061139a6000830187611144565b6113a76020830186611298565b6113b46040830185611298565b6113c160608301846112b6565b95945050505050565b60006020820190506113df6000830184611153565b92915050565b600060208201905081810360008301526113fe81611162565b9050919050565b6000602082019050818103600083015261141e81611185565b9050919050565b6000602082019050818103600083015261143e816111a8565b9050919050565b6000602082019050818103600083015261145e816111cb565b9050919050565b6000602082019050818103600083015261147e816111ee565b9050919050565b6000602082019050818103600083015261149e81611211565b9050919050565b60006080820190506114ba6000830184611234565b92915050565b60006020820190506114d56000830184611298565b92915050565b600082825260208201905092915050565b60006114f7826115b4565b9150611502836115b4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561153757611536611614565b5b828201905092915050565b600061154d826115b4565b9150611558836115b4565b92508282101561156b5761156a611614565b5b828203905092915050565b600061158182611594565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006115d6826115b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561160957611608611614565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6117cb81611576565b81146117d657600080fd5b50565b6117e281611588565b81146117ed57600080fd5b50565b6117f9816115b4565b811461180457600080fd5b5056fea2646970667358221220e0d3afec34e25cc9c8ea2de22360421a5967cf94c0cebffd606e4ef7d06e51b864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD95B1C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x250 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x356BB8DB EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x376AA972 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x64CB560C EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xE28 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C PUSH1 0x0 PUSH2 0xF28 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST GT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x908 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x1672 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x96B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x958 PUSH2 0xFEC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x950 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA42 PUSH2 0x1643 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xA59 SWAP1 PUSH2 0x15CB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x975 JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA76 JUMPI PUSH2 0xA75 PUSH2 0x1643 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA9F PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABD PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP3 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xE02 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE30 PUSH2 0xF20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE4E PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF1D DUP2 PUSH2 0xF28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x17C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x107B DUP2 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10A5 DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10D2 DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F1 JUMPI PUSH2 0x10F0 PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FF DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111E JUMPI PUSH2 0x111D PUSH2 0x16A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112C DUP5 DUP3 DUP6 ADD PUSH2 0x106C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x113E DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x114D DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115C DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116F PUSH1 0x1B DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x117A DUP3 PUSH2 0x16A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 PUSH1 0x26 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x119D DUP3 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B5 PUSH1 0x16 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x11C0 DUP3 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D8 PUSH1 0x14 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x11E3 DUP3 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FB PUSH1 0x20 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1206 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E PUSH1 0x14 DUP4 PUSH2 0x14DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1229 DUP3 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x124A PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1135 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x125D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1270 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1283 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x12A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1292 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12A1 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12B0 DUP2 PUSH2 0x15BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0x15BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1144 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1302 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x130F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x132C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1339 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1355 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x1362 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x136F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x137C PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x139A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0x13A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x13B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x13C1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FE DUP2 PUSH2 0x1162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x141E DUP2 PUSH2 0x1185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143E DUP2 PUSH2 0x11A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145E DUP2 PUSH2 0x11CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147E DUP2 PUSH2 0x11EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149E DUP2 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1298 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F7 DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP4 PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x1614 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP4 PUSH2 0x15B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x156B JUMPI PUSH2 0x156A PUSH2 0x1614 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 DUP3 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D6 DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1609 JUMPI PUSH2 0x1608 PUSH2 0x1614 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x17CB DUP2 PUSH2 0x1576 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1588 JUMP JUMPDEST DUP2 EQ PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xD3 0xAF 0xEC CALLVALUE 0xE2 0x5C 0xC9 0xC8 0xEA 0x2D 0xE2 0x23 PUSH1 0x42 BYTE MSIZE PUSH8 0xCF94C0CEBFFD606E 0x4E 0xF7 0xD0 PUSH15 0x51B864736F6C634300080700330000 ",
							"sourceMap": "386:4672:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;934:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1406:91;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2911:256;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1300:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2403:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;852:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;934:48::-;;;;;;;;;;;;;;;;;:::o;1406:91::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1476:14:2::1;;;;;;;;;;;1475:15;1458:14;;:32;;;;;;;;;;;;;;;;;;1406:91::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1559:786:2:-;1620:14;;;;;;;;;;;1612:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1719:14;1709:6;1679:15;:27;1695:10;1679:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1671:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1838:9;1828:6;1798:15;:27;1814:10;1798:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1790:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:6;1913:12;;;;;;;;;;;1907:29;;;1937:10;1907:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1898:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2007:12;;;;;;;;;;;2001:32;;;2034:10;2054:4;2061:6;2001:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2109:6;2078:15;:27;2094:10;2078:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2125:21;2149:44;;;;;;;;2155:10;2149:44;;;;;;2166:6;2149:44;;;;2174:15;2149:44;;;;2191:1;2149:44;;;;;2125:68;;2233:8;2203:14;:27;2228:1;2218:9;;:11;;;;:::i;:::-;2203:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:60;2265:10;2287:1;2277:9;;:11;;;;:::i;:::-;2290:8;2300:15;2256:60;;;;;;;;;:::i;:::-;;;;;;;;2337:1;2326:9;;:12;;;;;;;:::i;:::-;;;;;;;;1602:743;1559:786;:::o;2911:256::-;2960:12;;:::i;:::-;2984:21;3030:1;3020:9;;:11;;;;:::i;:::-;3008:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2984:48;;3047:6;3056:1;3047:10;;3042:93;3063:9;;3059:1;:13;3042:93;;;3107:14;:17;3122:1;3107:17;;;;;;;;;;;3093:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3102:1;3100;:3;;;;:::i;:::-;3093:11;;;;;;;;:::i;:::-;;;;;;;:31;;;;3074:3;;;;;:::i;:::-;;;;3042:93;;;;3151:6;3158:1;3151:9;;;;;;;;:::i;:::-;;;;;;;;3144:16;;;2911:256;:::o;491:34::-;;;;;;;;;;;;;:::o;1300:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1383:6:2::1;1368:12;;:21;;;;;;;;;;;;;;;;;;1300:96:::0;:::o;2403:502::-;2497:6;2466:15;:27;2482:10;2466:27;;;;;;;;;;;;;;;;:37;;2458:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2581:12;;;;;;;;;;;2575:28;;;2604:10;2616:6;2575:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2664:6;2633:15;:27;2649:10;2633:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2680:23;2706:44;;;;;;;;2712:10;2706:44;;;;;;2723:6;2706:44;;;;2731:15;2706:44;;;;2748:1;2706:44;;;;;2680:70;;2790:10;2760:14;:27;2785:1;2775:9;;:11;;;;:::i;:::-;2760:27;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:61;2823:10;2845:1;2835:9;;:11;;;;:::i;:::-;2848:10;2860:15;2815:61;;;;;;;;;:::i;:::-;;;;;;;;2897:1;2886:9;;:12;;;;;;;:::i;:::-;;;;;;;;2448:457;2403:502;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:108::-;2044:24;2062:5;2044:24;:::i;:::-;2039:3;2032:37;1967:108;;:::o;2081:118::-;2168:24;2186:5;2168:24;:::i;:::-;2163:3;2156:37;2081:118;;:::o;2205:109::-;2286:21;2301:5;2286:21;:::i;:::-;2281:3;2274:34;2205:109;;:::o;2320:366::-;2462:3;2483:67;2547:2;2542:3;2483:67;:::i;:::-;2476:74;;2559:93;2648:3;2559:93;:::i;:::-;2677:2;2672:3;2668:12;2661:19;;2320:366;;;:::o;2692:::-;2834:3;2855:67;2919:2;2914:3;2855:67;:::i;:::-;2848:74;;2931:93;3020:3;2931:93;:::i;:::-;3049:2;3044:3;3040:12;3033:19;;2692:366;;;:::o;3064:::-;3206:3;3227:67;3291:2;3286:3;3227:67;:::i;:::-;3220:74;;3303:93;3392:3;3303:93;:::i;:::-;3421:2;3416:3;3412:12;3405:19;;3064:366;;;:::o;3436:::-;3578:3;3599:67;3663:2;3658:3;3599:67;:::i;:::-;3592:74;;3675:93;3764:3;3675:93;:::i;:::-;3793:2;3788:3;3784:12;3777:19;;3436:366;;;:::o;3808:::-;3950:3;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4047:93;4136:3;4047:93;:::i;:::-;4165:2;4160:3;4156:12;4149:19;;3808:366;;;:::o;4180:::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4620:858::-;4761:4;4756:3;4752:14;4849:4;4842:5;4838:16;4832:23;4868:63;4925:4;4920:3;4916:14;4902:12;4868:63;:::i;:::-;4776:165;5025:4;5018:5;5014:16;5008:23;5044:63;5101:4;5096:3;5092:14;5078:12;5044:63;:::i;:::-;4951:166;5204:4;5197:5;5193:16;5187:23;5223:63;5280:4;5275:3;5271:14;5257:12;5223:63;:::i;:::-;5127:169;5383:4;5376:5;5372:16;5366:23;5402:59;5455:4;5450:3;5446:14;5432:12;5402:59;:::i;:::-;5306:165;4730:748;4620:858;;:::o;5484:108::-;5561:24;5579:5;5561:24;:::i;:::-;5556:3;5549:37;5484:108;;:::o;5598:118::-;5685:24;5703:5;5685:24;:::i;:::-;5680:3;5673:37;5598:118;;:::o;5722:102::-;5795:22;5811:5;5795:22;:::i;:::-;5790:3;5783:35;5722:102;;:::o;5830:112::-;5913:22;5929:5;5913:22;:::i;:::-;5908:3;5901:35;5830:112;;:::o;5948:222::-;6041:4;6079:2;6068:9;6064:18;6056:26;;6092:71;6160:1;6149:9;6145:17;6136:6;6092:71;:::i;:::-;5948:222;;;;:::o;6176:442::-;6325:4;6363:2;6352:9;6348:18;6340:26;;6376:71;6444:1;6433:9;6429:17;6420:6;6376:71;:::i;:::-;6457:72;6525:2;6514:9;6510:18;6501:6;6457:72;:::i;:::-;6539;6607:2;6596:9;6592:18;6583:6;6539:72;:::i;:::-;6176:442;;;;;;:::o;6624:332::-;6745:4;6783:2;6772:9;6768:18;6760:26;;6796:71;6864:1;6853:9;6849:17;6840:6;6796:71;:::i;:::-;6877:72;6945:2;6934:9;6930:18;6921:6;6877:72;:::i;:::-;6624:332;;;;;:::o;6962:642::-;7183:4;7221:3;7210:9;7206:19;7198:27;;7235:71;7303:1;7292:9;7288:17;7279:6;7235:71;:::i;:::-;7316:72;7384:2;7373:9;7369:18;7360:6;7316:72;:::i;:::-;7398:116;7510:2;7499:9;7495:18;7486:6;7398:116;:::i;:::-;7524:73;7592:3;7581:9;7577:19;7568:6;7524:73;:::i;:::-;6962:642;;;;;;;:::o;7610:545::-;7783:4;7821:3;7810:9;7806:19;7798:27;;7835:71;7903:1;7892:9;7888:17;7879:6;7835:71;:::i;:::-;7916:72;7984:2;7973:9;7969:18;7960:6;7916:72;:::i;:::-;7998;8066:2;8055:9;8051:18;8042:6;7998:72;:::i;:::-;8080:68;8144:2;8133:9;8129:18;8120:6;8080:68;:::i;:::-;7610:545;;;;;;;:::o;8161:210::-;8248:4;8286:2;8275:9;8271:18;8263:26;;8299:65;8361:1;8350:9;8346:17;8337:6;8299:65;:::i;:::-;8161:210;;;;:::o;8377:419::-;8543:4;8581:2;8570:9;8566:18;8558:26;;8630:9;8624:4;8620:20;8616:1;8605:9;8601:17;8594:47;8658:131;8784:4;8658:131;:::i;:::-;8650:139;;8377:419;;;:::o;8802:::-;8968:4;9006:2;8995:9;8991:18;8983:26;;9055:9;9049:4;9045:20;9041:1;9030:9;9026:17;9019:47;9083:131;9209:4;9083:131;:::i;:::-;9075:139;;8802:419;;;:::o;9227:::-;9393:4;9431:2;9420:9;9416:18;9408:26;;9480:9;9474:4;9470:20;9466:1;9455:9;9451:17;9444:47;9508:131;9634:4;9508:131;:::i;:::-;9500:139;;9227:419;;;:::o;9652:::-;9818:4;9856:2;9845:9;9841:18;9833:26;;9905:9;9899:4;9895:20;9891:1;9880:9;9876:17;9869:47;9933:131;10059:4;9933:131;:::i;:::-;9925:139;;9652:419;;;:::o;10077:::-;10243:4;10281:2;10270:9;10266:18;10258:26;;10330:9;10324:4;10320:20;10316:1;10305:9;10301:17;10294:47;10358:131;10484:4;10358:131;:::i;:::-;10350:139;;10077:419;;;:::o;10502:::-;10668:4;10706:2;10695:9;10691:18;10683:26;;10755:9;10749:4;10745:20;10741:1;10730:9;10726:17;10719:47;10783:131;10909:4;10783:131;:::i;:::-;10775:139;;10502:419;;;:::o;10927:311::-;11064:4;11102:3;11091:9;11087:19;11079:27;;11116:115;11228:1;11217:9;11213:17;11204:6;11116:115;:::i;:::-;10927:311;;;;:::o;11244:222::-;11337:4;11375:2;11364:9;11360:18;11352:26;;11388:71;11456:1;11445:9;11441:17;11432:6;11388:71;:::i;:::-;11244:222;;;;:::o;11553:169::-;11637:11;11671:6;11666:3;11659:19;11711:4;11706:3;11702:14;11687:29;;11553:169;;;;:::o;11728:305::-;11768:3;11787:20;11805:1;11787:20;:::i;:::-;11782:25;;11821:20;11839:1;11821:20;:::i;:::-;11816:25;;11975:1;11907:66;11903:74;11900:1;11897:81;11894:107;;;11981:18;;:::i;:::-;11894:107;12025:1;12022;12018:9;12011:16;;11728:305;;;;:::o;12039:191::-;12079:4;12099:20;12117:1;12099:20;:::i;:::-;12094:25;;12133:20;12151:1;12133:20;:::i;:::-;12128:25;;12172:1;12169;12166:8;12163:34;;;12177:18;;:::i;:::-;12163:34;12222:1;12219;12215:9;12207:17;;12039:191;;;;:::o;12236:96::-;12273:7;12302:24;12320:5;12302:24;:::i;:::-;12291:35;;12236:96;;;:::o;12338:90::-;12372:7;12415:5;12408:13;12401:21;12390:32;;12338:90;;;:::o;12434:126::-;12471:7;12511:42;12504:5;12500:54;12489:65;;12434:126;;;:::o;12566:77::-;12603:7;12632:5;12621:16;;12566:77;;;:::o;12649:86::-;12684:7;12724:4;12717:5;12713:16;12702:27;;12649:86;;;:::o;12741:233::-;12780:3;12803:24;12821:5;12803:24;:::i;:::-;12794:33;;12849:66;12842:5;12839:77;12836:103;;;12919:18;;:::i;:::-;12836:103;12966:1;12959:5;12955:13;12948:20;;12741:233;;;:::o;12980:180::-;13028:77;13025:1;13018:88;13125:4;13122:1;13115:15;13149:4;13146:1;13139:15;13166:180;13214:77;13211:1;13204:88;13311:4;13308:1;13301:15;13335:4;13332:1;13325:15;13352:180;13400:77;13397:1;13390:88;13497:4;13494:1;13487:15;13521:4;13518:1;13511:15;13661:117;13770:1;13767;13760:12;13784:177;13924:29;13920:1;13912:6;13908:14;13901:53;13784:177;:::o;13967:225::-;14107:34;14103:1;14095:6;14091:14;14084:58;14176:8;14171:2;14163:6;14159:15;14152:33;13967:225;:::o;14198:172::-;14338:24;14334:1;14326:6;14322:14;14315:48;14198:172;:::o;14376:170::-;14516:22;14512:1;14504:6;14500:14;14493:46;14376:170;:::o;14552:182::-;14692:34;14688:1;14680:6;14676:14;14669:58;14552:182;:::o;14740:170::-;14880:22;14876:1;14868:6;14864:14;14857:46;14740:170;:::o;14916:122::-;14989:24;15007:5;14989:24;:::i;:::-;14982:5;14979:35;14969:63;;15028:1;15025;15018:12;14969:63;14916:122;:::o;15044:116::-;15114:21;15129:5;15114:21;:::i;:::-;15107:5;15104:32;15094:60;;15150:1;15147;15140:12;15094:60;15044:116;:::o;15166:122::-;15239:24;15257:5;15239:24;:::i;:::-;15232:5;15229:35;15219:63;;15278:1;15275;15268:12;15219:63;15166:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1241000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "196",
								"GetStakingHistory()": "infinite",
								"SetStakingToken(address)": "27028",
								"StakeToken(uint256)": "infinite",
								"StakingBalances(address)": "2837",
								"StakingEnabled()": "2515",
								"StakingHistory(uint256)": "infinite",
								"ToggleStaking()": "28835",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "30441",
								"transferOwnership(address)": "30833"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5058,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0d3afec34e25cc9c8ea2de22360421a5967cf94c0cebffd606e4ef7d06e51b864736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "356BB8DB"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "376AA972"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5058,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1847,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1847,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1937,
											"end": 1947,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1958,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2034,
											"end": 2044,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2058,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2189,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2960,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3124,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3100,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3160,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3167,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2503,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2503,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2875,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3764,
											"end": 3767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4923,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5031,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 5117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5210,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5376,
											"end": 5381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5366,
											"end": 5389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5402,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5478,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5579,
											"end": 5584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5592,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5703,
											"end": 5708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5685,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5598,
											"end": 5716,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5811,
											"end": 5816,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5793,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5818,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5824,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5830,
											"end": 5942,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5830,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5913,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 5929,
											"end": 5934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5913,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5913,
											"end": 5935,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5913,
											"end": 5935,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 5913,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5908,
											"end": 5911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5901,
											"end": 5936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5942,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6056,
											"end": 6082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6056,
											"end": 6082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6160,
											"end": 6161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6092,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6092,
											"end": 6163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6092,
											"end": 6163,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6092,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6365,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6442,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6429,
											"end": 6446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6457,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6525,
											"end": 6527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6507,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6457,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6457,
											"end": 6529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6457,
											"end": 6529,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6457,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6607,
											"end": 6609,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6596,
											"end": 6605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6589,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6539,
											"end": 6611,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6539,
											"end": 6611,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6539,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6176,
											"end": 6618,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 6749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 6846,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 6796,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 6877,
											"end": 6949,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6877,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 6956,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7224,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7235,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7384,
											"end": 7386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7373,
											"end": 7382,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7316,
											"end": 7388,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7316,
											"end": 7388,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7316,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7510,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7492,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7398,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7398,
											"end": 7514,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7514,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7398,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7592,
											"end": 7595,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7574,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7524,
											"end": 7597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7524,
											"end": 7597,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7524,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6962,
											"end": 7604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7824,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7810,
											"end": 7819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7806,
											"end": 7825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7798,
											"end": 7825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7798,
											"end": 7825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7901,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7888,
											"end": 7905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7885,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 7835,
											"end": 7906,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7835,
											"end": 7906,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 7835,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7984,
											"end": 7986,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7982,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7969,
											"end": 7987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7916,
											"end": 7988,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7916,
											"end": 7988,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7916,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8066,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8048,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 7998,
											"end": 8070,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7998,
											"end": 8070,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7998,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8080,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8144,
											"end": 8146,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8133,
											"end": 8142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8080,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8080,
											"end": 8148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8080,
											"end": 8148,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8080,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 8155,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8248,
											"end": 8252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8271,
											"end": 8289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8263,
											"end": 8289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8299,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8299,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8299,
											"end": 8364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8299,
											"end": 8364,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8299,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8161,
											"end": 8371,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8581,
											"end": 8583,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8570,
											"end": 8579,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8566,
											"end": 8584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8624,
											"end": 8628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8616,
											"end": 8617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8601,
											"end": 8618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8594,
											"end": 8641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8658,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8784,
											"end": 8788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8658,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8658,
											"end": 8789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8658,
											"end": 8789,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8658,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8650,
											"end": 8789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8377,
											"end": 8796,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 8972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 9004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8991,
											"end": 9009,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9055,
											"end": 9064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9049,
											"end": 9053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9030,
											"end": 9039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9026,
											"end": 9043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9019,
											"end": 9066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9083,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9209,
											"end": 9213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9083,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9083,
											"end": 9214,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9083,
											"end": 9214,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9083,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9075,
											"end": 9214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9075,
											"end": 9214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 9221,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9420,
											"end": 9429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9416,
											"end": 9434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9480,
											"end": 9489,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9474,
											"end": 9478,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9470,
											"end": 9490,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9466,
											"end": 9467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9451,
											"end": 9468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9444,
											"end": 9491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9508,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9634,
											"end": 9638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9508,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9508,
											"end": 9639,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9508,
											"end": 9639,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9508,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9500,
											"end": 9639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9500,
											"end": 9639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9227,
											"end": 9646,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9854,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9841,
											"end": 9859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 9859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 9859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 9915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9876,
											"end": 9893,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 10059,
											"end": 10063,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9925,
											"end": 10064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9925,
											"end": 10064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10243,
											"end": 10247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10283,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10270,
											"end": 10279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10258,
											"end": 10284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10258,
											"end": 10284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10324,
											"end": 10328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10316,
											"end": 10317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10314,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10301,
											"end": 10318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10294,
											"end": 10341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10358,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10484,
											"end": 10488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10358,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 10358,
											"end": 10489,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10358,
											"end": 10489,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10358,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10496,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10749,
											"end": 10753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10726,
											"end": 10743,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10719,
											"end": 10766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10909,
											"end": 10913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10783,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10775,
											"end": 10914,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10502,
											"end": 10921,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11102,
											"end": 11105,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 11091,
											"end": 11100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11087,
											"end": 11106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 11228,
											"end": 11229,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11226,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11213,
											"end": 11230,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11204,
											"end": 11210,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11116,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 11116,
											"end": 11231,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11116,
											"end": 11231,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 11116,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 11238,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11377,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 11456,
											"end": 11457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11445,
											"end": 11454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11441,
											"end": 11458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11244,
											"end": 11466,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11637,
											"end": 11648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11671,
											"end": 11677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11666,
											"end": 11669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11659,
											"end": 11678,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11715,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11706,
											"end": 11709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11702,
											"end": 11716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11687,
											"end": 11716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11687,
											"end": 11716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11722,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 11787,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11782,
											"end": 11807,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11782,
											"end": 11807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11821,
											"end": 11841,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11841,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 11821,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11816,
											"end": 11841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11816,
											"end": 11841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11907,
											"end": 11973,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11903,
											"end": 11977,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11897,
											"end": 11978,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 12001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 11894,
											"end": 12001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 12001,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 11894,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12025,
											"end": 12026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12022,
											"end": 12023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12011,
											"end": 12027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11728,
											"end": 12033,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12079,
											"end": 12083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 12117,
											"end": 12118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 12099,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12094,
											"end": 12119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 12133,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12128,
											"end": 12153,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12128,
											"end": 12153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12173,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12169,
											"end": 12170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12166,
											"end": 12174,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12197,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12163,
											"end": 12197,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12177,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 12177,
											"end": 12195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 12177,
											"end": 12195,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12177,
											"end": 12195,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 12177,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12197,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12163,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12219,
											"end": 12220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12207,
											"end": 12224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12207,
											"end": 12224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12039,
											"end": 12230,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12273,
											"end": 12280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 12320,
											"end": 12325,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 12302,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12291,
											"end": 12326,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12291,
											"end": 12326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12236,
											"end": 12332,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12372,
											"end": 12379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12408,
											"end": 12421,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12401,
											"end": 12422,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12390,
											"end": 12422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12390,
											"end": 12422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12428,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12471,
											"end": 12478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12553,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12504,
											"end": 12509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12500,
											"end": 12554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12489,
											"end": 12554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12489,
											"end": 12554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12434,
											"end": 12560,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12603,
											"end": 12610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12621,
											"end": 12637,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12621,
											"end": 12637,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12643,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12684,
											"end": 12691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12724,
											"end": 12728,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 12717,
											"end": 12722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12713,
											"end": 12729,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12702,
											"end": 12729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12702,
											"end": 12729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12649,
											"end": 12735,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12780,
											"end": 12783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12803,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12821,
											"end": 12826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12803,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12803,
											"end": 12827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12803,
											"end": 12827,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12803,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12794,
											"end": 12827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12794,
											"end": 12827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12849,
											"end": 12915,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12842,
											"end": 12847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12916,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12836,
											"end": 12939,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12836,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 12836,
											"end": 12939,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12836,
											"end": 12939,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 12836,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12966,
											"end": 12967,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12959,
											"end": 12964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 12968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12948,
											"end": 12968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12948,
											"end": 12968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12741,
											"end": 12974,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12980,
											"end": 13160,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 12980,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13028,
											"end": 13105,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13025,
											"end": 13026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13018,
											"end": 13106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13125,
											"end": 13129,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 13122,
											"end": 13123,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13115,
											"end": 13130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13149,
											"end": 13153,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13146,
											"end": 13147,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13139,
											"end": 13154,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13166,
											"end": 13346,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 13166,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13214,
											"end": 13291,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13211,
											"end": 13212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13204,
											"end": 13292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 13308,
											"end": 13309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13301,
											"end": 13316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13335,
											"end": 13339,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13332,
											"end": 13333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13325,
											"end": 13340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13532,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 13352,
											"end": 13532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13400,
											"end": 13477,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13397,
											"end": 13398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13390,
											"end": 13478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13487,
											"end": 13502,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13521,
											"end": 13525,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13518,
											"end": 13519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13526,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13661,
											"end": 13778,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 13661,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13770,
											"end": 13771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13760,
											"end": 13772,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13784,
											"end": 13961,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 13784,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13924,
											"end": 13953,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 13920,
											"end": 13921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13912,
											"end": 13918,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13908,
											"end": 13922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13901,
											"end": 13954,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13784,
											"end": 13961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13784,
											"end": 13961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13967,
											"end": 14192,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 13967,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14107,
											"end": 14141,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14103,
											"end": 14104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14095,
											"end": 14101,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14091,
											"end": 14105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14084,
											"end": 14142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14176,
											"end": 14184,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14163,
											"end": 14169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14159,
											"end": 14174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14152,
											"end": 14185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13967,
											"end": 14192,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13967,
											"end": 14192,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14198,
											"end": 14370,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 14198,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14338,
											"end": 14362,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 14334,
											"end": 14335,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14326,
											"end": 14332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14322,
											"end": 14336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14315,
											"end": 14363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14198,
											"end": 14370,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14198,
											"end": 14370,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14376,
											"end": 14546,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 14376,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14516,
											"end": 14538,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 14512,
											"end": 14513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14504,
											"end": 14510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14500,
											"end": 14514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14493,
											"end": 14539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14376,
											"end": 14546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14376,
											"end": 14546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14552,
											"end": 14734,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 14552,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14688,
											"end": 14689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14680,
											"end": 14686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14676,
											"end": 14690,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14669,
											"end": 14727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14552,
											"end": 14734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14552,
											"end": 14734,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14740,
											"end": 14910,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 14740,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14902,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 14876,
											"end": 14877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14868,
											"end": 14874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14864,
											"end": 14878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14857,
											"end": 14903,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14740,
											"end": 14910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14740,
											"end": 14910,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14916,
											"end": 15038,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 14916,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14989,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 15007,
											"end": 15012,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14989,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 14989,
											"end": 15013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14989,
											"end": 15013,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 14989,
											"end": 15013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14982,
											"end": 14987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14979,
											"end": 15014,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 14969,
											"end": 15032,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15028,
											"end": 15029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15025,
											"end": 15026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15018,
											"end": 15030,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15032,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 14969,
											"end": 15032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14916,
											"end": 15038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14916,
											"end": 15038,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15044,
											"end": 15160,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 15044,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15114,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 15129,
											"end": 15134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15114,
											"end": 15135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 15114,
											"end": 15135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15114,
											"end": 15135,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 15114,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15107,
											"end": 15112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15104,
											"end": 15136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15094,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 15094,
											"end": 15154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15150,
											"end": 15151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15147,
											"end": 15148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15140,
											"end": 15152,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15094,
											"end": 15154,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 15094,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15044,
											"end": 15160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15044,
											"end": 15160,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15166,
											"end": 15288,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 15166,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 15257,
											"end": 15262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 15239,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15232,
											"end": 15237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15229,
											"end": 15264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15219,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 15219,
											"end": 15282,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15278,
											"end": 15279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15275,
											"end": 15276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15268,
											"end": 15280,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15219,
											"end": 15282,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 15219,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15166,
											"end": 15288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15166,
											"end": 15288,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakingHistory()": "b0adfa09",
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingBalances(address)": "376aa972",
							"StakingEnabled()": "da917aea",
							"StakingHistory(uint256)": "356bb8db",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GetStakingHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"internalType\":\"struct StakingContract.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"StakingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"StakingHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x231dba41ba4df6928c68ba4a6e1dd82969398c13255bd0294063966e45237358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce2d51e438d7ccc9c48e729a3f6bb3d4bdf08410c07bd119faab780415819ae0\",\"dweb:/ipfs/QmPzyHSMGJzsw7jDEry9Ce5oT9p95q4kwZNkKiAoz8KCdP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "EventTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "eventType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							464
						]
					},
					"id": 465,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 465,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 465,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 464,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 464,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 464,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "EventTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "eventType",
											"nameLocation": "781:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "775:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 174,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "775:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 464,
									"src": "532:265:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "356bb8db",
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "883:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 464,
									"src": "852:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "852:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "869:5:2"
											},
											"referencedDeclaration": 176,
											"src": "869:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "376aa972",
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "967:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 464,
									"src": "934:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "934:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "951:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1032:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:2"
									},
									"scope": 464,
									"src": "1005:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1067:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:2"
									},
									"scope": 464,
									"src": "1039:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1094:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1111:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1103:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1127:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1119:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1137:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1131:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1131:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1131:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1152:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1144:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:60:2"
									},
									"src": "1088:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1174:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1190:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1182:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1206:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1198:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1216:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1210:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1210:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1231:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1223:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:60:2"
									},
									"src": "1168:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1358:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1368:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1383:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1368:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1368:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1348:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1348:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1309:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1333:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1325:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:2"
									},
									"scope": 464,
									"src": "1300:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1448:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1458:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1475:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1476:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1458:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1458:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1438:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1438:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1448:0:2"
									},
									"scope": 464,
									"src": "1406:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1602:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1620:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1612:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1679:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1695:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1695:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1679:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1709:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1679:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1719:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1727:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1731:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1727:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1719:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1679:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1671:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1798:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1814:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1814:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1798:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1828:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1798:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1838:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1841:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1845:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1841:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1838:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1798:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1849:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1790:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1790:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1937:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1937:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1913:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1907:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1907:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1907:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1907:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1952:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1907:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1960:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1898:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2034:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2034:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2054:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$464",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$464",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2046:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2046:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2046:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2061:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2007:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2001:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2001:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "2001:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2001:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2078:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2094:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2094:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2078:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2109:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2078:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2078:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2138:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2125:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2125:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2155:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2155:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2166:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2174:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2174:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2191:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2149:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2203:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2218:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2228:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2218:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2203:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2233:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2203:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2203:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2265:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2265:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2277:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2277:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2290:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2300:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2300:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2256:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2251:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2326:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2337:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2326:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2326:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1568:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1587:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1579:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:2"
									},
									"scope": 464,
									"src": "1559:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2448:457:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2466:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2482:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2482:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2466:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2466:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2458:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2458:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2458:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2604:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2604:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2616:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2581:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2575:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "2575:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2575:48:2"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 373,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2633:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2649:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2649:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2633:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2664:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2633:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2633:37:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "newUnstake",
														"nameLocation": "2693:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2680:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 380,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2680:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2712:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2712:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2723:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 387,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2731:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2731:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2748:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 383,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2706:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2706:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:70:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2760:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 396,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2775:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2785:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2775:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2760:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "newUnstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2790:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2760:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2760:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2823:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2823:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2835:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2845:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2835:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "newUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2848:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2860:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2860:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "EmitStatement",
												"src": "2810:66:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2886:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2897:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2886:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2886:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2412:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2433:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2425:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:2"
									},
									"scope": 464,
									"src": "2403:502:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "2974:193:2",
										"statements": [
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "2999:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 462,
														"src": "2984:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 424,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 423,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "2984:5:2"
																},
																"referencedDeclaration": 176,
																"src": "2984:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 425,
															"nodeType": "ArrayTypeName",
															"src": "2984:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3020:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3030:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3020:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3008:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct StakingContract.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 428,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 427,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "3012:5:2"
																},
																"referencedDeclaration": 176,
																"src": "3012:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 429,
															"nodeType": "ArrayTypeName",
															"src": "3012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct StakingContract.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2984:48:2"
											},
											{
												"body": {
													"id": 456,
													"nodeType": "Block",
													"src": "3079:56:2",
													"statements": [
														{
															"expression": {
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 446,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "3093:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct StakingContract.Stake memory[] memory"
																		}
																	},
																	"id": 450,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 447,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "3100:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3102:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3100:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3093:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 451,
																		"name": "StakingHistory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "3107:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																			"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
																		}
																	},
																	"id": 453,
																	"indexExpression": {
																		"id": 452,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3122:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3107:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_storage",
																		"typeString": "struct StakingContract.Stake storage ref"
																	}
																},
																"src": "3093:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3093:31:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 440,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "3059:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 441,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3063:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3059:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"initializationExpression": {
													"assignments": [
														437
													],
													"declarations": [
														{
															"constant": false,
															"id": 437,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3052:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 457,
															"src": "3047:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 436,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3047:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 439,
													"initialValue": {
														"hexValue": "31",
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3056:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3047:10:2"
												},
												"loopExpression": {
													"expression": {
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3074:3:2",
														"subExpression": {
															"id": 443,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3074:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 445,
													"nodeType": "ExpressionStatement",
													"src": "3074:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3042:93:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 458,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "3151:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake memory[] memory"
														}
													},
													"id": 460,
													"indexExpression": {
														"hexValue": "30",
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3151:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 461,
												"nodeType": "Return",
												"src": "3144:16:2"
											}
										]
									},
									"functionSelector": "b0adfa09",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakingHistory",
									"nameLocation": "2920:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2937:2:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "2960:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 418,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "2960:5:2"
													},
													"referencedDeclaration": 176,
													"src": "2960:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2959:14:2"
									},
									"scope": 464,
									"src": "2911:256:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 465,
							"src": "386:4672:2",
							"usedErrors": []
						}
					],
					"src": "36:5022:2"
				},
				"id": 2
			}
		}
	}
}