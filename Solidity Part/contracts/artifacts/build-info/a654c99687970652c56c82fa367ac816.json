{
	"id": "a654c99687970652c56c82fa367ac816",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address stakingToken;\n\n    //address => amount staked\n    mapping(address=>uint256) stakedAmount;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStaking(address staker, uint256 amountStaked, uint256 blockTime);\n    event Unstaked(address staker, uint256 amountStaked, uint256 blockTime);\n\n    function SetStakingToken(address _token) public onlyOwner {\n        stakingToken = _token;\n    }\n    \n    function StakeToken(uint256 amount) public {\n        require (ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18, \"Invalid Balance\");\n        ERC20(stakingToken).transferFrom(msg.sender, address(this), amount*10**18);\n        \n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x205ff417ba4dcd438399f340b45f2806076320d62d301b295593d1ddb6eeabe6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://896118221bbaf973aa6fed3260d3891a848d3636928ad5a24485dd667232b537\",\"dweb:/ipfs/QmbP1PnC53JGpsaZ9mYNUfscBaxy9KVDsvvQiiNZHwkmJ2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStaking",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:3034  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:3034  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:3034  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:3034  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":903:1143  function StakeToken(uint256 amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":797:893  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":903:1143  function StakeToken(uint256 amount) public {... */\n    tag_24:\n        /* \"Solidity Part/contracts/staking.sol\":1017:1023  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Solidity Part/contracts/staking.sol\":1010:1016  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1010:1023  amount*10**18 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"Solidity Part/contracts/staking.sol\":971:983  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":965:994  ERC20(stakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":995:1005  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":965:1006  ERC20(stakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"Solidity Part/contracts/staking.sol\":965:1023  ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":956:1043  require (ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18, \"Invalid Balance\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Solidity Part/contracts/staking.sol\":1059:1071  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1053:1085  ERC20(stakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":1086:1096  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1106:1110  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":1120:1126  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Solidity Part/contracts/staking.sol\":1113:1119  amount */\n      dup6\n        /* \"Solidity Part/contracts/staking.sol\":1113:1126  amount*10**18 */\n      tag_57\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"Solidity Part/contracts/staking.sol\":1053:1127  ERC20(stakingToken).transferFrom(msg.sender, address(this), amount*10**18) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":903:1143  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":797:893  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_40\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"Solidity Part/contracts/staking.sol\":880:886  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":865:877  stakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":865:886  stakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":797:893  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_40\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_84:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_86\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_88:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_90\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_92:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_94\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_96:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_98\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_95\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_28:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":665:784   */\n    tag_100:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_103\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_84\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_64:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_106\n      tag_102\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1008:1127   */\n    tag_105:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_107\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_88\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_23:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_110\n      tag_102\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1351:1470   */\n    tag_109:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_111\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_92\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_53:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_114\n      tag_102\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1697:1816   */\n    tag_113:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_115\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_96\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_116:\n        /* \"#utility.yul\":2054:2078   */\n      tag_118\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2457   */\n    tag_120:\n        /* \"#utility.yul\":2233:2236   */\n      0x00\n        /* \"#utility.yul\":2254:2321   */\n      tag_122\n        /* \"#utility.yul\":2318:2320   */\n      0x26\n        /* \"#utility.yul\":2313:2316   */\n      dup4\n        /* \"#utility.yul\":2254:2321   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2247:2321   */\n      swap2\n      pop\n        /* \"#utility.yul\":2330:2423   */\n      tag_124\n        /* \"#utility.yul\":2419:2422   */\n      dup3\n        /* \"#utility.yul\":2330:2423   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2448:2450   */\n      0x40\n        /* \"#utility.yul\":2443:2446   */\n      dup3\n        /* \"#utility.yul\":2439:2451   */\n      add\n        /* \"#utility.yul\":2432:2451   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2463:2829   */\n    tag_126:\n        /* \"#utility.yul\":2605:2608   */\n      0x00\n        /* \"#utility.yul\":2626:2693   */\n      tag_128\n        /* \"#utility.yul\":2690:2692   */\n      0x0f\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2626:2693   */\n      tag_123\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2619:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2702:2795   */\n      tag_129\n        /* \"#utility.yul\":2791:2794   */\n      dup3\n        /* \"#utility.yul\":2702:2795   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2820:2822   */\n      0x20\n        /* \"#utility.yul\":2815:2818   */\n      dup3\n        /* \"#utility.yul\":2811:2823   */\n      add\n        /* \"#utility.yul\":2804:2823   */\n      swap1\n      pop\n        /* \"#utility.yul\":2463:2829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2835:3201   */\n    tag_131:\n        /* \"#utility.yul\":2977:2980   */\n      0x00\n        /* \"#utility.yul\":2998:3065   */\n      tag_133\n        /* \"#utility.yul\":3062:3064   */\n      0x20\n        /* \"#utility.yul\":3057:3060   */\n      dup4\n        /* \"#utility.yul\":2998:3065   */\n      tag_123\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2991:3065   */\n      swap2\n      pop\n        /* \"#utility.yul\":3074:3167   */\n      tag_134\n        /* \"#utility.yul\":3163:3166   */\n      dup3\n        /* \"#utility.yul\":3074:3167   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3192:3194   */\n      0x20\n        /* \"#utility.yul\":3187:3190   */\n      dup3\n        /* \"#utility.yul\":3183:3195   */\n      add\n        /* \"#utility.yul\":3176:3195   */\n      swap1\n      pop\n        /* \"#utility.yul\":2835:3201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3207:3325   */\n    tag_136:\n        /* \"#utility.yul\":3294:3318   */\n      tag_138\n        /* \"#utility.yul\":3312:3317   */\n      dup2\n        /* \"#utility.yul\":3294:3318   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3289:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3319   */\n      mstore\n        /* \"#utility.yul\":3207:3325   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3553   */\n    tag_19:\n        /* \"#utility.yul\":3424:3428   */\n      0x00\n        /* \"#utility.yul\":3462:3464   */\n      0x20\n        /* \"#utility.yul\":3451:3460   */\n      dup3\n        /* \"#utility.yul\":3447:3465   */\n      add\n        /* \"#utility.yul\":3439:3465   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3546   */\n      tag_141\n        /* \"#utility.yul\":3543:3544   */\n      0x00\n        /* \"#utility.yul\":3532:3541   */\n      dup4\n        /* \"#utility.yul\":3528:3545   */\n      add\n        /* \"#utility.yul\":3519:3525   */\n      dup5\n        /* \"#utility.yul\":3475:3546   */\n      tag_116\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3331:3553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3559:4001   */\n    tag_59:\n        /* \"#utility.yul\":3708:3712   */\n      0x00\n        /* \"#utility.yul\":3746:3748   */\n      0x60\n        /* \"#utility.yul\":3735:3744   */\n      dup3\n        /* \"#utility.yul\":3731:3749   */\n      add\n        /* \"#utility.yul\":3723:3749   */\n      swap1\n      pop\n        /* \"#utility.yul\":3759:3830   */\n      tag_143\n        /* \"#utility.yul\":3827:3828   */\n      0x00\n        /* \"#utility.yul\":3816:3825   */\n      dup4\n        /* \"#utility.yul\":3812:3829   */\n      add\n        /* \"#utility.yul\":3803:3809   */\n      dup7\n        /* \"#utility.yul\":3759:3830   */\n      tag_116\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3840:3912   */\n      tag_144\n        /* \"#utility.yul\":3908:3910   */\n      0x20\n        /* \"#utility.yul\":3897:3906   */\n      dup4\n        /* \"#utility.yul\":3893:3911   */\n      add\n        /* \"#utility.yul\":3884:3890   */\n      dup6\n        /* \"#utility.yul\":3840:3912   */\n      tag_116\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3922:3994   */\n      tag_145\n        /* \"#utility.yul\":3990:3992   */\n      0x40\n        /* \"#utility.yul\":3979:3988   */\n      dup4\n        /* \"#utility.yul\":3975:3993   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup5\n        /* \"#utility.yul\":3922:3994   */\n      tag_136\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3559:4001   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4426   */\n    tag_79:\n        /* \"#utility.yul\":4173:4177   */\n      0x00\n        /* \"#utility.yul\":4211:4213   */\n      0x20\n        /* \"#utility.yul\":4200:4209   */\n      dup3\n        /* \"#utility.yul\":4196:4214   */\n      add\n        /* \"#utility.yul\":4188:4214   */\n      swap1\n      pop\n        /* \"#utility.yul\":4260:4269   */\n      dup2\n        /* \"#utility.yul\":4254:4258   */\n      dup2\n        /* \"#utility.yul\":4250:4270   */\n      sub\n        /* \"#utility.yul\":4246:4247   */\n      0x00\n        /* \"#utility.yul\":4235:4244   */\n      dup4\n        /* \"#utility.yul\":4231:4248   */\n      add\n        /* \"#utility.yul\":4224:4271   */\n      mstore\n        /* \"#utility.yul\":4288:4419   */\n      tag_147\n        /* \"#utility.yul\":4414:4418   */\n      dup2\n        /* \"#utility.yul\":4288:4419   */\n      tag_120\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4280:4419   */\n      swap1\n      pop\n        /* \"#utility.yul\":4007:4426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4432:4851   */\n    tag_56:\n        /* \"#utility.yul\":4598:4602   */\n      0x00\n        /* \"#utility.yul\":4636:4638   */\n      0x20\n        /* \"#utility.yul\":4625:4634   */\n      dup3\n        /* \"#utility.yul\":4621:4639   */\n      add\n        /* \"#utility.yul\":4613:4639   */\n      swap1\n      pop\n        /* \"#utility.yul\":4685:4694   */\n      dup2\n        /* \"#utility.yul\":4679:4683   */\n      dup2\n        /* \"#utility.yul\":4675:4695   */\n      sub\n        /* \"#utility.yul\":4671:4672   */\n      0x00\n        /* \"#utility.yul\":4660:4669   */\n      dup4\n        /* \"#utility.yul\":4656:4673   */\n      add\n        /* \"#utility.yul\":4649:4696   */\n      mstore\n        /* \"#utility.yul\":4713:4844   */\n      tag_149\n        /* \"#utility.yul\":4839:4843   */\n      dup2\n        /* \"#utility.yul\":4713:4844   */\n      tag_126\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4705:4844   */\n      swap1\n      pop\n        /* \"#utility.yul\":4432:4851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4857:5276   */\n    tag_40:\n        /* \"#utility.yul\":5023:5027   */\n      0x00\n        /* \"#utility.yul\":5061:5063   */\n      0x20\n        /* \"#utility.yul\":5050:5059   */\n      dup3\n        /* \"#utility.yul\":5046:5064   */\n      add\n        /* \"#utility.yul\":5038:5064   */\n      swap1\n      pop\n        /* \"#utility.yul\":5110:5119   */\n      dup2\n        /* \"#utility.yul\":5104:5108   */\n      dup2\n        /* \"#utility.yul\":5100:5120   */\n      sub\n        /* \"#utility.yul\":5096:5097   */\n      0x00\n        /* \"#utility.yul\":5085:5094   */\n      dup4\n        /* \"#utility.yul\":5081:5098   */\n      add\n        /* \"#utility.yul\":5074:5121   */\n      mstore\n        /* \"#utility.yul\":5138:5269   */\n      tag_151\n        /* \"#utility.yul\":5264:5268   */\n      dup2\n        /* \"#utility.yul\":5138:5269   */\n      tag_131\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5130:5269   */\n      swap1\n      pop\n        /* \"#utility.yul\":4857:5276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5363:5532   */\n    tag_123:\n        /* \"#utility.yul\":5447:5458   */\n      0x00\n        /* \"#utility.yul\":5481:5487   */\n      dup3\n        /* \"#utility.yul\":5476:5479   */\n      dup3\n        /* \"#utility.yul\":5469:5488   */\n      mstore\n        /* \"#utility.yul\":5521:5525   */\n      0x20\n        /* \"#utility.yul\":5516:5519   */\n      dup3\n        /* \"#utility.yul\":5512:5526   */\n      add\n        /* \"#utility.yul\":5497:5526   */\n      swap1\n      pop\n        /* \"#utility.yul\":5363:5532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5538:5886   */\n    tag_47:\n        /* \"#utility.yul\":5578:5585   */\n      0x00\n        /* \"#utility.yul\":5601:5621   */\n      tag_156\n        /* \"#utility.yul\":5619:5620   */\n      dup3\n        /* \"#utility.yul\":5601:5621   */\n      tag_139\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5596:5621   */\n      swap2\n      pop\n        /* \"#utility.yul\":5635:5655   */\n      tag_157\n        /* \"#utility.yul\":5653:5654   */\n      dup4\n        /* \"#utility.yul\":5635:5655   */\n      tag_139\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5630:5655   */\n      swap3\n      pop\n        /* \"#utility.yul\":5823:5824   */\n      dup2\n        /* \"#utility.yul\":5755:5821   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5751:5825   */\n      div\n        /* \"#utility.yul\":5748:5749   */\n      dup4\n        /* \"#utility.yul\":5745:5826   */\n      gt\n        /* \"#utility.yul\":5740:5741   */\n      dup3\n        /* \"#utility.yul\":5733:5742   */\n      iszero\n        /* \"#utility.yul\":5726:5743   */\n      iszero\n        /* \"#utility.yul\":5722:5827   */\n      and\n        /* \"#utility.yul\":5719:5850   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5830:5848   */\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5719:5850   */\n    tag_158:\n        /* \"#utility.yul\":5878:5879   */\n      dup3\n        /* \"#utility.yul\":5875:5876   */\n      dup3\n        /* \"#utility.yul\":5871:5880   */\n      mul\n        /* \"#utility.yul\":5860:5880   */\n      swap1\n      pop\n        /* \"#utility.yul\":5538:5886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5892:5988   */\n    tag_119:\n        /* \"#utility.yul\":5929:5936   */\n      0x00\n        /* \"#utility.yul\":5958:5982   */\n      tag_162\n        /* \"#utility.yul\":5976:5981   */\n      dup3\n        /* \"#utility.yul\":5958:5982   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5947:5982   */\n      swap1\n      pop\n        /* \"#utility.yul\":5892:5988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6084   */\n    tag_164:\n        /* \"#utility.yul\":6028:6035   */\n      0x00\n        /* \"#utility.yul\":6071:6076   */\n      dup2\n        /* \"#utility.yul\":6064:6077   */\n      iszero\n        /* \"#utility.yul\":6057:6078   */\n      iszero\n        /* \"#utility.yul\":6046:6078   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6090:6216   */\n    tag_163:\n        /* \"#utility.yul\":6127:6134   */\n      0x00\n        /* \"#utility.yul\":6167:6209   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6160:6165   */\n      dup3\n        /* \"#utility.yul\":6156:6210   */\n      and\n        /* \"#utility.yul\":6145:6210   */\n      swap1\n      pop\n        /* \"#utility.yul\":6090:6216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6222:6299   */\n    tag_139:\n        /* \"#utility.yul\":6259:6266   */\n      0x00\n        /* \"#utility.yul\":6288:6293   */\n      dup2\n        /* \"#utility.yul\":6277:6293   */\n      swap1\n      pop\n        /* \"#utility.yul\":6222:6299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6305:6485   */\n    tag_160:\n        /* \"#utility.yul\":6353:6430   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6350:6351   */\n      0x00\n        /* \"#utility.yul\":6343:6431   */\n      mstore\n        /* \"#utility.yul\":6450:6454   */\n      0x11\n        /* \"#utility.yul\":6447:6448   */\n      0x04\n        /* \"#utility.yul\":6440:6455   */\n      mstore\n        /* \"#utility.yul\":6474:6478   */\n      0x24\n        /* \"#utility.yul\":6471:6472   */\n      0x00\n        /* \"#utility.yul\":6464:6479   */\n      revert\n        /* \"#utility.yul\":6614:6731   */\n    tag_102:\n        /* \"#utility.yul\":6723:6724   */\n      0x00\n        /* \"#utility.yul\":6720:6721   */\n      dup1\n        /* \"#utility.yul\":6713:6725   */\n      revert\n        /* \"#utility.yul\":6737:6962   */\n    tag_125:\n        /* \"#utility.yul\":6877:6911   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6865:6871   */\n      dup3\n        /* \"#utility.yul\":6861:6875   */\n      add\n        /* \"#utility.yul\":6854:6912   */\n      mstore\n        /* \"#utility.yul\":6946:6954   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6941:6943   */\n      0x20\n        /* \"#utility.yul\":6933:6939   */\n      dup3\n        /* \"#utility.yul\":6929:6944   */\n      add\n        /* \"#utility.yul\":6922:6955   */\n      mstore\n        /* \"#utility.yul\":6737:6962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6968:7133   */\n    tag_130:\n        /* \"#utility.yul\":7108:7125   */\n      0x496e76616c69642042616c616e63650000000000000000000000000000000000\n        /* \"#utility.yul\":7104:7105   */\n      0x00\n        /* \"#utility.yul\":7096:7102   */\n      dup3\n        /* \"#utility.yul\":7092:7106   */\n      add\n        /* \"#utility.yul\":7085:7126   */\n      mstore\n        /* \"#utility.yul\":6968:7133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7139:7321   */\n    tag_135:\n        /* \"#utility.yul\":7279:7313   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7275:7276   */\n      0x00\n        /* \"#utility.yul\":7267:7273   */\n      dup3\n        /* \"#utility.yul\":7263:7277   */\n      add\n        /* \"#utility.yul\":7256:7314   */\n      mstore\n        /* \"#utility.yul\":7139:7321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7449   */\n    tag_87:\n        /* \"#utility.yul\":7400:7424   */\n      tag_176\n        /* \"#utility.yul\":7418:7423   */\n      dup2\n        /* \"#utility.yul\":7400:7424   */\n      tag_119\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7393:7398   */\n      dup2\n        /* \"#utility.yul\":7390:7425   */\n      eq\n        /* \"#utility.yul\":7380:7443   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":7439:7440   */\n      0x00\n        /* \"#utility.yul\":7436:7437   */\n      dup1\n        /* \"#utility.yul\":7429:7441   */\n      revert\n        /* \"#utility.yul\":7380:7443   */\n    tag_177:\n        /* \"#utility.yul\":7327:7449   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7455:7571   */\n    tag_91:\n        /* \"#utility.yul\":7525:7546   */\n      tag_179\n        /* \"#utility.yul\":7540:7545   */\n      dup2\n        /* \"#utility.yul\":7525:7546   */\n      tag_164\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7518:7523   */\n      dup2\n        /* \"#utility.yul\":7515:7547   */\n      eq\n        /* \"#utility.yul\":7505:7565   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":7561:7562   */\n      0x00\n        /* \"#utility.yul\":7558:7559   */\n      dup1\n        /* \"#utility.yul\":7551:7563   */\n      revert\n        /* \"#utility.yul\":7505:7565   */\n    tag_180:\n        /* \"#utility.yul\":7455:7571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7699   */\n    tag_95:\n        /* \"#utility.yul\":7650:7674   */\n      tag_182\n        /* \"#utility.yul\":7668:7673   */\n      dup2\n        /* \"#utility.yul\":7650:7674   */\n      tag_139\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7643:7648   */\n      dup2\n        /* \"#utility.yul\":7640:7675   */\n      eq\n        /* \"#utility.yul\":7630:7693   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":7689:7690   */\n      0x00\n        /* \"#utility.yul\":7686:7687   */\n      dup1\n        /* \"#utility.yul\":7679:7691   */\n      revert\n        /* \"#utility.yul\":7630:7693   */\n    tag_183:\n        /* \"#utility.yul\":7577:7699   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220868b2dbf0d76dac840cc13e682ecea9f5e7fe718f349c57d59906db955f1099f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 50,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 58,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a558061010d6000396000f3fe60806040526004361061004e5760003560e01c8063715018a6146100575780638da5cb5b1461006e578063ad95b1c614610099578063db568922146100c2578063f2fde38b146100eb57610055565b3661005557005b005b34801561006357600080fd5b5061006c610114565b005b34801561007a57600080fd5b5061008361019c565b60405161009091906107a0565b60405180910390f35b3480156100a557600080fd5b506100c060048036038101906100bb91906106bf565b6101c5565b005b3480156100ce57600080fd5b506100e960048036038101906100e49190610665565b61038d565b005b3480156100f757600080fd5b50610112600480360381019061010d9190610665565b61044d565b005b61011c610545565b73ffffffffffffffffffffffffffffffffffffffff1661013a61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018790610832565b60405180910390fd5b61019a600061054d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000816101d99190610863565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161023491906107a0565b60206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906106ec565b10156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90610812565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a7640000856103199190610863565b6040518463ffffffff1660e01b8152600401610337939291906107bb565b602060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103899190610692565b5050565b610395610545565b73ffffffffffffffffffffffffffffffffffffffff166103b361019c565b73ffffffffffffffffffffffffffffffffffffffff1614610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610832565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610455610545565b73ffffffffffffffffffffffffffffffffffffffff1661047361019c565b73ffffffffffffffffffffffffffffffffffffffff16146104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610832565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610539576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610530906107f2565b60405180910390fd5b6105428161054d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610620816109da565b92915050565b600081519050610635816109f1565b92915050565b60008135905061064a81610a08565b92915050565b60008151905061065f81610a08565b92915050565b60006020828403121561067b5761067a610934565b5b600061068984828501610611565b91505092915050565b6000602082840312156106a8576106a7610934565b5b60006106b684828501610626565b91505092915050565b6000602082840312156106d5576106d4610934565b5b60006106e38482850161063b565b91505092915050565b60006020828403121561070257610701610934565b5b600061071084828501610650565b91505092915050565b610722816108bd565b82525050565b6000610735602683610852565b915061074082610939565b604082019050919050565b6000610758600f83610852565b915061076382610988565b602082019050919050565b600061077b602083610852565b9150610786826109b1565b602082019050919050565b61079a816108fb565b82525050565b60006020820190506107b56000830184610719565b92915050565b60006060820190506107d06000830186610719565b6107dd6020830185610719565b6107ea6040830184610791565b949350505050565b6000602082019050818103600083015261080b81610728565b9050919050565b6000602082019050818103600083015261082b8161074b565b9050919050565b6000602082019050818103600083015261084b8161076e565b9050919050565b600082825260208201905092915050565b600061086e826108fb565b9150610879836108fb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108b2576108b1610905565b5b828202905092915050565b60006108c8826108db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109e3816108bd565b81146109ee57600080fd5b50565b6109fa816108cf565b8114610a0557600080fd5b50565b610a11816108fb565b8114610a1c57600080fd5b5056fea2646970667358221220868b2dbf0d76dac840cc13e682ecea9f5e7fe718f349c57d59906db955f1099f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA55 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A PUSH1 0x0 PUSH2 0x54D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B3 PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x400 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x473 PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP2 PUSH2 0x54D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x620 DUP2 PUSH2 0x9DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x635 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64A DUP2 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x65F DUP2 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP5 DUP3 DUP6 ADD PUSH2 0x611 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A7 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B6 DUP5 DUP3 DUP6 ADD PUSH2 0x626 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6D4 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP5 DUP3 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP5 DUP3 DUP6 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x722 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH1 0x26 DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x740 DUP3 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 PUSH1 0xF DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x763 DUP3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B PUSH1 0x20 DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x786 DUP3 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x7DD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x7EA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x791 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80B DUP2 PUSH2 0x728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84B DUP2 PUSH2 0x76E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0x905 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP2 EQ PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0x8FB JUMP JUMPDEST DUP2 EQ PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP12 0x2D 0xBF 0xD PUSH23 0xDAC840CC13E682ECEA9F5E7FE718F349C57D59906DB955 CALL MULMOD SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:2648:2:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:2648:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:2648:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetStakingToken_201": {
									"entryPoint": 909,
									"id": 201,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_241": {
									"entryPoint": 453,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 1349,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1357,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 412,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 276,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1101,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7702:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:3",
														"type": ""
													}
												],
												"src": "1967:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2237:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2247:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2313:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2254:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2419:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2330:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2443:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2448:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2225:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2233:3:3",
														"type": ""
													}
												],
												"src": "2091:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2619:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2685:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2626:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2619:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2791:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																	"nodeType": "YulIdentifier",
																	"src": "2702:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2804:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2820:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2597:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2605:3:3",
														"type": ""
													}
												],
												"src": "2463:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2991:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3057:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3062:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2998:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3163:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3074:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3074:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3176:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3187:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3192:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2969:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2977:3:3",
														"type": ""
													}
												],
												"src": "2835:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3272:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3289:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3312:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3294:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3282:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3260:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3267:3:3",
														"type": ""
													}
												],
												"src": "3207:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3429:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3439:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3451:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3462:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3439:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3543:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3475:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3475:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3401:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3413:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3424:4:3",
														"type": ""
													}
												],
												"src": "3331:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3713:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3723:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3735:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3731:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3723:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3803:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3827:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3812:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3812:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3759:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3884:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3908:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3893:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3840:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3966:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3979:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3990:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3922:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3922:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3669:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3681:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3689:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3697:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3708:4:3",
														"type": ""
													}
												],
												"src": "3559:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4178:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4188:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4200:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4211:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4188:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4235:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4246:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4231:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4254:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4260:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4224:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4280:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4414:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4288:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4158:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4173:4:3",
														"type": ""
													}
												],
												"src": "4007:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4603:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4613:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4625:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4636:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4613:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4671:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4656:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4679:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4675:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4649:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4649:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4705:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4839:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4713:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4705:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4583:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4598:4:3",
														"type": ""
													}
												],
												"src": "4432:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5028:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5038:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5050:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5046:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5046:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5038:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5085:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5096:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5081:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5104:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5074:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5074:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5130:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5264:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5138:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5138:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5130:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5008:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5023:4:3",
														"type": ""
													}
												],
												"src": "4857:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5322:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5332:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5348:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5342:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5332:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5315:6:3",
														"type": ""
													}
												],
												"src": "5282:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5459:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5476:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5481:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5469:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5469:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5497:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5516:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5521:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5497:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5431:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5436:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5447:11:3",
														"type": ""
													}
												],
												"src": "5363:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5586:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5596:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5619:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5601:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5596:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5630:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5653:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5635:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5630:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5828:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5830:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5830:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5830:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5740:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5733:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5733:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5726:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5748:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5755:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5823:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5751:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5751:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5745:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5745:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5722:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:105:3"
															},
															"nodeType": "YulIf",
															"src": "5719:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5860:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5875:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5878:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5871:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5871:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5860:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5569:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5572:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5578:7:3",
														"type": ""
													}
												],
												"src": "5538:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5947:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5976:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5958:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5947:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5919:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5929:7:3",
														"type": ""
													}
												],
												"src": "5892:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6036:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6046:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6071:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6064:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6046:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6018:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6028:7:3",
														"type": ""
													}
												],
												"src": "5994:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6135:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6145:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6160:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6167:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6145:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6117:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6127:7:3",
														"type": ""
													}
												],
												"src": "6090:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6267:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6277:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6288:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6277:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6249:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6259:7:3",
														"type": ""
													}
												],
												"src": "6222:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6333:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6350:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6353:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6343:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6343:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6343:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6447:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6450:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6440:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6474:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6464:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6305:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6580:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6600:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6491:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6703:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6723:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6713:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6713:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6713:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6614:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6865:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6873:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6861:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6861:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6877:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6854:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6854:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6933:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6941:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6946:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6922:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6922:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6922:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6835:6:3",
														"type": ""
													}
												],
												"src": "6737:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7096:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7104:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7092:14:3"
																	},
																	{
																		"hexValue": "496e76616c69642042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7108:17:3",
																		"type": "",
																		"value": "Invalid Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7085:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7066:6:3",
														"type": ""
													}
												],
												"src": "6968:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7245:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7267:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7275:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7263:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7263:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7279:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7256:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7237:6:3",
														"type": ""
													}
												],
												"src": "7139:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7370:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7427:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7436:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7439:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7429:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7429:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7429:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7393:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7418:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7400:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7400:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7390:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7390:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7383:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7383:43:3"
															},
															"nodeType": "YulIf",
															"src": "7380:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7363:5:3",
														"type": ""
													}
												],
												"src": "7327:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7495:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7549:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7558:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7561:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7551:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7551:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7551:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7518:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7540:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7525:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7525:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7515:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:40:3"
															},
															"nodeType": "YulIf",
															"src": "7505:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7488:5:3",
														"type": ""
													}
												],
												"src": "7455:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7620:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7677:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7686:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7689:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7679:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7679:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7679:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7643:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7668:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7650:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7650:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7640:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7640:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7633:43:3"
															},
															"nodeType": "YulIf",
															"src": "7630:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7613:5:3",
														"type": ""
													}
												],
												"src": "7577:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Balance\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c8063715018a6146100575780638da5cb5b1461006e578063ad95b1c614610099578063db568922146100c2578063f2fde38b146100eb57610055565b3661005557005b005b34801561006357600080fd5b5061006c610114565b005b34801561007a57600080fd5b5061008361019c565b60405161009091906107a0565b60405180910390f35b3480156100a557600080fd5b506100c060048036038101906100bb91906106bf565b6101c5565b005b3480156100ce57600080fd5b506100e960048036038101906100e49190610665565b61038d565b005b3480156100f757600080fd5b50610112600480360381019061010d9190610665565b61044d565b005b61011c610545565b73ffffffffffffffffffffffffffffffffffffffff1661013a61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018790610832565b60405180910390fd5b61019a600061054d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000816101d99190610863565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161023491906107a0565b60206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906106ec565b10156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90610812565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330670de0b6b3a7640000856103199190610863565b6040518463ffffffff1660e01b8152600401610337939291906107bb565b602060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103899190610692565b5050565b610395610545565b73ffffffffffffffffffffffffffffffffffffffff166103b361019c565b73ffffffffffffffffffffffffffffffffffffffff1614610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040090610832565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610455610545565b73ffffffffffffffffffffffffffffffffffffffff1661047361019c565b73ffffffffffffffffffffffffffffffffffffffff16146104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610832565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610539576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610530906107f2565b60405180910390fd5b6105428161054d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610620816109da565b92915050565b600081519050610635816109f1565b92915050565b60008135905061064a81610a08565b92915050565b60008151905061065f81610a08565b92915050565b60006020828403121561067b5761067a610934565b5b600061068984828501610611565b91505092915050565b6000602082840312156106a8576106a7610934565b5b60006106b684828501610626565b91505092915050565b6000602082840312156106d5576106d4610934565b5b60006106e38482850161063b565b91505092915050565b60006020828403121561070257610701610934565b5b600061071084828501610650565b91505092915050565b610722816108bd565b82525050565b6000610735602683610852565b915061074082610939565b604082019050919050565b6000610758600f83610852565b915061076382610988565b602082019050919050565b600061077b602083610852565b9150610786826109b1565b602082019050919050565b61079a816108fb565b82525050565b60006020820190506107b56000830184610719565b92915050565b60006060820190506107d06000830186610719565b6107dd6020830185610719565b6107ea6040830184610791565b949350505050565b6000602082019050818103600083015261080b81610728565b9050919050565b6000602082019050818103600083015261082b8161074b565b9050919050565b6000602082019050818103600083015261084b8161076e565b9050919050565b600082825260208201905092915050565b600061086e826108fb565b9150610879836108fb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108b2576108b1610905565b5b828202905092915050565b60006108c8826108db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109e3816108bd565b81146109ee57600080fd5b50565b6109fa816108cf565b8114610a0557600080fd5b50565b610a11816108fb565b8114610a1c57600080fd5b5056fea2646970667358221220868b2dbf0d76dac840cc13e682ecea9f5e7fe718f349c57d59906db955f1099f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A PUSH1 0x0 PUSH2 0x54D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x337 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B3 PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x400 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x545 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x473 PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP2 PUSH2 0x54D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x620 DUP2 PUSH2 0x9DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x635 DUP2 PUSH2 0x9F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x64A DUP2 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x65F DUP2 PUSH2 0xA08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x689 DUP5 DUP3 DUP6 ADD PUSH2 0x611 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A7 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B6 DUP5 DUP3 DUP6 ADD PUSH2 0x626 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D5 JUMPI PUSH2 0x6D4 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E3 DUP5 DUP3 DUP6 ADD PUSH2 0x63B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH2 0x701 PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP5 DUP3 DUP6 ADD PUSH2 0x650 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x722 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH1 0x26 DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x740 DUP3 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x758 PUSH1 0xF DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x763 DUP3 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B PUSH1 0x20 DUP4 PUSH2 0x852 JUMP JUMPDEST SWAP2 POP PUSH2 0x786 DUP3 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x7DD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x7EA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x791 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x80B DUP2 PUSH2 0x728 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82B DUP2 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84B DUP2 PUSH2 0x76E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86E DUP3 PUSH2 0x8FB JUMP JUMPDEST SWAP2 POP PUSH2 0x879 DUP4 PUSH2 0x8FB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0x905 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP3 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9E3 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP2 EQ PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FA DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA11 DUP2 PUSH2 0x8FB JUMP JUMPDEST DUP2 EQ PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP12 0x2D 0xBF 0xD PUSH23 0xDAC840CC13E682ECEA9F5E7FE718F349C57D59906DB955 CALL MULMOD SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:2648:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;903:240:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;797:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;903:240:2:-;1017:6;1010;:13;;;;:::i;:::-;971:12;;;;;;;;;;;965:29;;;995:10;965:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;956:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1059:12;;;;;;;;;;;1053:32;;;1086:10;1106:4;1120:6;1113;:13;;;;:::i;:::-;1053:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;903:240;:::o;797:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;880:6:2::1;865:12;;:21;;;;;;;;;;;;;;;;;;797:96:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:366::-;2233:3;2254:67;2318:2;2313:3;2254:67;:::i;:::-;2247:74;;2330:93;2419:3;2330:93;:::i;:::-;2448:2;2443:3;2439:12;2432:19;;2091:366;;;:::o;2463:::-;2605:3;2626:67;2690:2;2685:3;2626:67;:::i;:::-;2619:74;;2702:93;2791:3;2702:93;:::i;:::-;2820:2;2815:3;2811:12;2804:19;;2463:366;;;:::o;2835:::-;2977:3;2998:67;3062:2;3057:3;2998:67;:::i;:::-;2991:74;;3074:93;3163:3;3074:93;:::i;:::-;3192:2;3187:3;3183:12;3176:19;;2835:366;;;:::o;3207:118::-;3294:24;3312:5;3294:24;:::i;:::-;3289:3;3282:37;3207:118;;:::o;3331:222::-;3424:4;3462:2;3451:9;3447:18;3439:26;;3475:71;3543:1;3532:9;3528:17;3519:6;3475:71;:::i;:::-;3331:222;;;;:::o;3559:442::-;3708:4;3746:2;3735:9;3731:18;3723:26;;3759:71;3827:1;3816:9;3812:17;3803:6;3759:71;:::i;:::-;3840:72;3908:2;3897:9;3893:18;3884:6;3840:72;:::i;:::-;3922;3990:2;3979:9;3975:18;3966:6;3922:72;:::i;:::-;3559:442;;;;;;:::o;4007:419::-;4173:4;4211:2;4200:9;4196:18;4188:26;;4260:9;4254:4;4250:20;4246:1;4235:9;4231:17;4224:47;4288:131;4414:4;4288:131;:::i;:::-;4280:139;;4007:419;;;:::o;4432:::-;4598:4;4636:2;4625:9;4621:18;4613:26;;4685:9;4679:4;4675:20;4671:1;4660:9;4656:17;4649:47;4713:131;4839:4;4713:131;:::i;:::-;4705:139;;4432:419;;;:::o;4857:::-;5023:4;5061:2;5050:9;5046:18;5038:26;;5110:9;5104:4;5100:20;5096:1;5085:9;5081:17;5074:47;5138:131;5264:4;5138:131;:::i;:::-;5130:139;;4857:419;;;:::o;5363:169::-;5447:11;5481:6;5476:3;5469:19;5521:4;5516:3;5512:14;5497:29;;5363:169;;;;:::o;5538:348::-;5578:7;5601:20;5619:1;5601:20;:::i;:::-;5596:25;;5635:20;5653:1;5635:20;:::i;:::-;5630:25;;5823:1;5755:66;5751:74;5748:1;5745:81;5740:1;5733:9;5726:17;5722:105;5719:131;;;5830:18;;:::i;:::-;5719:131;5878:1;5875;5871:9;5860:20;;5538:348;;;;:::o;5892:96::-;5929:7;5958:24;5976:5;5958:24;:::i;:::-;5947:35;;5892:96;;;:::o;5994:90::-;6028:7;6071:5;6064:13;6057:21;6046:32;;5994:90;;;:::o;6090:126::-;6127:7;6167:42;6160:5;6156:54;6145:65;;6090:126;;;:::o;6222:77::-;6259:7;6288:5;6277:16;;6222:77;;;:::o;6305:180::-;6353:77;6350:1;6343:88;6450:4;6447:1;6440:15;6474:4;6471:1;6464:15;6614:117;6723:1;6720;6713:12;6737:225;6877:34;6873:1;6865:6;6861:14;6854:58;6946:8;6941:2;6933:6;6929:15;6922:33;6737:225;:::o;6968:165::-;7108:17;7104:1;7096:6;7092:14;7085:41;6968:165;:::o;7139:182::-;7279:34;7275:1;7267:6;7263:14;7256:58;7139:182;:::o;7327:122::-;7400:24;7418:5;7400:24;:::i;:::-;7393:5;7390:35;7380:63;;7439:1;7436;7429:12;7380:63;7327:122;:::o;7455:116::-;7525:21;7540:5;7525:21;:::i;:::-;7518:5;7515:32;7505:60;;7561:1;7558;7551:12;7505:60;7455:116;:::o;7577:122::-;7650:24;7668:5;7650:24;:::i;:::-;7643:5;7640:35;7630:63;;7689:1;7686;7679:12;7630:63;7577:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "529000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "173",
								"SetStakingToken(address)": "27006",
								"StakeToken(uint256)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30352",
								"transferOwnership(address)": "30789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 3034,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220868b2dbf0d76dac840cc13e682ecea9f5e7fe718f349c57d59906db955f1099f64736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 3034,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 971,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 983,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 971,
											"end": 983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 994,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1023,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 965,
											"end": 1023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 956,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1086,
											"end": 1096,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 1143,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 865,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 865,
											"end": 886,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 886,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 886,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 865,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 893,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2419,
											"end": 2422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2791,
											"end": 2794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 2980,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3062,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3163,
											"end": 3166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3176,
											"end": 3195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3325,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3207,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3312,
											"end": 3317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3294,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3319,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3325,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3475,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3553,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3749,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3827,
											"end": 3828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3759,
											"end": 3830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3759,
											"end": 3830,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3759,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3840,
											"end": 3912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3840,
											"end": 3912,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3840,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3922,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3990,
											"end": 3992,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 3988,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3922,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3922,
											"end": 3994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3922,
											"end": 3994,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3922,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 4001,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4213,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4244,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4231,
											"end": 4248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4271,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4288,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4414,
											"end": 4418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4288,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4288,
											"end": 4419,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4419,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4288,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4007,
											"end": 4426,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4638,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4669,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4649,
											"end": 4696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4713,
											"end": 4844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4713,
											"end": 4844,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4713,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4851,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5063,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5050,
											"end": 5059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5100,
											"end": 5120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5081,
											"end": 5098,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5074,
											"end": 5121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5264,
											"end": 5268,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5138,
											"end": 5269,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5269,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5138,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4857,
											"end": 5276,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5447,
											"end": 5458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5479,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5512,
											"end": 5526,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5601,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5825,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5826,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5733,
											"end": 5742,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5827,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5719,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5860,
											"end": 5880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5538,
											"end": 5886,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5929,
											"end": 5936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5988,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6064,
											"end": 6077,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6078,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6209,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6160,
											"end": 6165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6305,
											"end": 6485,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6305,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6353,
											"end": 6430,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6343,
											"end": 6431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6440,
											"end": 6455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6478,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6471,
											"end": 6472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6614,
											"end": 6731,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6614,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6723,
											"end": 6724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6962,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6737,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6911,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6861,
											"end": 6875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 6912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6954,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6941,
											"end": 6943,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6955,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6968,
											"end": 7133,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6968,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7108,
											"end": 7125,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C69642042616C616E63650000000000000000000000000000000000"
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7102,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7126,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6968,
											"end": 7133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6968,
											"end": 7133,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7139,
											"end": 7321,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7139,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7313,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7275,
											"end": 7276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7256,
											"end": 7314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7139,
											"end": 7321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7139,
											"end": 7321,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7449,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7327,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7400,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7418,
											"end": 7423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7400,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7400,
											"end": 7424,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7400,
											"end": 7424,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7400,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7393,
											"end": 7398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7425,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7380,
											"end": 7443,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7429,
											"end": 7441,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7380,
											"end": 7443,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7380,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7449,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7455,
											"end": 7571,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7455,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7515,
											"end": 7547,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7505,
											"end": 7565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7563,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7565,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7505,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7571,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7699,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7577,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7668,
											"end": 7673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7650,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 7675,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7630,
											"end": 7693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7691,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7630,
											"end": 7693,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7630,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7577,
											"end": 7699,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7577,
											"end": 7699,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStaking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x205ff417ba4dcd438399f340b45f2806076320d62d301b295593d1ddb6eeabe6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://896118221bbaf973aa6fed3260d3891a848d3636928ad5a24485dd667232b537\",\"dweb:/ipfs/QmbP1PnC53JGpsaZ9mYNUfscBaxy9KVDsvvQiiNZHwkmJ2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 165,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							242
						]
					},
					"id": 243,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 243,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 243,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "522:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 242,
									"src": "496:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "504:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "496:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "513:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "584:2:2",
										"statements": []
									},
									"id": 169,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:2:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:2"
									},
									"scope": 242,
									"src": "557:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "619:2:2",
										"statements": []
									},
									"id": 173,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "599:2:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:2"
									},
									"scope": 242,
									"src": "591:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 181,
									"name": "NewStaking",
									"nameLocation": "646:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "657:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountStaked",
												"nameLocation": "681:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "673:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "703:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "695:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:57:2"
									},
									"src": "640:74:2"
								},
								{
									"anonymous": false,
									"id": 189,
									"name": "Unstaked",
									"nameLocation": "725:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "742:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "734:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountStaked",
												"nameLocation": "758:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "750:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "780:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "772:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:57:2"
									},
									"src": "719:72:2"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "855:38:2",
										"statements": [
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 196,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "865:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 197,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "880:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "865:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "865:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 193,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "845:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "845:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "806:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "830:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "822:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:16:2"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:2"
									},
									"scope": 242,
									"src": "797:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "946:197:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 211,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "995:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "995:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 208,
																				"name": "stakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "971:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 207,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "965:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "965:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "965:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "965:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "1010:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1017:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1021:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1017:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1010:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "965:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642042616c616e6365",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															},
															"value": "Invalid Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "956:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "956:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1086:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1086:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 231,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1106:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$242",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$242",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1098:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 229,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1098:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1098:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "1113:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1120:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1120:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "1113:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 224,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1059:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 223,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1053:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1053:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1053:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1053:74:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "912:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "931:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "923:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:2"
									},
									"scope": 242,
									"src": "903:240:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 243,
							"src": "386:2648:2",
							"usedErrors": []
						}
					],
					"src": "36:2998:2"
				},
				"id": 2
			}
		}
	}
}