{
	"id": "a971669e54733af61e70b03a0b11472f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 StakeTime;\n        //unstake block timestamp\n        uint256 UnstakeTime;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner{\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\"); //less than 1 million\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"Invalid Balance\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x179aa28b123b156150d7fb0376741253287c1764c50a3ff82abac1ece3a1c269\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f6e2a21640bb36e6a1cfa441766c1f8619cf89dbb531110eb4149059296d8a7\",\"dweb:/ipfs/QmTU1wpeYDhHGBbRJGFZdcLhKviTRFfkXsRSaWqDQgoqDs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:4829  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:4829  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:4829  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:4829  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:4829  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xda917aea\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x64cb560c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2339:2938  function UnstakeToken(uint256 amount) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Solidity Part/contracts/staking.sol\":1412:1426  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1411:1426  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1394:1408  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1394:1426  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1343:1433  function ToggleStaking() public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_56\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n    tag_31:\n        /* \"Solidity Part/contracts/staking.sol\":1556:1570  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1548:1597  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"Solidity Part/contracts/staking.sol\":1655:1669  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1645:1651  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1615:1630  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1615:1642  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1631:1641  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1615:1642  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1615:1651  StakingBalances[msg.sender] + amount */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"Solidity Part/contracts/staking.sol\":1615:1669  StakingBalances[msg.sender] + amount >= 1000000*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1607:1694  require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"Solidity Part/contracts/staking.sol\":1774:1783  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1764:1770  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1734:1749  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1734:1761  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1750:1760  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1734:1761  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1734:1770  StakingBalances[msg.sender] + amount */\n      tag_76\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_76:\n        /* \"Solidity Part/contracts/staking.sol\":1734:1783  StakingBalances[msg.sender] + amount <= 10*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1726:1808  require(StakingBalances[msg.sender] + amount <= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Solidity Part/contracts/staking.sol\":1888:1894  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1849:1861  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1843:1872  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1873:1883  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1843:1884  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"Solidity Part/contracts/staking.sol\":1843:1894  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1834:1926  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"Solidity Part/contracts/staking.sol\":1943:1955  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1937:1969  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":1970:1980  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1990:1994  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":1997:2003  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":1937:2004  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2045:2051  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2014:2029  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2014:2041  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2030:2040  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2014:2041  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2014:2051  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2061:2082  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2091:2101  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2102:2108  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2110:2125  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2127:2128  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2085:2129  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2061:2129  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2169:2177  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2139:2153  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2139:2166  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2164:2165  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2154:2163  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2154:2165  currentID+1 */\n      tag_97\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_97:\n        /* \"Solidity Part/contracts/staking.sol\":2139:2166  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2139:2177  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2192:2252  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6\n        /* \"Solidity Part/contracts/staking.sol\":2201:2211  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2223:2224  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2213:2222  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2213:2224  currentID+1 */\n      tag_98\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"Solidity Part/contracts/staking.sol\":2226:2234  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2236:2251  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2192:2252  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_99\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2273:2274  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2262:2271  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2262:2274  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1538:2281  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1495:2281  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_34:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_56\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"Solidity Part/contracts/staking.sol\":1320:1326  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1305:1317  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1305:1326  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2339:2938  function UnstakeToken(uint256 amount) public {... */\n    tag_45:\n        /* \"Solidity Part/contracts/staking.sol\":2433:2439  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2402:2417  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2402:2429  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2418:2428  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2402:2429  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2402:2439  StakingBalances[msg.sender] <= amount */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2394:2471  require(StakingBalances[msg.sender] <= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_88\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"Solidity Part/contracts/staking.sol\":2557:2563  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2518:2530  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2512:2541  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":2542:2552  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2512:2553  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_115:\n        /* \"Solidity Part/contracts/staking.sol\":2512:2563  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2503:2583  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"Invalid Balance\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"Solidity Part/contracts/staking.sol\":2600:2612  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2594:2626  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":2627:2637  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2647:2651  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":2654:2660  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":2594:2661  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_123:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2702:2708  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2671:2686  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2671:2698  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2687:2697  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2671:2698  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2671:2708  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2718:2739  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2742:2786  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2748:2758  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2742:2786  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2759:2765  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2742:2786  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2767:2782  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2742:2786  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2784:2785  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2742:2786  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2718:2786  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2826:2834  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2796:2810  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2796:2823  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2821:2822  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2811:2820  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2811:2822  currentID+1 */\n      tag_125\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_125:\n        /* \"Solidity Part/contracts/staking.sol\":2796:2823  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2796:2834  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2849:2909  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6\n        /* \"Solidity Part/contracts/staking.sol\":2858:2868  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2880:2881  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2870:2879  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2870:2881  currentID+1 */\n      tag_126\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_126:\n        /* \"Solidity Part/contracts/staking.sol\":2883:2891  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2893:2908  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2849:2909  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_127\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2930:2931  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2919:2928  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2919:2931  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2384:2938  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2339:2938  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_56\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_142:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_144\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_146:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_148\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_150:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_152\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_154:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_156\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_153\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_40:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":665:784   */\n    tag_158:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_161\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_142\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_95:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_164\n      tag_160\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1008:1127   */\n    tag_163:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_165\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_146\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_30:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_168\n      tag_160\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1351:1470   */\n    tag_167:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_169\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_150\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_85:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_172\n      tag_160\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1697:1816   */\n    tag_171:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_173\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_154\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2075   */\n    tag_174:\n        /* \"#utility.yul\":2044:2068   */\n      tag_176\n        /* \"#utility.yul\":2062:2067   */\n      dup2\n        /* \"#utility.yul\":2044:2068   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2039:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2069   */\n      mstore\n        /* \"#utility.yul\":1967:2075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2199   */\n    tag_178:\n        /* \"#utility.yul\":2168:2192   */\n      tag_180\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2168:2192   */\n      tag_177\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2193   */\n      mstore\n        /* \"#utility.yul\":2081:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2314   */\n    tag_181:\n        /* \"#utility.yul\":2286:2307   */\n      tag_183\n        /* \"#utility.yul\":2301:2306   */\n      dup2\n        /* \"#utility.yul\":2286:2307   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2281:2284   */\n      dup3\n        /* \"#utility.yul\":2274:2308   */\n      mstore\n        /* \"#utility.yul\":2205:2314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2686   */\n    tag_185:\n        /* \"#utility.yul\":2462:2465   */\n      0x00\n        /* \"#utility.yul\":2483:2550   */\n      tag_187\n        /* \"#utility.yul\":2547:2549   */\n      0x1b\n        /* \"#utility.yul\":2542:2545   */\n      dup4\n        /* \"#utility.yul\":2483:2550   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2476:2550   */\n      swap2\n      pop\n        /* \"#utility.yul\":2559:2652   */\n      tag_189\n        /* \"#utility.yul\":2648:2651   */\n      dup3\n        /* \"#utility.yul\":2559:2652   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2672:2675   */\n      dup3\n        /* \"#utility.yul\":2668:2680   */\n      add\n        /* \"#utility.yul\":2661:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2320:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:3058   */\n    tag_191:\n        /* \"#utility.yul\":2834:2837   */\n      0x00\n        /* \"#utility.yul\":2855:2922   */\n      tag_193\n        /* \"#utility.yul\":2919:2921   */\n      0x26\n        /* \"#utility.yul\":2914:2917   */\n      dup4\n        /* \"#utility.yul\":2855:2922   */\n      tag_188\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2848:2922   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3024   */\n      tag_194\n        /* \"#utility.yul\":3020:3023   */\n      dup3\n        /* \"#utility.yul\":2931:3024   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3052   */\n      add\n        /* \"#utility.yul\":3033:3052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:3058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3430   */\n    tag_196:\n        /* \"#utility.yul\":3206:3209   */\n      0x00\n        /* \"#utility.yul\":3227:3294   */\n      tag_198\n        /* \"#utility.yul\":3291:3293   */\n      0x0f\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3227:3294   */\n      tag_188\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3220:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3303:3396   */\n      tag_199\n        /* \"#utility.yul\":3392:3395   */\n      dup3\n        /* \"#utility.yul\":3303:3396   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3412:3424   */\n      add\n        /* \"#utility.yul\":3405:3424   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3802   */\n    tag_201:\n        /* \"#utility.yul\":3578:3581   */\n      0x00\n        /* \"#utility.yul\":3599:3666   */\n      tag_203\n        /* \"#utility.yul\":3663:3665   */\n      0x16\n        /* \"#utility.yul\":3658:3661   */\n      dup4\n        /* \"#utility.yul\":3599:3666   */\n      tag_188\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3592:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3768   */\n      tag_204\n        /* \"#utility.yul\":3764:3767   */\n      dup3\n        /* \"#utility.yul\":3675:3768   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3784:3796   */\n      add\n        /* \"#utility.yul\":3777:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4174   */\n    tag_206:\n        /* \"#utility.yul\":3950:3953   */\n      0x00\n        /* \"#utility.yul\":3971:4038   */\n      tag_208\n        /* \"#utility.yul\":4035:4037   */\n      0x14\n        /* \"#utility.yul\":4030:4033   */\n      dup4\n        /* \"#utility.yul\":3971:4038   */\n      tag_188\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3964:4038   */\n      swap2\n      pop\n        /* \"#utility.yul\":4047:4140   */\n      tag_209\n        /* \"#utility.yul\":4136:4139   */\n      dup3\n        /* \"#utility.yul\":4047:4140   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4156:4168   */\n      add\n        /* \"#utility.yul\":4149:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_211:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_213\n        /* \"#utility.yul\":4407:4409   */\n      0x20\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_188\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_214\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4552:4918   */\n    tag_216:\n        /* \"#utility.yul\":4694:4697   */\n      0x00\n        /* \"#utility.yul\":4715:4782   */\n      tag_218\n        /* \"#utility.yul\":4779:4781   */\n      0x14\n        /* \"#utility.yul\":4774:4777   */\n      dup4\n        /* \"#utility.yul\":4715:4782   */\n      tag_188\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4708:4782   */\n      swap2\n      pop\n        /* \"#utility.yul\":4791:4884   */\n      tag_219\n        /* \"#utility.yul\":4880:4883   */\n      dup3\n        /* \"#utility.yul\":4791:4884   */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":4909:4911   */\n      0x20\n        /* \"#utility.yul\":4904:4907   */\n      dup3\n        /* \"#utility.yul\":4900:4912   */\n      add\n        /* \"#utility.yul\":4893:4912   */\n      swap1\n      pop\n        /* \"#utility.yul\":4552:4918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4992:5856   */\n    tag_221:\n        /* \"#utility.yul\":5133:5137   */\n      0x80\n        /* \"#utility.yul\":5128:5131   */\n      dup3\n        /* \"#utility.yul\":5124:5138   */\n      add\n        /* \"#utility.yul\":5221:5225   */\n      0x00\n        /* \"#utility.yul\":5214:5219   */\n      dup3\n        /* \"#utility.yul\":5210:5226   */\n      add\n        /* \"#utility.yul\":5204:5227   */\n      mload\n        /* \"#utility.yul\":5240:5303   */\n      tag_223\n        /* \"#utility.yul\":5297:5301   */\n      0x00\n        /* \"#utility.yul\":5292:5295   */\n      dup6\n        /* \"#utility.yul\":5288:5302   */\n      add\n        /* \"#utility.yul\":5274:5286   */\n      dup3\n        /* \"#utility.yul\":5240:5303   */\n      tag_174\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5148:5313   */\n      pop\n        /* \"#utility.yul\":5397:5401   */\n      0x20\n        /* \"#utility.yul\":5390:5395   */\n      dup3\n        /* \"#utility.yul\":5386:5402   */\n      add\n        /* \"#utility.yul\":5380:5403   */\n      mload\n        /* \"#utility.yul\":5416:5479   */\n      tag_224\n        /* \"#utility.yul\":5473:5477   */\n      0x20\n        /* \"#utility.yul\":5468:5471   */\n      dup6\n        /* \"#utility.yul\":5464:5478   */\n      add\n        /* \"#utility.yul\":5450:5462   */\n      dup3\n        /* \"#utility.yul\":5416:5479   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5323:5489   */\n      pop\n        /* \"#utility.yul\":5576:5580   */\n      0x40\n        /* \"#utility.yul\":5569:5574   */\n      dup3\n        /* \"#utility.yul\":5565:5581   */\n      add\n        /* \"#utility.yul\":5559:5582   */\n      mload\n        /* \"#utility.yul\":5595:5658   */\n      tag_226\n        /* \"#utility.yul\":5652:5656   */\n      0x40\n        /* \"#utility.yul\":5647:5650   */\n      dup6\n        /* \"#utility.yul\":5643:5657   */\n      add\n        /* \"#utility.yul\":5629:5641   */\n      dup3\n        /* \"#utility.yul\":5595:5658   */\n      tag_225\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5499:5668   */\n      pop\n        /* \"#utility.yul\":5757:5761   */\n      0x60\n        /* \"#utility.yul\":5750:5755   */\n      dup3\n        /* \"#utility.yul\":5746:5762   */\n      add\n        /* \"#utility.yul\":5740:5763   */\n      mload\n        /* \"#utility.yul\":5776:5839   */\n      tag_227\n        /* \"#utility.yul\":5833:5837   */\n      0x60\n        /* \"#utility.yul\":5828:5831   */\n      dup6\n        /* \"#utility.yul\":5824:5838   */\n      add\n        /* \"#utility.yul\":5810:5822   */\n      dup3\n        /* \"#utility.yul\":5776:5839   */\n      tag_225\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5678:5849   */\n      pop\n        /* \"#utility.yul\":5102:5856   */\n      pop\n        /* \"#utility.yul\":4992:5856   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:5970   */\n    tag_225:\n        /* \"#utility.yul\":5939:5963   */\n      tag_229\n        /* \"#utility.yul\":5957:5962   */\n      dup2\n        /* \"#utility.yul\":5939:5963   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5934:5937   */\n      dup3\n        /* \"#utility.yul\":5927:5964   */\n      mstore\n        /* \"#utility.yul\":5862:5970   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5976:6094   */\n    tag_231:\n        /* \"#utility.yul\":6063:6087   */\n      tag_233\n        /* \"#utility.yul\":6081:6086   */\n      dup2\n        /* \"#utility.yul\":6063:6087   */\n      tag_230\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6058:6061   */\n      dup3\n        /* \"#utility.yul\":6051:6088   */\n      mstore\n        /* \"#utility.yul\":5976:6094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6322   */\n    tag_26:\n        /* \"#utility.yul\":6193:6197   */\n      0x00\n        /* \"#utility.yul\":6231:6233   */\n      0x20\n        /* \"#utility.yul\":6220:6229   */\n      dup3\n        /* \"#utility.yul\":6216:6234   */\n      add\n        /* \"#utility.yul\":6208:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":6244:6315   */\n      tag_235\n        /* \"#utility.yul\":6312:6313   */\n      0x00\n        /* \"#utility.yul\":6301:6310   */\n      dup4\n        /* \"#utility.yul\":6297:6314   */\n      add\n        /* \"#utility.yul\":6288:6294   */\n      dup5\n        /* \"#utility.yul\":6244:6315   */\n      tag_178\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6100:6322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6328:6770   */\n    tag_90:\n        /* \"#utility.yul\":6477:6481   */\n      0x00\n        /* \"#utility.yul\":6515:6517   */\n      0x60\n        /* \"#utility.yul\":6504:6513   */\n      dup3\n        /* \"#utility.yul\":6500:6518   */\n      add\n        /* \"#utility.yul\":6492:6518   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6599   */\n      tag_237\n        /* \"#utility.yul\":6596:6597   */\n      0x00\n        /* \"#utility.yul\":6585:6594   */\n      dup4\n        /* \"#utility.yul\":6581:6598   */\n      add\n        /* \"#utility.yul\":6572:6578   */\n      dup7\n        /* \"#utility.yul\":6528:6599   */\n      tag_178\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6609:6681   */\n      tag_238\n        /* \"#utility.yul\":6677:6679   */\n      0x20\n        /* \"#utility.yul\":6666:6675   */\n      dup4\n        /* \"#utility.yul\":6662:6680   */\n      add\n        /* \"#utility.yul\":6653:6659   */\n      dup6\n        /* \"#utility.yul\":6609:6681   */\n      tag_178\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6691:6763   */\n      tag_239\n        /* \"#utility.yul\":6759:6761   */\n      0x40\n        /* \"#utility.yul\":6748:6757   */\n      dup4\n        /* \"#utility.yul\":6744:6762   */\n      add\n        /* \"#utility.yul\":6735:6741   */\n      dup5\n        /* \"#utility.yul\":6691:6763   */\n      tag_231\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6328:6770   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6776:7418   */\n    tag_100:\n        /* \"#utility.yul\":6997:7001   */\n      0x00\n        /* \"#utility.yul\":7035:7038   */\n      0xe0\n        /* \"#utility.yul\":7024:7033   */\n      dup3\n        /* \"#utility.yul\":7020:7039   */\n      add\n        /* \"#utility.yul\":7012:7039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7049:7120   */\n      tag_241\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup8\n        /* \"#utility.yul\":7049:7120   */\n      tag_178\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7130:7202   */\n      tag_242\n        /* \"#utility.yul\":7198:7200   */\n      0x20\n        /* \"#utility.yul\":7187:7196   */\n      dup4\n        /* \"#utility.yul\":7183:7201   */\n      add\n        /* \"#utility.yul\":7174:7180   */\n      dup7\n        /* \"#utility.yul\":7130:7202   */\n      tag_231\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7212:7328   */\n      tag_243\n        /* \"#utility.yul\":7324:7326   */\n      0x40\n        /* \"#utility.yul\":7313:7322   */\n      dup4\n        /* \"#utility.yul\":7309:7327   */\n      add\n        /* \"#utility.yul\":7300:7306   */\n      dup6\n        /* \"#utility.yul\":7212:7328   */\n      tag_221\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7338:7411   */\n      tag_244\n        /* \"#utility.yul\":7406:7409   */\n      0xc0\n        /* \"#utility.yul\":7395:7404   */\n      dup4\n        /* \"#utility.yul\":7391:7410   */\n      add\n        /* \"#utility.yul\":7382:7388   */\n      dup5\n        /* \"#utility.yul\":7338:7411   */\n      tag_231\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6776:7418   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7634   */\n    tag_36:\n        /* \"#utility.yul\":7511:7515   */\n      0x00\n        /* \"#utility.yul\":7549:7551   */\n      0x20\n        /* \"#utility.yul\":7538:7547   */\n      dup3\n        /* \"#utility.yul\":7534:7552   */\n      add\n        /* \"#utility.yul\":7526:7552   */\n      swap1\n      pop\n        /* \"#utility.yul\":7562:7627   */\n      tag_246\n        /* \"#utility.yul\":7624:7625   */\n      0x00\n        /* \"#utility.yul\":7613:7622   */\n      dup4\n        /* \"#utility.yul\":7609:7626   */\n      add\n        /* \"#utility.yul\":7600:7606   */\n      dup5\n        /* \"#utility.yul\":7562:7627   */\n      tag_181\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7424:7634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7640:8059   */\n    tag_88:\n        /* \"#utility.yul\":7806:7810   */\n      0x00\n        /* \"#utility.yul\":7844:7846   */\n      0x20\n        /* \"#utility.yul\":7833:7842   */\n      dup3\n        /* \"#utility.yul\":7829:7847   */\n      add\n        /* \"#utility.yul\":7821:7847   */\n      swap1\n      pop\n        /* \"#utility.yul\":7893:7902   */\n      dup2\n        /* \"#utility.yul\":7887:7891   */\n      dup2\n        /* \"#utility.yul\":7883:7903   */\n      sub\n        /* \"#utility.yul\":7879:7880   */\n      0x00\n        /* \"#utility.yul\":7868:7877   */\n      dup4\n        /* \"#utility.yul\":7864:7881   */\n      add\n        /* \"#utility.yul\":7857:7904   */\n      mstore\n        /* \"#utility.yul\":7921:8052   */\n      tag_248\n        /* \"#utility.yul\":8047:8051   */\n      dup2\n        /* \"#utility.yul\":7921:8052   */\n      tag_185\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7913:8052   */\n      swap1\n      pop\n        /* \"#utility.yul\":7640:8059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8065:8484   */\n    tag_137:\n        /* \"#utility.yul\":8231:8235   */\n      0x00\n        /* \"#utility.yul\":8269:8271   */\n      0x20\n        /* \"#utility.yul\":8258:8267   */\n      dup3\n        /* \"#utility.yul\":8254:8272   */\n      add\n        /* \"#utility.yul\":8246:8272   */\n      swap1\n      pop\n        /* \"#utility.yul\":8318:8327   */\n      dup2\n        /* \"#utility.yul\":8312:8316   */\n      dup2\n        /* \"#utility.yul\":8308:8328   */\n      sub\n        /* \"#utility.yul\":8304:8305   */\n      0x00\n        /* \"#utility.yul\":8293:8302   */\n      dup4\n        /* \"#utility.yul\":8289:8306   */\n      add\n        /* \"#utility.yul\":8282:8329   */\n      mstore\n        /* \"#utility.yul\":8346:8477   */\n      tag_250\n        /* \"#utility.yul\":8472:8476   */\n      dup2\n        /* \"#utility.yul\":8346:8477   */\n      tag_191\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8338:8477   */\n      swap1\n      pop\n        /* \"#utility.yul\":8065:8484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8490:8909   */\n    tag_118:\n        /* \"#utility.yul\":8656:8660   */\n      0x00\n        /* \"#utility.yul\":8694:8696   */\n      0x20\n        /* \"#utility.yul\":8683:8692   */\n      dup3\n        /* \"#utility.yul\":8679:8697   */\n      add\n        /* \"#utility.yul\":8671:8697   */\n      swap1\n      pop\n        /* \"#utility.yul\":8743:8752   */\n      dup2\n        /* \"#utility.yul\":8737:8741   */\n      dup2\n        /* \"#utility.yul\":8733:8753   */\n      sub\n        /* \"#utility.yul\":8729:8730   */\n      0x00\n        /* \"#utility.yul\":8718:8727   */\n      dup4\n        /* \"#utility.yul\":8714:8731   */\n      add\n        /* \"#utility.yul\":8707:8754   */\n      mstore\n        /* \"#utility.yul\":8771:8902   */\n      tag_252\n        /* \"#utility.yul\":8897:8901   */\n      dup2\n        /* \"#utility.yul\":8771:8902   */\n      tag_196\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8763:8902   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8915:9334   */\n    tag_70:\n        /* \"#utility.yul\":9081:9085   */\n      0x00\n        /* \"#utility.yul\":9119:9121   */\n      0x20\n        /* \"#utility.yul\":9108:9117   */\n      dup3\n        /* \"#utility.yul\":9104:9122   */\n      add\n        /* \"#utility.yul\":9096:9122   */\n      swap1\n      pop\n        /* \"#utility.yul\":9168:9177   */\n      dup2\n        /* \"#utility.yul\":9162:9166   */\n      dup2\n        /* \"#utility.yul\":9158:9178   */\n      sub\n        /* \"#utility.yul\":9154:9155   */\n      0x00\n        /* \"#utility.yul\":9143:9152   */\n      dup4\n        /* \"#utility.yul\":9139:9156   */\n      add\n        /* \"#utility.yul\":9132:9179   */\n      mstore\n        /* \"#utility.yul\":9196:9327   */\n      tag_254\n        /* \"#utility.yul\":9322:9326   */\n      dup2\n        /* \"#utility.yul\":9196:9327   */\n      tag_201\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9188:9327   */\n      swap1\n      pop\n        /* \"#utility.yul\":8915:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9759   */\n    tag_75:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9593:9602   */\n      dup2\n        /* \"#utility.yul\":9587:9591   */\n      dup2\n        /* \"#utility.yul\":9583:9603   */\n      sub\n        /* \"#utility.yul\":9579:9580   */\n      0x00\n        /* \"#utility.yul\":9568:9577   */\n      dup4\n        /* \"#utility.yul\":9564:9581   */\n      add\n        /* \"#utility.yul\":9557:9604   */\n      mstore\n        /* \"#utility.yul\":9621:9752   */\n      tag_256\n        /* \"#utility.yul\":9747:9751   */\n      dup2\n        /* \"#utility.yul\":9621:9752   */\n      tag_206\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9613:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9765:10184   */\n    tag_56:\n        /* \"#utility.yul\":9931:9935   */\n      0x00\n        /* \"#utility.yul\":9969:9971   */\n      0x20\n        /* \"#utility.yul\":9958:9967   */\n      dup3\n        /* \"#utility.yul\":9954:9972   */\n      add\n        /* \"#utility.yul\":9946:9972   */\n      swap1\n      pop\n        /* \"#utility.yul\":10018:10027   */\n      dup2\n        /* \"#utility.yul\":10012:10016   */\n      dup2\n        /* \"#utility.yul\":10008:10028   */\n      sub\n        /* \"#utility.yul\":10004:10005   */\n      0x00\n        /* \"#utility.yul\":9993:10002   */\n      dup4\n        /* \"#utility.yul\":9989:10006   */\n      add\n        /* \"#utility.yul\":9982:10029   */\n      mstore\n        /* \"#utility.yul\":10046:10177   */\n      tag_258\n        /* \"#utility.yul\":10172:10176   */\n      dup2\n        /* \"#utility.yul\":10046:10177   */\n      tag_211\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":10038:10177   */\n      swap1\n      pop\n        /* \"#utility.yul\":9765:10184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10190:10609   */\n    tag_79:\n        /* \"#utility.yul\":10356:10360   */\n      0x00\n        /* \"#utility.yul\":10394:10396   */\n      0x20\n        /* \"#utility.yul\":10383:10392   */\n      dup3\n        /* \"#utility.yul\":10379:10397   */\n      add\n        /* \"#utility.yul\":10371:10397   */\n      swap1\n      pop\n        /* \"#utility.yul\":10443:10452   */\n      dup2\n        /* \"#utility.yul\":10437:10441   */\n      dup2\n        /* \"#utility.yul\":10433:10453   */\n      sub\n        /* \"#utility.yul\":10429:10430   */\n      0x00\n        /* \"#utility.yul\":10418:10427   */\n      dup4\n        /* \"#utility.yul\":10414:10431   */\n      add\n        /* \"#utility.yul\":10407:10454   */\n      mstore\n        /* \"#utility.yul\":10471:10602   */\n      tag_260\n        /* \"#utility.yul\":10597:10601   */\n      dup2\n        /* \"#utility.yul\":10471:10602   */\n      tag_216\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":10463:10602   */\n      swap1\n      pop\n        /* \"#utility.yul\":10190:10609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10696:10865   */\n    tag_188:\n        /* \"#utility.yul\":10780:10791   */\n      0x00\n        /* \"#utility.yul\":10814:10820   */\n      dup3\n        /* \"#utility.yul\":10809:10812   */\n      dup3\n        /* \"#utility.yul\":10802:10821   */\n      mstore\n        /* \"#utility.yul\":10854:10858   */\n      0x20\n        /* \"#utility.yul\":10849:10852   */\n      dup3\n        /* \"#utility.yul\":10845:10859   */\n      add\n        /* \"#utility.yul\":10830:10859   */\n      swap1\n      pop\n        /* \"#utility.yul\":10696:10865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10871:11176   */\n    tag_72:\n        /* \"#utility.yul\":10911:10914   */\n      0x00\n        /* \"#utility.yul\":10930:10950   */\n      tag_265\n        /* \"#utility.yul\":10948:10949   */\n      dup3\n        /* \"#utility.yul\":10930:10950   */\n      tag_230\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10925:10950   */\n      swap2\n      pop\n        /* \"#utility.yul\":10964:10984   */\n      tag_266\n        /* \"#utility.yul\":10982:10983   */\n      dup4\n        /* \"#utility.yul\":10964:10984   */\n      tag_230\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10959:10984   */\n      swap3\n      pop\n        /* \"#utility.yul\":11118:11119   */\n      dup3\n        /* \"#utility.yul\":11050:11116   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11046:11120   */\n      sub\n        /* \"#utility.yul\":11043:11044   */\n      dup3\n        /* \"#utility.yul\":11040:11121   */\n      gt\n        /* \"#utility.yul\":11037:11144   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":11124:11142   */\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":11037:11144   */\n    tag_267:\n        /* \"#utility.yul\":11168:11169   */\n      dup3\n        /* \"#utility.yul\":11165:11166   */\n      dup3\n        /* \"#utility.yul\":11161:11170   */\n      add\n        /* \"#utility.yul\":11154:11170   */\n      swap1\n      pop\n        /* \"#utility.yul\":10871:11176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11182:11278   */\n    tag_177:\n        /* \"#utility.yul\":11219:11226   */\n      0x00\n        /* \"#utility.yul\":11248:11272   */\n      tag_271\n        /* \"#utility.yul\":11266:11271   */\n      dup3\n        /* \"#utility.yul\":11248:11272   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11237:11272   */\n      swap1\n      pop\n        /* \"#utility.yul\":11182:11278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11284:11374   */\n    tag_184:\n        /* \"#utility.yul\":11318:11325   */\n      0x00\n        /* \"#utility.yul\":11361:11366   */\n      dup2\n        /* \"#utility.yul\":11354:11367   */\n      iszero\n        /* \"#utility.yul\":11347:11368   */\n      iszero\n        /* \"#utility.yul\":11336:11368   */\n      swap1\n      pop\n        /* \"#utility.yul\":11284:11374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11380:11506   */\n    tag_272:\n        /* \"#utility.yul\":11417:11424   */\n      0x00\n        /* \"#utility.yul\":11457:11499   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11450:11455   */\n      dup3\n        /* \"#utility.yul\":11446:11500   */\n      and\n        /* \"#utility.yul\":11435:11500   */\n      swap1\n      pop\n        /* \"#utility.yul\":11380:11506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11512:11589   */\n    tag_230:\n        /* \"#utility.yul\":11549:11556   */\n      0x00\n        /* \"#utility.yul\":11578:11583   */\n      dup2\n        /* \"#utility.yul\":11567:11583   */\n      swap1\n      pop\n        /* \"#utility.yul\":11512:11589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11595:11775   */\n    tag_269:\n        /* \"#utility.yul\":11643:11720   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11640:11641   */\n      0x00\n        /* \"#utility.yul\":11633:11721   */\n      mstore\n        /* \"#utility.yul\":11740:11744   */\n      0x11\n        /* \"#utility.yul\":11737:11738   */\n      0x04\n        /* \"#utility.yul\":11730:11745   */\n      mstore\n        /* \"#utility.yul\":11764:11768   */\n      0x24\n        /* \"#utility.yul\":11761:11762   */\n      0x00\n        /* \"#utility.yul\":11754:11769   */\n      revert\n        /* \"#utility.yul\":11904:12021   */\n    tag_160:\n        /* \"#utility.yul\":12013:12014   */\n      0x00\n        /* \"#utility.yul\":12010:12011   */\n      dup1\n        /* \"#utility.yul\":12003:12015   */\n      revert\n        /* \"#utility.yul\":12027:12204   */\n    tag_190:\n        /* \"#utility.yul\":12167:12196   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":12163:12164   */\n      0x00\n        /* \"#utility.yul\":12155:12161   */\n      dup3\n        /* \"#utility.yul\":12151:12165   */\n      add\n        /* \"#utility.yul\":12144:12197   */\n      mstore\n        /* \"#utility.yul\":12027:12204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12210:12435   */\n    tag_195:\n        /* \"#utility.yul\":12350:12384   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12346:12347   */\n      0x00\n        /* \"#utility.yul\":12338:12344   */\n      dup3\n        /* \"#utility.yul\":12334:12348   */\n      add\n        /* \"#utility.yul\":12327:12385   */\n      mstore\n        /* \"#utility.yul\":12419:12427   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12414:12416   */\n      0x20\n        /* \"#utility.yul\":12406:12412   */\n      dup3\n        /* \"#utility.yul\":12402:12417   */\n      add\n        /* \"#utility.yul\":12395:12428   */\n      mstore\n        /* \"#utility.yul\":12210:12435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12441:12606   */\n    tag_200:\n        /* \"#utility.yul\":12581:12598   */\n      0x496e76616c69642042616c616e63650000000000000000000000000000000000\n        /* \"#utility.yul\":12577:12578   */\n      0x00\n        /* \"#utility.yul\":12569:12575   */\n      dup3\n        /* \"#utility.yul\":12565:12579   */\n      add\n        /* \"#utility.yul\":12558:12599   */\n      mstore\n        /* \"#utility.yul\":12441:12606   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12612:12784   */\n    tag_205:\n        /* \"#utility.yul\":12752:12776   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":12748:12749   */\n      0x00\n        /* \"#utility.yul\":12740:12746   */\n      dup3\n        /* \"#utility.yul\":12736:12750   */\n      add\n        /* \"#utility.yul\":12729:12777   */\n      mstore\n        /* \"#utility.yul\":12612:12784   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12790:12960   */\n    tag_210:\n        /* \"#utility.yul\":12930:12952   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":12926:12927   */\n      0x00\n        /* \"#utility.yul\":12918:12924   */\n      dup3\n        /* \"#utility.yul\":12914:12928   */\n      add\n        /* \"#utility.yul\":12907:12953   */\n      mstore\n        /* \"#utility.yul\":12790:12960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12966:13148   */\n    tag_215:\n        /* \"#utility.yul\":13106:13140   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13102:13103   */\n      0x00\n        /* \"#utility.yul\":13094:13100   */\n      dup3\n        /* \"#utility.yul\":13090:13104   */\n      add\n        /* \"#utility.yul\":13083:13141   */\n      mstore\n        /* \"#utility.yul\":12966:13148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13154:13324   */\n    tag_220:\n        /* \"#utility.yul\":13294:13316   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":13290:13291   */\n      0x00\n        /* \"#utility.yul\":13282:13288   */\n      dup3\n        /* \"#utility.yul\":13278:13292   */\n      add\n        /* \"#utility.yul\":13271:13317   */\n      mstore\n        /* \"#utility.yul\":13154:13324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13452   */\n    tag_145:\n        /* \"#utility.yul\":13403:13427   */\n      tag_288\n        /* \"#utility.yul\":13421:13426   */\n      dup2\n        /* \"#utility.yul\":13403:13427   */\n      tag_177\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13396:13401   */\n      dup2\n        /* \"#utility.yul\":13393:13428   */\n      eq\n        /* \"#utility.yul\":13383:13446   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":13442:13443   */\n      0x00\n        /* \"#utility.yul\":13439:13440   */\n      dup1\n        /* \"#utility.yul\":13432:13444   */\n      revert\n        /* \"#utility.yul\":13383:13446   */\n    tag_289:\n        /* \"#utility.yul\":13330:13452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13458:13574   */\n    tag_149:\n        /* \"#utility.yul\":13528:13549   */\n      tag_291\n        /* \"#utility.yul\":13543:13548   */\n      dup2\n        /* \"#utility.yul\":13528:13549   */\n      tag_184\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13521:13526   */\n      dup2\n        /* \"#utility.yul\":13518:13550   */\n      eq\n        /* \"#utility.yul\":13508:13568   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13564:13565   */\n      0x00\n        /* \"#utility.yul\":13561:13562   */\n      dup1\n        /* \"#utility.yul\":13554:13566   */\n      revert\n        /* \"#utility.yul\":13508:13568   */\n    tag_292:\n        /* \"#utility.yul\":13458:13574   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13580:13702   */\n    tag_153:\n        /* \"#utility.yul\":13653:13677   */\n      tag_294\n        /* \"#utility.yul\":13671:13676   */\n      dup2\n        /* \"#utility.yul\":13653:13677   */\n      tag_230\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13646:13651   */\n      dup2\n        /* \"#utility.yul\":13643:13678   */\n      eq\n        /* \"#utility.yul\":13633:13696   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":13692:13693   */\n      0x00\n        /* \"#utility.yul\":13689:13690   */\n      dup1\n        /* \"#utility.yul\":13682:13694   */\n      revert\n        /* \"#utility.yul\":13633:13696   */\n    tag_295:\n        /* \"#utility.yul\":13580:13702   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206dfd79157c55b6f961d34cfb096b1e4586d24d54a9754a560289983cb4a177c964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6114b78061012d6000396000f3fe60806040526004361061007f5760003560e01c8063da917aea1161004e578063da917aea1461010a578063db56892214610135578063df6a8a151461015e578063f2fde38b1461018757610086565b806364cb560c14610088578063715018a61461009f5780638da5cb5b146100b6578063ad95b1c6146100e157610086565b3661008657005b005b34801561009457600080fd5b5061009d6101b0565b005b3480156100ab57600080fd5b506100b4610258565b005b3480156100c257600080fd5b506100cb6102e0565b6040516100d89190611082565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610e93565b610309565b005b34801561011657600080fd5b5061011f6107a8565b60405161012c9190611119565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610e39565b6107bb565b005b34801561016a57600080fd5b5061018560048036038101906101809190610e93565b61087b565b005b34801561019357600080fd5b506101ae60048036038101906101a99190610e39565b610c21565b005b6101b8610d19565b73ffffffffffffffffffffffffffffffffffffffff166101d66102e0565b73ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610223906111d4565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610260610d19565b73ffffffffffffffffffffffffffffffffffffffff1661027e6102e0565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906111d4565b60405180910390fd5b6102de6000610d21565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f90611194565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ae9190611225565b10156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e6906111b4565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104439190611225565b1115610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906111f4565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104e09190611082565b60206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610ec0565b1015610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611134565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105d09392919061109d565b602060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610e66565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106729190611225565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546106c99190611225565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba63360016002546107709190611225565b834260405161078294939291906110d4565b60405180910390a160016002600082825461079d9190611225565b925050819055505050565b600360009054906101000a900460ff1681565b6107c3610d19565b73ffffffffffffffffffffffffffffffffffffffff166107e16102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e906111d4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f490611134565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109599190611082565b60206040518083038186803b15801561097157600080fd5b505afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610ec0565b10156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190611174565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a499392919061109d565b602060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190610e66565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aeb9190611225565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020016000815250905080600460006001600254610b429190611225565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610be99190611225565b8342604051610bfb94939291906110d4565b60405180910390a1600160026000828254610c169190611225565b925050819055505050565b610c29610d19565b73ffffffffffffffffffffffffffffffffffffffff16610c476102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c94906111d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0490611154565b60405180910390fd5b610d1681610d21565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610df48161143c565b92915050565b600081519050610e0981611453565b92915050565b600081359050610e1e8161146a565b92915050565b600081519050610e338161146a565b92915050565b600060208284031215610e4f57610e4e6112f2565b5b6000610e5d84828501610de5565b91505092915050565b600060208284031215610e7c57610e7b6112f2565b5b6000610e8a84828501610dfa565b91505092915050565b600060208284031215610ea957610ea86112f2565b5b6000610eb784828501610e0f565b91505092915050565b600060208284031215610ed657610ed56112f2565b5b6000610ee484828501610e24565b91505092915050565b610ef68161127b565b82525050565b610f058161127b565b82525050565b610f148161128d565b82525050565b6000610f27601b83611214565b9150610f32826112f7565b602082019050919050565b6000610f4a602683611214565b9150610f5582611320565b604082019050919050565b6000610f6d600f83611214565b9150610f788261136f565b602082019050919050565b6000610f90601683611214565b9150610f9b82611398565b602082019050919050565b6000610fb3601483611214565b9150610fbe826113c1565b602082019050919050565b6000610fd6602083611214565b9150610fe1826113ea565b602082019050919050565b6000610ff9601483611214565b915061100482611413565b602082019050919050565b6080820160008201516110256000850182610eed565b5060208201516110386020850182611064565b50604082015161104b6040850182611064565b50606082015161105e6060850182611064565b50505050565b61106d816112b9565b82525050565b61107c816112b9565b82525050565b60006020820190506110976000830184610efc565b92915050565b60006060820190506110b26000830186610efc565b6110bf6020830185610efc565b6110cc6040830184611073565b949350505050565b600060e0820190506110e96000830187610efc565b6110f66020830186611073565b611103604083018561100f565b61111060c0830184611073565b95945050505050565b600060208201905061112e6000830184610f0b565b92915050565b6000602082019050818103600083015261114d81610f1a565b9050919050565b6000602082019050818103600083015261116d81610f3d565b9050919050565b6000602082019050818103600083015261118d81610f60565b9050919050565b600060208201905081810360008301526111ad81610f83565b9050919050565b600060208201905081810360008301526111cd81610fa6565b9050919050565b600060208201905081810360008301526111ed81610fc9565b9050919050565b6000602082019050818103600083015261120d81610fec565b9050919050565b600082825260208201905092915050565b6000611230826112b9565b915061123b836112b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112705761126f6112c3565b5b828201905092915050565b600061128682611299565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6114458161127b565b811461145057600080fd5b50565b61145c8161128d565b811461146757600080fd5b50565b611473816112b9565b811461147e57600080fd5b5056fea26469706673582212206dfd79157c55b6f961d34cfb096b1e4586d24d54a9754a560289983cb4a177c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14B7 DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA917AEA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x187 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xE1 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x260 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27E PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE PUSH1 0x0 PUSH2 0xD21 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E6 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST GT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x985 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST LT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xC29 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC47 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC94 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD04 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD16 DUP2 PUSH2 0xD21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF4 DUP2 PUSH2 0x143C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE09 DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1E DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE33 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5D DUP5 DUP3 DUP6 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB7 DUP5 DUP3 DUP6 ADD PUSH2 0xE0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE4 DUP5 DUP3 DUP6 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x1B DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF32 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4A PUSH1 0x26 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF55 DUP3 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6D PUSH1 0xF DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF78 DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 PUSH1 0x16 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9B DUP3 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 PUSH1 0x14 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD6 PUSH1 0x20 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 PUSH1 0x14 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0x1004 DUP3 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1025 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1038 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x104B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x105E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x106D DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1097 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x10E9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10F6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0x1103 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1110 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114D DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116D DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118D DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11AD DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11CD DUP2 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11ED DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1230 DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x123B DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x12C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1445 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP2 EQ PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xFD79157C55B6F961D34CFB096B1E GASLIMIT DUP7 0xD2 0x4D SLOAD 0xA9 PUSH22 0x4A560289983CB4A177C964736F6C6343000807003300 ",
							"sourceMap": "386:4443:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4443;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4443:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4443:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetStakingToken_227": {
									"entryPoint": 1979,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 777,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 1960,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 432,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_433": {
									"entryPoint": 2171,
									"id": 433,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3353,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3361,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 736,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 600,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3105,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 5057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13705:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2062:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2044:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2010:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2017:3:3",
														"type": ""
													}
												],
												"src": "1967:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2168:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2141:3:3",
														"type": ""
													}
												],
												"src": "2081:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2301:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2286:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2259:3:3",
														"type": ""
													}
												],
												"src": "2205:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "2559:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2672:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2462:3:3",
														"type": ""
													}
												],
												"src": "2320:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2834:3:3",
														"type": ""
													}
												],
												"src": "2692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3286:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3227:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3392:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																	"nodeType": "YulIdentifier",
																	"src": "3303:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:3",
														"type": ""
													}
												],
												"src": "3064:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3599:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3764:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "3675:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3570:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:3",
														"type": ""
													}
												],
												"src": "3436:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3971:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4136:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "4047:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:3",
														"type": ""
													}
												],
												"src": "3808:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4180:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4698:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4708:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4774:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4715:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4880:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "4791:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4791:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4893:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4904:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4909:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4900:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4686:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4694:3:3",
														"type": ""
													}
												],
												"src": "4552:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:754:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5112:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5133:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5124:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5116:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5148:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5184:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5214:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5221:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5210:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5210:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5204:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5188:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5274:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5292:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5297:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5288:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5288:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5240:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5240:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5240:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5323:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5360:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5390:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5397:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5386:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5386:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5380:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5364:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5450:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5468:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5473:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5464:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5464:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5416:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5416:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5499:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5539:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5569:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5576:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5565:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5565:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5559:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5559:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5543:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5629:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5647:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5652:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5643:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5643:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5595:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5595:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5678:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5720:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5750:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5757:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5746:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5746:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5740:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5740:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5724:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5810:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5828:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5833:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5824:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5824:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5776:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5776:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5089:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5096:3:3",
														"type": ""
													}
												],
												"src": "4992:864:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5917:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5934:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5957:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5939:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5905:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5912:3:3",
														"type": ""
													}
												],
												"src": "5862:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6041:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6058:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6081:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6063:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6029:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6036:3:3",
														"type": ""
													}
												],
												"src": "5976:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6198:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6208:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6220:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6216:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6208:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6288:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6301:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6312:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6297:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6244:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6244:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6170:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6182:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6193:4:3",
														"type": ""
													}
												],
												"src": "6100:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6482:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6492:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6504:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6515:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6492:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6572:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6596:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6528:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6528:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6528:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6653:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6666:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6677:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6662:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6662:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6609:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6609:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6609:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6735:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6748:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6759:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6744:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6744:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6691:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6691:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6438:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6450:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6458:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6466:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6477:4:3",
														"type": ""
													}
												],
												"src": "6328:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7002:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7012:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7024:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7035:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7012:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7049:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7049:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7198:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7183:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7130:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7300:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7313:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7324:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7309:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7309:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7212:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7212:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7382:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7406:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7391:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7338:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6950:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6962:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6970:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6978:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6986:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6997:4:3",
														"type": ""
													}
												],
												"src": "6776:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7516:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7526:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7538:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7549:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7600:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7613:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7624:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7562:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7562:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7488:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7511:4:3",
														"type": ""
													}
												],
												"src": "7424:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7811:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7821:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7833:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7844:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7829:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7829:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7821:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7868:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7864:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7887:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7893:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7883:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7883:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7913:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8047:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7921:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7913:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7791:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7806:4:3",
														"type": ""
													}
												],
												"src": "7640:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8236:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8246:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8258:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8269:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8254:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8254:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8246:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8293:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8304:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8312:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8318:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8308:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8308:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8282:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8282:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8338:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8472:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8346:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8338:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8216:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8231:4:3",
														"type": ""
													}
												],
												"src": "8065:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8661:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8671:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8683:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8694:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8679:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8679:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8671:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8718:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8729:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8737:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8743:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8733:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8763:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8897:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8771:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8763:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8641:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8656:4:3",
														"type": ""
													}
												],
												"src": "8490:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9086:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9096:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9108:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9119:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9096:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9154:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9139:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9158:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9132:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9188:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9322:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9196:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9196:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9066:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9081:4:3",
														"type": ""
													}
												],
												"src": "8915:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9511:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9521:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9587:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9613:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9747:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9621:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9491:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9506:4:3",
														"type": ""
													}
												],
												"src": "9340:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9936:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9946:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9958:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9969:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9946:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9993:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10004:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9989:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9989:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10012:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10018:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10008:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10008:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9982:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9982:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9982:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10038:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10172:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10046:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10046:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10038:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9916:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9931:4:3",
														"type": ""
													}
												],
												"src": "9765:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10361:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10371:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10383:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10379:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10379:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10371:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10418:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10429:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10414:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10414:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10437:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10443:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10433:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10433:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10407:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10407:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10463:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10597:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10471:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10463:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10341:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10356:4:3",
														"type": ""
													}
												],
												"src": "10190:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10655:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10665:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10681:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10675:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10675:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10665:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10648:6:3",
														"type": ""
													}
												],
												"src": "10615:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10792:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10809:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10814:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10802:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10802:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10802:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10830:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10849:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10854:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10845:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10845:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10830:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10764:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10769:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10780:11:3",
														"type": ""
													}
												],
												"src": "10696:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10915:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10925:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10948:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10930:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10930:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10925:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10959:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10982:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10964:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10959:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11122:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11124:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11124:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11124:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11043:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11050:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11118:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11040:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11040:81:3"
															},
															"nodeType": "YulIf",
															"src": "11037:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11154:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11165:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11168:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11161:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11161:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10902:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10905:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10911:3:3",
														"type": ""
													}
												],
												"src": "10871:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11227:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11237:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11266:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11248:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11248:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11237:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11209:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11219:7:3",
														"type": ""
													}
												],
												"src": "11182:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11326:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11336:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11361:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11354:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11354:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11347:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11347:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11336:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11308:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11318:7:3",
														"type": ""
													}
												],
												"src": "11284:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11425:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11435:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11450:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11446:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11435:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11407:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11417:7:3",
														"type": ""
													}
												],
												"src": "11380:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11557:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11567:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11578:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11567:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11539:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11549:7:3",
														"type": ""
													}
												],
												"src": "11512:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11623:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11640:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11643:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11633:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11633:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11633:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11740:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11730:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11730:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11764:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11754:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11595:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11870:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11887:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11890:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11880:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11880:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11880:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11781:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11993:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12010:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12013:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12003:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12003:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12003:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11904:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12133:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12155:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12163:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12151:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12167:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12144:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12125:6:3",
														"type": ""
													}
												],
												"src": "12027:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12316:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12338:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12346:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12334:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12334:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12350:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12406:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12414:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12402:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12402:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12419:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12395:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12308:6:3",
														"type": ""
													}
												],
												"src": "12210:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12547:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12569:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12565:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12565:14:3"
																	},
																	{
																		"hexValue": "496e76616c69642042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12581:17:3",
																		"type": "",
																		"value": "Invalid Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12558:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12558:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12558:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12539:6:3",
														"type": ""
													}
												],
												"src": "12441:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12718:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12740:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12748:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12736:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12752:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12729:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12710:6:3",
														"type": ""
													}
												],
												"src": "12612:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12896:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12918:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12926:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12914:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12930:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12907:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12907:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12907:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12888:6:3",
														"type": ""
													}
												],
												"src": "12790:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13072:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13094:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13102:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13090:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13090:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13106:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13083:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13083:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13064:6:3",
														"type": ""
													}
												],
												"src": "12966:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13260:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13282:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13290:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13278:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13278:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13294:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13271:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13271:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13271:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13252:6:3",
														"type": ""
													}
												],
												"src": "13154:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13373:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13430:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13439:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13442:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13432:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13432:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13432:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13396:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13421:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13403:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13403:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13393:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13393:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13386:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13386:43:3"
															},
															"nodeType": "YulIf",
															"src": "13383:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13366:5:3",
														"type": ""
													}
												],
												"src": "13330:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13498:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13552:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13561:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13564:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13554:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13554:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13554:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13521:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13543:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13528:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13528:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13518:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13518:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13511:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13511:40:3"
															},
															"nodeType": "YulIf",
															"src": "13508:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13491:5:3",
														"type": ""
													}
												],
												"src": "13458:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13623:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13680:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13689:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13692:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13682:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13682:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13682:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13646:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13671:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13653:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13653:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13643:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13643:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:43:3"
															},
															"nodeType": "YulIf",
															"src": "13633:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13616:5:3",
														"type": ""
													}
												],
												"src": "13580:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // StakeTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // UnstakeTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Balance\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007f5760003560e01c8063da917aea1161004e578063da917aea1461010a578063db56892214610135578063df6a8a151461015e578063f2fde38b1461018757610086565b806364cb560c14610088578063715018a61461009f5780638da5cb5b146100b6578063ad95b1c6146100e157610086565b3661008657005b005b34801561009457600080fd5b5061009d6101b0565b005b3480156100ab57600080fd5b506100b4610258565b005b3480156100c257600080fd5b506100cb6102e0565b6040516100d89190611082565b60405180910390f35b3480156100ed57600080fd5b5061010860048036038101906101039190610e93565b610309565b005b34801561011657600080fd5b5061011f6107a8565b60405161012c9190611119565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610e39565b6107bb565b005b34801561016a57600080fd5b5061018560048036038101906101809190610e93565b61087b565b005b34801561019357600080fd5b506101ae60048036038101906101a99190610e39565b610c21565b005b6101b8610d19565b73ffffffffffffffffffffffffffffffffffffffff166101d66102e0565b73ffffffffffffffffffffffffffffffffffffffff161461022c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610223906111d4565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b610260610d19565b73ffffffffffffffffffffffffffffffffffffffff1661027e6102e0565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb906111d4565b60405180910390fd5b6102de6000610d21565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034f90611194565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103ae9190611225565b10156103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e6906111b4565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104439190611225565b1115610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906111f4565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104e09190611082565b60206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105309190610ec0565b1015610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611134565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105d09392919061109d565b602060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610e66565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106729190611225565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546106c99190611225565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba63360016002546107709190611225565b834260405161078294939291906110d4565b60405180910390a160016002600082825461079d9190611225565b925050819055505050565b600360009054906101000a900460ff1681565b6107c3610d19565b73ffffffffffffffffffffffffffffffffffffffff166107e16102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e906111d4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f490611134565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109599190611082565b60206040518083038186803b15801561097157600080fd5b505afa158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610ec0565b10156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190611174565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a499392919061109d565b602060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190610e66565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aeb9190611225565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020016000815250905080600460006001600254610b429190611225565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6336001600254610be99190611225565b8342604051610bfb94939291906110d4565b60405180910390a1600160026000828254610c169190611225565b925050819055505050565b610c29610d19565b73ffffffffffffffffffffffffffffffffffffffff16610c476102e0565b73ffffffffffffffffffffffffffffffffffffffff1614610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c94906111d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0490611154565b60405180910390fd5b610d1681610d21565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610df48161143c565b92915050565b600081519050610e0981611453565b92915050565b600081359050610e1e8161146a565b92915050565b600081519050610e338161146a565b92915050565b600060208284031215610e4f57610e4e6112f2565b5b6000610e5d84828501610de5565b91505092915050565b600060208284031215610e7c57610e7b6112f2565b5b6000610e8a84828501610dfa565b91505092915050565b600060208284031215610ea957610ea86112f2565b5b6000610eb784828501610e0f565b91505092915050565b600060208284031215610ed657610ed56112f2565b5b6000610ee484828501610e24565b91505092915050565b610ef68161127b565b82525050565b610f058161127b565b82525050565b610f148161128d565b82525050565b6000610f27601b83611214565b9150610f32826112f7565b602082019050919050565b6000610f4a602683611214565b9150610f5582611320565b604082019050919050565b6000610f6d600f83611214565b9150610f788261136f565b602082019050919050565b6000610f90601683611214565b9150610f9b82611398565b602082019050919050565b6000610fb3601483611214565b9150610fbe826113c1565b602082019050919050565b6000610fd6602083611214565b9150610fe1826113ea565b602082019050919050565b6000610ff9601483611214565b915061100482611413565b602082019050919050565b6080820160008201516110256000850182610eed565b5060208201516110386020850182611064565b50604082015161104b6040850182611064565b50606082015161105e6060850182611064565b50505050565b61106d816112b9565b82525050565b61107c816112b9565b82525050565b60006020820190506110976000830184610efc565b92915050565b60006060820190506110b26000830186610efc565b6110bf6020830185610efc565b6110cc6040830184611073565b949350505050565b600060e0820190506110e96000830187610efc565b6110f66020830186611073565b611103604083018561100f565b61111060c0830184611073565b95945050505050565b600060208201905061112e6000830184610f0b565b92915050565b6000602082019050818103600083015261114d81610f1a565b9050919050565b6000602082019050818103600083015261116d81610f3d565b9050919050565b6000602082019050818103600083015261118d81610f60565b9050919050565b600060208201905081810360008301526111ad81610f83565b9050919050565b600060208201905081810360008301526111cd81610fa6565b9050919050565b600060208201905081810360008301526111ed81610fc9565b9050919050565b6000602082019050818103600083015261120d81610fec565b9050919050565b600082825260208201905092915050565b6000611230826112b9565b915061123b836112b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112705761126f6112c3565b5b828201905092915050565b600061128682611299565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6114458161127b565b811461145057600080fd5b50565b61145c8161128d565b811461146757600080fd5b50565b611473816112b9565b811461147e57600080fd5b5056fea26469706673582212206dfd79157c55b6f961d34cfb096b1e4586d24d54a9754a560289983cb4a177c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA917AEA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x187 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x64CB560C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xE1 JUMPI PUSH2 0x86 JUMP JUMPDEST CALLDATASIZE PUSH2 0x86 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x260 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27E PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE PUSH1 0x0 PUSH2 0xD21 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP1 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E6 SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST GT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x782 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x79D SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x985 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0xEC0 JUMP JUMPDEST LT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBFB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC16 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xC29 PUSH2 0xD19 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC47 PUSH2 0x2E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC94 SWAP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD04 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD16 DUP2 PUSH2 0xD21 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF4 DUP2 PUSH2 0x143C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE09 DUP2 PUSH2 0x1453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1E DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE33 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE5D DUP5 DUP3 DUP6 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH2 0xE7B PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE8A DUP5 DUP3 DUP6 ADD PUSH2 0xDFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEB7 DUP5 DUP3 DUP6 ADD PUSH2 0xE0F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x12F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE4 DUP5 DUP3 DUP6 ADD PUSH2 0xE24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEF6 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 PUSH1 0x1B DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF32 DUP3 PUSH2 0x12F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4A PUSH1 0x26 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF55 DUP3 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6D PUSH1 0xF DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF78 DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF90 PUSH1 0x16 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9B DUP3 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB3 PUSH1 0x14 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBE DUP3 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD6 PUSH1 0x20 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF9 PUSH1 0x14 DUP4 PUSH2 0x1214 JUMP JUMPDEST SWAP2 POP PUSH2 0x1004 DUP3 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1025 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1038 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x104B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x105E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1064 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x106D DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x107C DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1097 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x10E9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x10F6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1073 JUMP JUMPDEST PUSH2 0x1103 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x100F JUMP JUMPDEST PUSH2 0x1110 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1073 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x114D DUP2 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x116D DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x118D DUP2 PUSH2 0xF60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11AD DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11CD DUP2 PUSH2 0xFA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11ED DUP2 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1230 DUP3 PUSH2 0x12B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x123B DUP4 PUSH2 0x12B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x12C3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1286 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1445 DUP2 PUSH2 0x127B JUMP JUMPDEST DUP2 EQ PUSH2 0x1450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x145C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x1467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1473 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xFD79157C55B6F961D34CFB096B1E GASLIMIT DUP7 0xD2 0x4D SLOAD 0xA9 PUSH22 0x4A560289983CB4A177C964736F6C6343000807003300 ",
							"sourceMap": "386:4443:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:90;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2339:599;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1343:90:2;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1412:14:2::1;;;;;;;;;;;1411:15;1394:14;;:32;;;;;;;;;;;;;;;;;;1343:90::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1495:786:2:-;1556:14;;;;;;;;;;;1548:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1655:14;1645:6;1615:15;:27;1631:10;1615:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1607:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1774:9;1764:6;1734:15;:27;1750:10;1734:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1726:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1888:6;1849:12;;;;;;;;;;;1843:29;;;1873:10;1843:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1834:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1943:12;;;;;;;;;;;1937:32;;;1970:10;1990:4;1997:6;1937:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2045:6;2014:15;:27;2030:10;2014:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2061:21;2085:44;;;;;;;;2091:10;2085:44;;;;;;2102:6;2085:44;;;;2110:15;2085:44;;;;2127:1;2085:44;;;2061:68;;2169:8;2139:14;:27;2164:1;2154:9;;:11;;;;:::i;:::-;2139:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2192:60;2201:10;2223:1;2213:9;;:11;;;;:::i;:::-;2226:8;2236:15;2192:60;;;;;;;;;:::i;:::-;;;;;;;;2273:1;2262:9;;:12;;;;;;;:::i;:::-;;;;;;;;1538:743;1495:786;:::o;491:34::-;;;;;;;;;;;;;:::o;1237:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:6:2::1;1305:12;;:21;;;;;;;;;;;;;;;;;;1237:96:::0;:::o;2339:599::-;2433:6;2402:15;:27;2418:10;2402:27;;;;;;;;;;;;;;;;:37;;2394:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2557:6;2518:12;;;;;;;;;;;2512:29;;;2542:10;2512:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;2503:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2600:12;;;;;;;;;;;2594:32;;;2627:10;2647:4;2654:6;2594:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2702:6;2671:15;:27;2687:10;2671:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2718:21;2742:44;;;;;;;;2748:10;2742:44;;;;;;2759:6;2742:44;;;;2767:15;2742:44;;;;2784:1;2742:44;;;2718:68;;2826:8;2796:14;:27;2821:1;2811:9;;:11;;;;:::i;:::-;2796:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:60;2858:10;2880:1;2870:9;;:11;;;;:::i;:::-;2883:8;2893:15;2849:60;;;;;;;;;:::i;:::-;;;;;;;;2930:1;2919:9;;:12;;;;;;;:::i;:::-;;;;;;;;2384:554;2339:599;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:108::-;2044:24;2062:5;2044:24;:::i;:::-;2039:3;2032:37;1967:108;;:::o;2081:118::-;2168:24;2186:5;2168:24;:::i;:::-;2163:3;2156:37;2081:118;;:::o;2205:109::-;2286:21;2301:5;2286:21;:::i;:::-;2281:3;2274:34;2205:109;;:::o;2320:366::-;2462:3;2483:67;2547:2;2542:3;2483:67;:::i;:::-;2476:74;;2559:93;2648:3;2559:93;:::i;:::-;2677:2;2672:3;2668:12;2661:19;;2320:366;;;:::o;2692:::-;2834:3;2855:67;2919:2;2914:3;2855:67;:::i;:::-;2848:74;;2931:93;3020:3;2931:93;:::i;:::-;3049:2;3044:3;3040:12;3033:19;;2692:366;;;:::o;3064:::-;3206:3;3227:67;3291:2;3286:3;3227:67;:::i;:::-;3220:74;;3303:93;3392:3;3303:93;:::i;:::-;3421:2;3416:3;3412:12;3405:19;;3064:366;;;:::o;3436:::-;3578:3;3599:67;3663:2;3658:3;3599:67;:::i;:::-;3592:74;;3675:93;3764:3;3675:93;:::i;:::-;3793:2;3788:3;3784:12;3777:19;;3436:366;;;:::o;3808:::-;3950:3;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4047:93;4136:3;4047:93;:::i;:::-;4165:2;4160:3;4156:12;4149:19;;3808:366;;;:::o;4180:::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4552:::-;4694:3;4715:67;4779:2;4774:3;4715:67;:::i;:::-;4708:74;;4791:93;4880:3;4791:93;:::i;:::-;4909:2;4904:3;4900:12;4893:19;;4552:366;;;:::o;4992:864::-;5133:4;5128:3;5124:14;5221:4;5214:5;5210:16;5204:23;5240:63;5297:4;5292:3;5288:14;5274:12;5240:63;:::i;:::-;5148:165;5397:4;5390:5;5386:16;5380:23;5416:63;5473:4;5468:3;5464:14;5450:12;5416:63;:::i;:::-;5323:166;5576:4;5569:5;5565:16;5559:23;5595:63;5652:4;5647:3;5643:14;5629:12;5595:63;:::i;:::-;5499:169;5757:4;5750:5;5746:16;5740:23;5776:63;5833:4;5828:3;5824:14;5810:12;5776:63;:::i;:::-;5678:171;5102:754;4992:864;;:::o;5862:108::-;5939:24;5957:5;5939:24;:::i;:::-;5934:3;5927:37;5862:108;;:::o;5976:118::-;6063:24;6081:5;6063:24;:::i;:::-;6058:3;6051:37;5976:118;;:::o;6100:222::-;6193:4;6231:2;6220:9;6216:18;6208:26;;6244:71;6312:1;6301:9;6297:17;6288:6;6244:71;:::i;:::-;6100:222;;;;:::o;6328:442::-;6477:4;6515:2;6504:9;6500:18;6492:26;;6528:71;6596:1;6585:9;6581:17;6572:6;6528:71;:::i;:::-;6609:72;6677:2;6666:9;6662:18;6653:6;6609:72;:::i;:::-;6691;6759:2;6748:9;6744:18;6735:6;6691:72;:::i;:::-;6328:442;;;;;;:::o;6776:642::-;6997:4;7035:3;7024:9;7020:19;7012:27;;7049:71;7117:1;7106:9;7102:17;7093:6;7049:71;:::i;:::-;7130:72;7198:2;7187:9;7183:18;7174:6;7130:72;:::i;:::-;7212:116;7324:2;7313:9;7309:18;7300:6;7212:116;:::i;:::-;7338:73;7406:3;7395:9;7391:19;7382:6;7338:73;:::i;:::-;6776:642;;;;;;;:::o;7424:210::-;7511:4;7549:2;7538:9;7534:18;7526:26;;7562:65;7624:1;7613:9;7609:17;7600:6;7562:65;:::i;:::-;7424:210;;;;:::o;7640:419::-;7806:4;7844:2;7833:9;7829:18;7821:26;;7893:9;7887:4;7883:20;7879:1;7868:9;7864:17;7857:47;7921:131;8047:4;7921:131;:::i;:::-;7913:139;;7640:419;;;:::o;8065:::-;8231:4;8269:2;8258:9;8254:18;8246:26;;8318:9;8312:4;8308:20;8304:1;8293:9;8289:17;8282:47;8346:131;8472:4;8346:131;:::i;:::-;8338:139;;8065:419;;;:::o;8490:::-;8656:4;8694:2;8683:9;8679:18;8671:26;;8743:9;8737:4;8733:20;8729:1;8718:9;8714:17;8707:47;8771:131;8897:4;8771:131;:::i;:::-;8763:139;;8490:419;;;:::o;8915:::-;9081:4;9119:2;9108:9;9104:18;9096:26;;9168:9;9162:4;9158:20;9154:1;9143:9;9139:17;9132:47;9196:131;9322:4;9196:131;:::i;:::-;9188:139;;8915:419;;;:::o;9340:::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9593:9;9587:4;9583:20;9579:1;9568:9;9564:17;9557:47;9621:131;9747:4;9621:131;:::i;:::-;9613:139;;9340:419;;;:::o;9765:::-;9931:4;9969:2;9958:9;9954:18;9946:26;;10018:9;10012:4;10008:20;10004:1;9993:9;9989:17;9982:47;10046:131;10172:4;10046:131;:::i;:::-;10038:139;;9765:419;;;:::o;10190:::-;10356:4;10394:2;10383:9;10379:18;10371:26;;10443:9;10437:4;10433:20;10429:1;10418:9;10414:17;10407:47;10471:131;10597:4;10471:131;:::i;:::-;10463:139;;10190:419;;;:::o;10696:169::-;10780:11;10814:6;10809:3;10802:19;10854:4;10849:3;10845:14;10830:29;;10696:169;;;;:::o;10871:305::-;10911:3;10930:20;10948:1;10930:20;:::i;:::-;10925:25;;10964:20;10982:1;10964:20;:::i;:::-;10959:25;;11118:1;11050:66;11046:74;11043:1;11040:81;11037:107;;;11124:18;;:::i;:::-;11037:107;11168:1;11165;11161:9;11154:16;;10871:305;;;;:::o;11182:96::-;11219:7;11248:24;11266:5;11248:24;:::i;:::-;11237:35;;11182:96;;;:::o;11284:90::-;11318:7;11361:5;11354:13;11347:21;11336:32;;11284:90;;;:::o;11380:126::-;11417:7;11457:42;11450:5;11446:54;11435:65;;11380:126;;;:::o;11512:77::-;11549:7;11578:5;11567:16;;11512:77;;;:::o;11595:180::-;11643:77;11640:1;11633:88;11740:4;11737:1;11730:15;11764:4;11761:1;11754:15;11904:117;12013:1;12010;12003:12;12027:177;12167:29;12163:1;12155:6;12151:14;12144:53;12027:177;:::o;12210:225::-;12350:34;12346:1;12338:6;12334:14;12327:58;12419:8;12414:2;12406:6;12402:15;12395:33;12210:225;:::o;12441:165::-;12581:17;12577:1;12569:6;12565:14;12558:41;12441:165;:::o;12612:172::-;12752:24;12748:1;12740:6;12736:14;12729:48;12612:172;:::o;12790:170::-;12930:22;12926:1;12918:6;12914:14;12907:46;12790:170;:::o;12966:182::-;13106:34;13102:1;13094:6;13090:14;13083:58;12966:182;:::o;13154:170::-;13294:22;13290:1;13282:6;13278:14;13271:46;13154:170;:::o;13330:122::-;13403:24;13421:5;13403:24;:::i;:::-;13396:5;13393:35;13383:63;;13442:1;13439;13432:12;13383:63;13330:122;:::o;13458:116::-;13528:21;13543:5;13528:21;:::i;:::-;13521:5;13518:32;13508:60;;13564:1;13561;13554:12;13508:60;13458:116;:::o;13580:122::-;13653:24;13671:5;13653:24;:::i;:::-;13646:5;13643:35;13633:63;;13692:1;13689;13682:12;13633:63;13580:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1060600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"SetStakingToken(address)": "26984",
								"StakeToken(uint256)": "infinite",
								"StakingEnabled()": "2471",
								"ToggleStaking()": "28791",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30397",
								"transferOwnership(address)": "30789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4829,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206dfd79157c55b6f961d34cfb096b1e4586d24d54a9754a560289983cb4a177c964736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4829,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1394,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1433,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1556,
											"end": 1570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1548,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1630,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1642,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1615,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1607,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1760,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1761,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1734,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1783,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1726,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1873,
											"end": 1883,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1843,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1894,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1894,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1970,
											"end": 1980,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2125,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2166,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6"
										},
										{
											"begin": 2201,
											"end": 2211,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2213,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2226,
											"end": 2234,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2251,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2252,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 2281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2439,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2439,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2394,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2512,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2563,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2503,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2627,
											"end": 2637,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2686,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2697,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2758,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2782,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2718,
											"end": 2786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6"
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2883,
											"end": 2891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2909,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2938,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3764,
											"end": 3767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4030,
											"end": 4033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4779,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4774,
											"end": 4777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4715,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4880,
											"end": 4883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4791,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4791,
											"end": 4884,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4791,
											"end": 4884,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4791,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4911,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4992,
											"end": 5856,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4992,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5137,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5128,
											"end": 5131,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5297,
											"end": 5301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5295,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5302,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5274,
											"end": 5286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5240,
											"end": 5303,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5303,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5240,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5313,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5380,
											"end": 5403,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5473,
											"end": 5477,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5471,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5416,
											"end": 5479,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5479,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5416,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5576,
											"end": 5580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5569,
											"end": 5574,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5559,
											"end": 5582,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5650,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5641,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5595,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5757,
											"end": 5761,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5750,
											"end": 5755,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5746,
											"end": 5762,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5763,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5828,
											"end": 5831,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5776,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5776,
											"end": 5839,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5776,
											"end": 5839,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5776,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5856,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5862,
											"end": 5970,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5862,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5957,
											"end": 5962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 5939,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5927,
											"end": 5964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5970,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6063,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6081,
											"end": 6086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6063,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6063,
											"end": 6087,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6063,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6063,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6094,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6297,
											"end": 6314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6244,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6322,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6477,
											"end": 6481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6517,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 6609,
											"end": 6681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6609,
											"end": 6681,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6609,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6748,
											"end": 6757,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6744,
											"end": 6762,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6741,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6691,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6328,
											"end": 6770,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 7024,
											"end": 7033,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7049,
											"end": 7120,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7120,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 7049,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7198,
											"end": 7200,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7187,
											"end": 7196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7201,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7130,
											"end": 7202,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7130,
											"end": 7202,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 7130,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7324,
											"end": 7326,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7300,
											"end": 7306,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7212,
											"end": 7328,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7212,
											"end": 7328,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 7212,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 7338,
											"end": 7411,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7338,
											"end": 7411,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7338,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 7418,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7551,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7538,
											"end": 7547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7526,
											"end": 7552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7562,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7622,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7606,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7562,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7562,
											"end": 7627,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7562,
											"end": 7627,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7562,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7634,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7806,
											"end": 7810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7893,
											"end": 7902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7891,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7877,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7857,
											"end": 7904,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 8047,
											"end": 8051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7921,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7921,
											"end": 8052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8052,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 7921,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7913,
											"end": 8052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7913,
											"end": 8052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7640,
											"end": 8059,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8269,
											"end": 8271,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8246,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8246,
											"end": 8272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8318,
											"end": 8327,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8312,
											"end": 8316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8308,
											"end": 8328,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8282,
											"end": 8329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 8472,
											"end": 8476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8346,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 8346,
											"end": 8477,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8346,
											"end": 8477,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 8346,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8484,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8656,
											"end": 8660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8694,
											"end": 8696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8683,
											"end": 8692,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8679,
											"end": 8697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8671,
											"end": 8697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8671,
											"end": 8697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8743,
											"end": 8752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8737,
											"end": 8741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8753,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8729,
											"end": 8730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8714,
											"end": 8731,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 8897,
											"end": 8901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8771,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8771,
											"end": 8902,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8771,
											"end": 8902,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 8771,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8763,
											"end": 8902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8763,
											"end": 8902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8909,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9166,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9158,
											"end": 9178,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9593,
											"end": 9602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9564,
											"end": 9581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9557,
											"end": 9604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 9971,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9946,
											"end": 9972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10008,
											"end": 10028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9989,
											"end": 10006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 10029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10172,
											"end": 10176,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10046,
											"end": 10177,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10046,
											"end": 10177,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 10046,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10038,
											"end": 10177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10038,
											"end": 10177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9765,
											"end": 10184,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10356,
											"end": 10360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10383,
											"end": 10392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10379,
											"end": 10397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10433,
											"end": 10453,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10414,
											"end": 10431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10407,
											"end": 10454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10597,
											"end": 10601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10471,
											"end": 10602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10463,
											"end": 10602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10190,
											"end": 10609,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10802,
											"end": 10821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10849,
											"end": 10852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10845,
											"end": 10859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10830,
											"end": 10859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10830,
											"end": 10859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10865,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10911,
											"end": 10914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10948,
											"end": 10949,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10930,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10925,
											"end": 10950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10925,
											"end": 10950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10964,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10982,
											"end": 10983,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10964,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10964,
											"end": 10984,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 10984,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10964,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10959,
											"end": 10984,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10959,
											"end": 10984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11050,
											"end": 11116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11046,
											"end": 11120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11043,
											"end": 11044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11040,
											"end": 11121,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11144,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 11037,
											"end": 11144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11037,
											"end": 11144,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 11037,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11168,
											"end": 11169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 11166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11161,
											"end": 11170,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 11176,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11219,
											"end": 11226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 11266,
											"end": 11271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11248,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11248,
											"end": 11272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11272,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 11248,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11278,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11318,
											"end": 11325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11361,
											"end": 11366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11354,
											"end": 11367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11368,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11336,
											"end": 11368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11336,
											"end": 11368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11284,
											"end": 11374,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11417,
											"end": 11424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11457,
											"end": 11499,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11450,
											"end": 11455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11446,
											"end": 11500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11506,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11549,
											"end": 11556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11567,
											"end": 11583,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11567,
											"end": 11583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11512,
											"end": 11589,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11595,
											"end": 11775,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 11595,
											"end": 11775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11720,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11740,
											"end": 11744,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11737,
											"end": 11738,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11730,
											"end": 11745,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11768,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11761,
											"end": 11762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11904,
											"end": 12021,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 11904,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12013,
											"end": 12014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12010,
											"end": 12011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12003,
											"end": 12015,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12027,
											"end": 12204,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 12027,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12167,
											"end": 12196,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 12163,
											"end": 12164,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12151,
											"end": 12165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12144,
											"end": 12197,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12027,
											"end": 12204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12027,
											"end": 12204,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12210,
											"end": 12435,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 12210,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12350,
											"end": 12384,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12346,
											"end": 12347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12338,
											"end": 12344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12334,
											"end": 12348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12327,
											"end": 12385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12419,
											"end": 12427,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12414,
											"end": 12416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12406,
											"end": 12412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12402,
											"end": 12417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12395,
											"end": 12428,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12210,
											"end": 12435,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12441,
											"end": 12606,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 12441,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12598,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C69642042616C616E63650000000000000000000000000000000000"
										},
										{
											"begin": 12577,
											"end": 12578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12569,
											"end": 12575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12565,
											"end": 12579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12558,
											"end": 12599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12441,
											"end": 12606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12441,
											"end": 12606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12612,
											"end": 12784,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 12612,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12752,
											"end": 12776,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 12748,
											"end": 12749,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12746,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12736,
											"end": 12750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12729,
											"end": 12777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12612,
											"end": 12784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12612,
											"end": 12784,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12790,
											"end": 12960,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 12790,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12930,
											"end": 12952,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 12926,
											"end": 12927,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12918,
											"end": 12924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12914,
											"end": 12928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12907,
											"end": 12953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12790,
											"end": 12960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12790,
											"end": 12960,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12966,
											"end": 13148,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 12966,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13106,
											"end": 13140,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13102,
											"end": 13103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13094,
											"end": 13100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13090,
											"end": 13104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13083,
											"end": 13141,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12966,
											"end": 13148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12966,
											"end": 13148,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13154,
											"end": 13324,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 13154,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 13290,
											"end": 13291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13282,
											"end": 13288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13278,
											"end": 13292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13271,
											"end": 13317,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13154,
											"end": 13324,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13154,
											"end": 13324,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13330,
											"end": 13452,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 13330,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13421,
											"end": 13426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13403,
											"end": 13427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13396,
											"end": 13401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13393,
											"end": 13428,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13383,
											"end": 13446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13383,
											"end": 13446,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13442,
											"end": 13443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13439,
											"end": 13440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13432,
											"end": 13444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13383,
											"end": 13446,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13383,
											"end": 13446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13330,
											"end": 13452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13330,
											"end": 13452,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13458,
											"end": 13574,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 13458,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 13543,
											"end": 13548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13521,
											"end": 13526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13518,
											"end": 13550,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 13508,
											"end": 13568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13564,
											"end": 13565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13554,
											"end": 13566,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13508,
											"end": 13568,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 13508,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13458,
											"end": 13574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13458,
											"end": 13574,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13580,
											"end": 13702,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 13580,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13653,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 13671,
											"end": 13676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13653,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 13653,
											"end": 13677,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13653,
											"end": 13677,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 13653,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13646,
											"end": 13651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13643,
											"end": 13678,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13633,
											"end": 13696,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13692,
											"end": 13693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13682,
											"end": 13694,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13633,
											"end": 13696,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 13633,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13580,
											"end": 13702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13580,
											"end": 13702,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingEnabled()": "da917aea",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x179aa28b123b156150d7fb0376741253287c1764c50a3ff82abac1ece3a1c269\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f6e2a21640bb36e6a1cfa441766c1f8619cf89dbb531110eb4149059296d8a7\",\"dweb:/ipfs/QmTU1wpeYDhHGBbRJGFZdcLhKviTRFfkXsRSaWqDQgoqDs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "StakeTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "UnstakeTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							434
						]
					},
					"id": 435,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 435,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 435,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 434,
							"linearizedBaseContracts": [
								434,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 434,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 434,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 434,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "StakeTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "UnstakeTime",
											"nameLocation": "782:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "774:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "774:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 434,
									"src": "532:268:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "879:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 434,
									"src": "855:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "863:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "855:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "872:5:2"
											},
											"referencedDeclaration": 176,
											"src": "872:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "956:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 434,
									"src": "930:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "938:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "930:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "947:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1021:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:2"
									},
									"scope": 434,
									"src": "994:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1056:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:2"
									},
									"scope": 434,
									"src": "1028:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1083:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1100:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1092:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1116:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1108:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1126:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1120:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1120:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1120:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1141:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1133:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:60:2"
									},
									"src": "1077:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1163:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1179:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1171:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1195:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1187:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1205:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1199:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1199:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1220:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1212:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:60:2"
									},
									"src": "1157:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1295:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1305:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1320:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1305:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1305:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1285:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1246:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1270:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1262:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:0:2"
									},
									"scope": 434,
									"src": "1237:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1384:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1394:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1411:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1412:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1394:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1394:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1375:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1375:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1352:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:0:2"
									},
									"scope": 434,
									"src": "1343:90:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1538:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1556:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1572:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1548:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1548:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1615:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1631:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1631:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1615:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1645:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1615:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1663:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1667:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1663:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1655:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1615:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1671:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1607:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1607:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1607:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1734:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1750:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1750:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1734:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1764:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1734:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1774:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1777:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1781:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1777:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1774:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1734:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1785:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1726:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1726:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1873:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1873:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1849:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1843:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1843:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1843:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1843:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1888:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1843:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1834:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1834:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1970:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1970:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1990:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$434",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$434",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1982:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1982:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1982:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1997:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1943:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1937:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1937:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1937:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "1937:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2014:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2030:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2030:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2014:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2045:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2014:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2014:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2074:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2061:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2061:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2061:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2091:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2091:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2102:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2110:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2110:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2127:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2085:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2061:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2139:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2154:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2164:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2154:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2139:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2169:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2139:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2139:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2201:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2201:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2213:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2223:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2213:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2226:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2236:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2236:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2192:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2187:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2262:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2273:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2262:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2262:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1504:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1523:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1515:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1538:0:2"
									},
									"scope": 434,
									"src": "1495:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2384:554:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2402:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2418:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2418:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2402:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2433:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2402:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2441:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2394:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 369,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2542:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2542:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 366,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "2518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 365,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "2512:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2512:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "2512:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2512:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2557:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642042616c616e6365",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2565:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															},
															"value": "Invalid Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2503:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "2503:80:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 381,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2627:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2627:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 385,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2647:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$434",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$434",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2639:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 383,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2639:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2654:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 378,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2600:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 377,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2594:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2594:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "2594:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2594:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "2594:67:2"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 390,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2671:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 393,
														"indexExpression": {
															"expression": {
																"id": 391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2687:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2687:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2671:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 394,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2702:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2671:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2671:37:2"
											},
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2731:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 432,
														"src": "2718:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 398,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 397,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2718:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2718:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2748:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2748:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2759:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 404,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2767:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2767:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2784:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 400,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2742:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2718:68:2"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 409,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2796:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 413,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2811:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2821:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2811:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2796:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2826:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2796:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2796:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2858:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2858:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2870:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2880:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2870:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 423,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2883:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 424,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2893:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2893:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2849:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "EmitStatement",
												"src": "2844:65:2"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2919:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2930:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2919:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2919:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2348:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2369:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2361:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:2"
									},
									"scope": 434,
									"src": "2339:599:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 435,
							"src": "386:4443:2",
							"usedErrors": []
						}
					],
					"src": "36:4793:2"
				},
				"id": 2
			}
		}
	}
}