{
	"id": "9f594011d34afacddc695f963421a2af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address stakingToken;\n\n    //address => amount staked\n    mapping(address=>uint256) stakedAmount;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStaking(address staker, uint256 amountStaked, uint256 blockTime);\n    event Unstaked(address staker, uint256 amountStaked, uint256 blockTime);\n\n    function SetStakingToken(address _token) public onlyOwner {\n        stakingToken = _token;\n    }\n    \n    function StakeToken(uint256 amount) public {\n        require (ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18, \"Invalid Balance\");\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x8478cadeaed2228e1eb109fe7dd4fb7e63cbe69d275ababf1d7c867b735eddaf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1759fd80b93b8703a5429dab6023c74e5977edeca3bc6e7bc1deca1bde0290c\",\"dweb:/ipfs/QmYcRLUycD4JEhu3B2639PCzFfqgDv5Y4LWNJXvMhbkGJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStaking",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":465:3020  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":465:3020  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":465:3020  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":465:3020  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":982:1129  function StakeToken(uint256 amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":876:972  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":982:1129  function StakeToken(uint256 amount) public {... */\n    tag_24:\n        /* \"Solidity Part/contracts/staking.sol\":1096:1102  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Solidity Part/contracts/staking.sol\":1089:1095  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1089:1102  amount*10**18 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"Solidity Part/contracts/staking.sol\":1050:1062  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1044:1073  ERC20(stakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1074:1084  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1044:1085  ERC20(stakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"Solidity Part/contracts/staking.sol\":1044:1102  ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1035:1122  require (ERC20(stakingToken).balanceOf(msg.sender) >= amount*10**18, \"Invalid Balance\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"Solidity Part/contracts/staking.sol\":982:1129  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":876:972  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_40\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"Solidity Part/contracts/staking.sol\":959:965  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":944:956  stakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":944:965  stakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":876:972  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_40\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_76:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_78\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_80:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_82\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:440   */\n    tag_84:\n        /* \"#utility.yul\":354:359   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup2\n        /* \"#utility.yul\":379:392   */\n      mload\n        /* \"#utility.yul\":370:392   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:434   */\n      tag_86\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":401:434   */\n      tag_83\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":297:440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":446:775   */\n    tag_28:\n        /* \"#utility.yul\":505:511   */\n      0x00\n        /* \"#utility.yul\":554:556   */\n      0x20\n        /* \"#utility.yul\":542:551   */\n      dup3\n        /* \"#utility.yul\":533:540   */\n      dup5\n        /* \"#utility.yul\":529:552   */\n      sub\n        /* \"#utility.yul\":525:557   */\n      slt\n        /* \"#utility.yul\":522:641   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":560:639   */\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":522:641   */\n    tag_88:\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":705:758   */\n      tag_91\n        /* \"#utility.yul\":750:757   */\n      dup5\n        /* \"#utility.yul\":741:747   */\n      dup3\n        /* \"#utility.yul\":730:739   */\n      dup6\n        /* \"#utility.yul\":726:748   */\n      add\n        /* \"#utility.yul\":705:758   */\n      tag_76\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":695:758   */\n      swap2\n      pop\n        /* \"#utility.yul\":651:768   */\n      pop\n        /* \"#utility.yul\":446:775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1110   */\n    tag_23:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":889:891   */\n      0x20\n        /* \"#utility.yul\":877:886   */\n      dup3\n        /* \"#utility.yul\":868:875   */\n      dup5\n        /* \"#utility.yul\":864:887   */\n      sub\n        /* \"#utility.yul\":860:892   */\n      slt\n        /* \"#utility.yul\":857:976   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":895:974   */\n      tag_94\n      tag_90\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":857:976   */\n    tag_93:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1040:1093   */\n      tag_95\n        /* \"#utility.yul\":1085:1092   */\n      dup5\n        /* \"#utility.yul\":1076:1082   */\n      dup3\n        /* \"#utility.yul\":1065:1074   */\n      dup6\n        /* \"#utility.yul\":1061:1083   */\n      add\n        /* \"#utility.yul\":1040:1093   */\n      tag_80\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1030:1093   */\n      swap2\n      pop\n        /* \"#utility.yul\":986:1103   */\n      pop\n        /* \"#utility.yul\":781:1110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1116:1467   */\n    tag_53:\n        /* \"#utility.yul\":1186:1192   */\n      0x00\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1223:1232   */\n      dup3\n        /* \"#utility.yul\":1214:1221   */\n      dup5\n        /* \"#utility.yul\":1210:1233   */\n      sub\n        /* \"#utility.yul\":1206:1238   */\n      slt\n        /* \"#utility.yul\":1203:1322   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1241:1320   */\n      tag_98\n      tag_90\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1203:1322   */\n    tag_97:\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1386:1450   */\n      tag_99\n        /* \"#utility.yul\":1442:1449   */\n      dup5\n        /* \"#utility.yul\":1433:1439   */\n      dup3\n        /* \"#utility.yul\":1422:1431   */\n      dup6\n        /* \"#utility.yul\":1418:1440   */\n      add\n        /* \"#utility.yul\":1386:1450   */\n      tag_84\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1376:1450   */\n      swap2\n      pop\n        /* \"#utility.yul\":1332:1460   */\n      pop\n        /* \"#utility.yul\":1116:1467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1591   */\n    tag_100:\n        /* \"#utility.yul\":1560:1584   */\n      tag_102\n        /* \"#utility.yul\":1578:1583   */\n      dup2\n        /* \"#utility.yul\":1560:1584   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1555:1558   */\n      dup3\n        /* \"#utility.yul\":1548:1585   */\n      mstore\n        /* \"#utility.yul\":1473:1591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1597:1963   */\n    tag_104:\n        /* \"#utility.yul\":1739:1742   */\n      0x00\n        /* \"#utility.yul\":1760:1827   */\n      tag_106\n        /* \"#utility.yul\":1824:1826   */\n      0x26\n        /* \"#utility.yul\":1819:1822   */\n      dup4\n        /* \"#utility.yul\":1760:1827   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1753:1827   */\n      swap2\n      pop\n        /* \"#utility.yul\":1836:1929   */\n      tag_108\n        /* \"#utility.yul\":1925:1928   */\n      dup3\n        /* \"#utility.yul\":1836:1929   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1954:1956   */\n      0x40\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1945:1957   */\n      add\n        /* \"#utility.yul\":1938:1957   */\n      swap1\n      pop\n        /* \"#utility.yul\":1597:1963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1969:2335   */\n    tag_110:\n        /* \"#utility.yul\":2111:2114   */\n      0x00\n        /* \"#utility.yul\":2132:2199   */\n      tag_112\n        /* \"#utility.yul\":2196:2198   */\n      0x0f\n        /* \"#utility.yul\":2191:2194   */\n      dup4\n        /* \"#utility.yul\":2132:2199   */\n      tag_107\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2125:2199   */\n      swap2\n      pop\n        /* \"#utility.yul\":2208:2301   */\n      tag_113\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2208:2301   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2326:2328   */\n      0x20\n        /* \"#utility.yul\":2321:2324   */\n      dup3\n        /* \"#utility.yul\":2317:2329   */\n      add\n        /* \"#utility.yul\":2310:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2707   */\n    tag_115:\n        /* \"#utility.yul\":2483:2486   */\n      0x00\n        /* \"#utility.yul\":2504:2571   */\n      tag_117\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2563:2566   */\n      dup4\n        /* \"#utility.yul\":2504:2571   */\n      tag_107\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2497:2571   */\n      swap2\n      pop\n        /* \"#utility.yul\":2580:2673   */\n      tag_118\n        /* \"#utility.yul\":2669:2672   */\n      dup3\n        /* \"#utility.yul\":2580:2673   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2693:2696   */\n      dup3\n        /* \"#utility.yul\":2689:2701   */\n      add\n        /* \"#utility.yul\":2682:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2713:2935   */\n    tag_19:\n        /* \"#utility.yul\":2806:2810   */\n      0x00\n        /* \"#utility.yul\":2844:2846   */\n      0x20\n        /* \"#utility.yul\":2833:2842   */\n      dup3\n        /* \"#utility.yul\":2829:2847   */\n      add\n        /* \"#utility.yul\":2821:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2857:2928   */\n      tag_121\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2914:2923   */\n      dup4\n        /* \"#utility.yul\":2910:2927   */\n      add\n        /* \"#utility.yul\":2901:2907   */\n      dup5\n        /* \"#utility.yul\":2857:2928   */\n      tag_100\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2713:2935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3360   */\n    tag_71:\n        /* \"#utility.yul\":3107:3111   */\n      0x00\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3134:3143   */\n      dup3\n        /* \"#utility.yul\":3130:3148   */\n      add\n        /* \"#utility.yul\":3122:3148   */\n      swap1\n      pop\n        /* \"#utility.yul\":3194:3203   */\n      dup2\n        /* \"#utility.yul\":3188:3192   */\n      dup2\n        /* \"#utility.yul\":3184:3204   */\n      sub\n        /* \"#utility.yul\":3180:3181   */\n      0x00\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3182   */\n      add\n        /* \"#utility.yul\":3158:3205   */\n      mstore\n        /* \"#utility.yul\":3222:3353   */\n      tag_123\n        /* \"#utility.yul\":3348:3352   */\n      dup2\n        /* \"#utility.yul\":3222:3353   */\n      tag_104\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3214:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:3360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3366:3785   */\n    tag_56:\n        /* \"#utility.yul\":3532:3536   */\n      0x00\n        /* \"#utility.yul\":3570:3572   */\n      0x20\n        /* \"#utility.yul\":3559:3568   */\n      dup3\n        /* \"#utility.yul\":3555:3573   */\n      add\n        /* \"#utility.yul\":3547:3573   */\n      swap1\n      pop\n        /* \"#utility.yul\":3619:3628   */\n      dup2\n        /* \"#utility.yul\":3613:3617   */\n      dup2\n        /* \"#utility.yul\":3609:3629   */\n      sub\n        /* \"#utility.yul\":3605:3606   */\n      0x00\n        /* \"#utility.yul\":3594:3603   */\n      dup4\n        /* \"#utility.yul\":3590:3607   */\n      add\n        /* \"#utility.yul\":3583:3630   */\n      mstore\n        /* \"#utility.yul\":3647:3778   */\n      tag_125\n        /* \"#utility.yul\":3773:3777   */\n      dup2\n        /* \"#utility.yul\":3647:3778   */\n      tag_110\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3639:3778   */\n      swap1\n      pop\n        /* \"#utility.yul\":3366:3785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3791:4210   */\n    tag_40:\n        /* \"#utility.yul\":3957:3961   */\n      0x00\n        /* \"#utility.yul\":3995:3997   */\n      0x20\n        /* \"#utility.yul\":3984:3993   */\n      dup3\n        /* \"#utility.yul\":3980:3998   */\n      add\n        /* \"#utility.yul\":3972:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":4044:4053   */\n      dup2\n        /* \"#utility.yul\":4038:4042   */\n      dup2\n        /* \"#utility.yul\":4034:4054   */\n      sub\n        /* \"#utility.yul\":4030:4031   */\n      0x00\n        /* \"#utility.yul\":4019:4028   */\n      dup4\n        /* \"#utility.yul\":4015:4032   */\n      add\n        /* \"#utility.yul\":4008:4055   */\n      mstore\n        /* \"#utility.yul\":4072:4203   */\n      tag_127\n        /* \"#utility.yul\":4198:4202   */\n      dup2\n        /* \"#utility.yul\":4072:4203   */\n      tag_115\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4064:4203   */\n      swap1\n      pop\n        /* \"#utility.yul\":3791:4210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4297:4466   */\n    tag_107:\n        /* \"#utility.yul\":4381:4392   */\n      0x00\n        /* \"#utility.yul\":4415:4421   */\n      dup3\n        /* \"#utility.yul\":4410:4413   */\n      dup3\n        /* \"#utility.yul\":4403:4422   */\n      mstore\n        /* \"#utility.yul\":4455:4459   */\n      0x20\n        /* \"#utility.yul\":4450:4453   */\n      dup3\n        /* \"#utility.yul\":4446:4460   */\n      add\n        /* \"#utility.yul\":4431:4460   */\n      swap1\n      pop\n        /* \"#utility.yul\":4297:4466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4472:4820   */\n    tag_47:\n        /* \"#utility.yul\":4512:4519   */\n      0x00\n        /* \"#utility.yul\":4535:4555   */\n      tag_132\n        /* \"#utility.yul\":4553:4554   */\n      dup3\n        /* \"#utility.yul\":4535:4555   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4530:4555   */\n      swap2\n      pop\n        /* \"#utility.yul\":4569:4589   */\n      tag_134\n        /* \"#utility.yul\":4587:4588   */\n      dup4\n        /* \"#utility.yul\":4569:4589   */\n      tag_133\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4564:4589   */\n      swap3\n      pop\n        /* \"#utility.yul\":4757:4758   */\n      dup2\n        /* \"#utility.yul\":4689:4755   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4685:4759   */\n      div\n        /* \"#utility.yul\":4682:4683   */\n      dup4\n        /* \"#utility.yul\":4679:4760   */\n      gt\n        /* \"#utility.yul\":4674:4675   */\n      dup3\n        /* \"#utility.yul\":4667:4676   */\n      iszero\n        /* \"#utility.yul\":4660:4677   */\n      iszero\n        /* \"#utility.yul\":4656:4761   */\n      and\n        /* \"#utility.yul\":4653:4784   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4764:4782   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4653:4784   */\n    tag_135:\n        /* \"#utility.yul\":4812:4813   */\n      dup3\n        /* \"#utility.yul\":4809:4810   */\n      dup3\n        /* \"#utility.yul\":4805:4814   */\n      mul\n        /* \"#utility.yul\":4794:4814   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4826:4922   */\n    tag_103:\n        /* \"#utility.yul\":4863:4870   */\n      0x00\n        /* \"#utility.yul\":4892:4916   */\n      tag_139\n        /* \"#utility.yul\":4910:4915   */\n      dup3\n        /* \"#utility.yul\":4892:4916   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4881:4916   */\n      swap1\n      pop\n        /* \"#utility.yul\":4826:4922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4928:5054   */\n    tag_140:\n        /* \"#utility.yul\":4965:4972   */\n      0x00\n        /* \"#utility.yul\":5005:5047   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4998:5003   */\n      dup3\n        /* \"#utility.yul\":4994:5048   */\n      and\n        /* \"#utility.yul\":4983:5048   */\n      swap1\n      pop\n        /* \"#utility.yul\":4928:5054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5137   */\n    tag_133:\n        /* \"#utility.yul\":5097:5104   */\n      0x00\n        /* \"#utility.yul\":5126:5131   */\n      dup2\n        /* \"#utility.yul\":5115:5131   */\n      swap1\n      pop\n        /* \"#utility.yul\":5060:5137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5323   */\n    tag_137:\n        /* \"#utility.yul\":5191:5268   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5188:5189   */\n      0x00\n        /* \"#utility.yul\":5181:5269   */\n      mstore\n        /* \"#utility.yul\":5288:5292   */\n      0x11\n        /* \"#utility.yul\":5285:5286   */\n      0x04\n        /* \"#utility.yul\":5278:5293   */\n      mstore\n        /* \"#utility.yul\":5312:5316   */\n      0x24\n        /* \"#utility.yul\":5309:5310   */\n      0x00\n        /* \"#utility.yul\":5302:5317   */\n      revert\n        /* \"#utility.yul\":5452:5569   */\n    tag_90:\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5558:5559   */\n      dup1\n        /* \"#utility.yul\":5551:5563   */\n      revert\n        /* \"#utility.yul\":5575:5800   */\n    tag_109:\n        /* \"#utility.yul\":5715:5749   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5711:5712   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5699:5713   */\n      add\n        /* \"#utility.yul\":5692:5750   */\n      mstore\n        /* \"#utility.yul\":5784:5792   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5779:5781   */\n      0x20\n        /* \"#utility.yul\":5771:5777   */\n      dup3\n        /* \"#utility.yul\":5767:5782   */\n      add\n        /* \"#utility.yul\":5760:5793   */\n      mstore\n        /* \"#utility.yul\":5575:5800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5806:5971   */\n    tag_114:\n        /* \"#utility.yul\":5946:5963   */\n      0x496e76616c69642042616c616e63650000000000000000000000000000000000\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5934:5940   */\n      dup3\n        /* \"#utility.yul\":5930:5944   */\n      add\n        /* \"#utility.yul\":5923:5964   */\n      mstore\n        /* \"#utility.yul\":5806:5971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5977:6159   */\n    tag_119:\n        /* \"#utility.yul\":6117:6151   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6105:6111   */\n      dup3\n        /* \"#utility.yul\":6101:6115   */\n      add\n        /* \"#utility.yul\":6094:6152   */\n      mstore\n        /* \"#utility.yul\":5977:6159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6165:6287   */\n    tag_79:\n        /* \"#utility.yul\":6238:6262   */\n      tag_151\n        /* \"#utility.yul\":6256:6261   */\n      dup2\n        /* \"#utility.yul\":6238:6262   */\n      tag_103\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6231:6236   */\n      dup2\n        /* \"#utility.yul\":6228:6263   */\n      eq\n        /* \"#utility.yul\":6218:6281   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":6277:6278   */\n      0x00\n        /* \"#utility.yul\":6274:6275   */\n      dup1\n        /* \"#utility.yul\":6267:6279   */\n      revert\n        /* \"#utility.yul\":6218:6281   */\n    tag_152:\n        /* \"#utility.yul\":6165:6287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6293:6415   */\n    tag_83:\n        /* \"#utility.yul\":6366:6390   */\n      tag_154\n        /* \"#utility.yul\":6384:6389   */\n      dup2\n        /* \"#utility.yul\":6366:6390   */\n      tag_133\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6356:6391   */\n      eq\n        /* \"#utility.yul\":6346:6409   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":6405:6406   */\n      0x00\n        /* \"#utility.yul\":6402:6403   */\n      dup1\n        /* \"#utility.yul\":6395:6407   */\n      revert\n        /* \"#utility.yul\":6346:6409   */\n    tag_155:\n        /* \"#utility.yul\":6293:6415   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220726ced9d773841befaf13435634129182ac76ce1702e7afd1ee0dba20901f93764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 50,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 58,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108e58061010d6000396000f3fe60806040526004361061004e5760003560e01c8063715018a6146100575780638da5cb5b1461006e578063ad95b1c614610099578063db568922146100c2578063f2fde38b146100eb57610055565b3661005557005b005b34801561006357600080fd5b5061006c610114565b005b34801561007a57600080fd5b5061008361019c565b604051610090919061068a565b60405180910390f35b3480156100a557600080fd5b506100c060048036038101906100bb91906105b8565b6101c5565b005b3480156100ce57600080fd5b506100e960048036038101906100e4919061058b565b6102c8565b005b3480156100f757600080fd5b50610112600480360381019061010d919061058b565b610388565b005b61011c610480565b73ffffffffffffffffffffffffffffffffffffffff1661013a61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610190576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610187906106e5565b60405180910390fd5b61019a6000610488565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000816101d99190610716565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610234919061068a565b60206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105e5565b10156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc906106c5565b60405180910390fd5b50565b6102d0610480565b73ffffffffffffffffffffffffffffffffffffffff166102ee61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b906106e5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610390610480565b73ffffffffffffffffffffffffffffffffffffffff166103ae61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb906106e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b906106a5565b60405180910390fd5b61047d81610488565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061055b81610881565b92915050565b60008135905061057081610898565b92915050565b60008151905061058581610898565b92915050565b6000602082840312156105a1576105a06107db565b5b60006105af8482850161054c565b91505092915050565b6000602082840312156105ce576105cd6107db565b5b60006105dc84828501610561565b91505092915050565b6000602082840312156105fb576105fa6107db565b5b600061060984828501610576565b91505092915050565b61061b81610770565b82525050565b600061062e602683610705565b9150610639826107e0565b604082019050919050565b6000610651600f83610705565b915061065c8261082f565b602082019050919050565b6000610674602083610705565b915061067f82610858565b602082019050919050565b600060208201905061069f6000830184610612565b92915050565b600060208201905081810360008301526106be81610621565b9050919050565b600060208201905081810360008301526106de81610644565b9050919050565b600060208201905081810360008301526106fe81610667565b9050919050565b600082825260208201905092915050565b6000610721826107a2565b915061072c836107a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610765576107646107ac565b5b828202905092915050565b600061077b82610782565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61088a81610770565b811461089557600080fd5b50565b6108a1816107a2565b81146108ac57600080fd5b5056fea2646970667358221220726ced9d773841befaf13435634129182ac76ce1702e7afd1ee0dba20901f93764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8E5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A PUSH1 0x0 PUSH2 0x488 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EE PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x390 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AE PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x488 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55B DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x585 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x54C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DC DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x609 DUP5 DUP3 DUP6 ADD PUSH2 0x576 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E PUSH1 0x26 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x639 DUP3 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 PUSH1 0xF DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x65C DUP3 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x674 PUSH1 0x20 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x67F DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BE DUP2 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DE DUP2 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6FE DUP2 PUSH2 0x667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x765 JUMPI PUSH2 0x764 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP3 PUSH2 0x782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x770 JUMP JUMPDEST DUP2 EQ PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x6CED9D773841BEFAF13435634129182AC76CE1 PUSH17 0x2E7AFD1EE0DBA20901F93764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "465:2555:2:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;465:2555:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;465:2555:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetStakingToken_210": {
									"entryPoint": 712,
									"id": 210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_233": {
									"entryPoint": 453,
									"id": 233,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_178": {
									"entryPoint": null,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 1152,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1160,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 412,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 276,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 904,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6418:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "360:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "370:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "379:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "401:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "338:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "346:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "354:5:3",
														"type": ""
													}
												],
												"src": "297:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "512:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "560:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "533:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "542:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "554:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:32:3"
															},
															"nodeType": "YulIf",
															"src": "522:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "651:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "666:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "680:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "670:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "695:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "730:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "741:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "726:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "726:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "750:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "705:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "705:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "695:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "482:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "493:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "505:6:3",
														"type": ""
													}
												],
												"src": "446:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "893:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "895:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "895:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "868:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "877:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "864:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "864:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "889:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "860:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:32:3"
															},
															"nodeType": "YulIf",
															"src": "857:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "986:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1001:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1005:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1030:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1065:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1076:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1061:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1061:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1085:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1040:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1040:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1030:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:3",
														"type": ""
													}
												],
												"src": "781:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1193:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1239:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1241:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1241:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1241:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1214:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1223:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:32:3"
															},
															"nodeType": "YulIf",
															"src": "1203:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1332:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1347:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1351:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1376:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1422:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1433:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1418:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1418:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1442:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1386:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1386:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1376:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1163:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1174:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1186:6:3",
														"type": ""
													}
												],
												"src": "1116:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1538:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1555:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1578:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1560:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1560:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1548:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1548:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1526:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1533:3:3",
														"type": ""
													}
												],
												"src": "1473:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1753:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1819:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1760:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1753:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1925:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1836:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1938:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1954:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1938:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1731:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1739:3:3",
														"type": ""
													}
												],
												"src": "1597:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2191:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2196:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2132:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2125:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																	"nodeType": "YulIdentifier",
																	"src": "2208:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2208:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2310:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2103:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2111:3:3",
														"type": ""
													}
												],
												"src": "1969:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2487:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2497:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2563:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2504:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2497:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2669:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "2580:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2693:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2682:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2475:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2483:3:3",
														"type": ""
													}
												],
												"src": "2341:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2821:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2833:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2821:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2901:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2925:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2857:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2783:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2795:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2806:4:3",
														"type": ""
													}
												],
												"src": "2713:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3122:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3134:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3122:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3180:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3188:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3214:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3348:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3222:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3214:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3092:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3107:4:3",
														"type": ""
													}
												],
												"src": "2941:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3547:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3559:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3570:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3547:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3594:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3605:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3613:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3609:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3609:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3773:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3647:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3639:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3517:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3532:4:3",
														"type": ""
													}
												],
												"src": "3366:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3962:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3972:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3984:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3995:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3980:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3980:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3972:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4019:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4030:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4015:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4038:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4034:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4008:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4008:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4008:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4064:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4198:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4072:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4064:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3942:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3957:4:3",
														"type": ""
													}
												],
												"src": "3791:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4256:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4266:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4276:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4249:6:3",
														"type": ""
													}
												],
												"src": "4216:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4393:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4410:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4415:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4403:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4431:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4450:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4455:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4431:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4365:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4370:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4381:11:3",
														"type": ""
													}
												],
												"src": "4297:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4520:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4530:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4553:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4535:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4530:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4564:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4587:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4569:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4564:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4762:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4764:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4764:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4764:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4674:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4667:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4667:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4660:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4682:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4689:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4757:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4685:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4685:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4679:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:105:3"
															},
															"nodeType": "YulIf",
															"src": "4653:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4794:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4809:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4812:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4794:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4503:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4506:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4512:7:3",
														"type": ""
													}
												],
												"src": "4472:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4871:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4881:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4910:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4892:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4881:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4853:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4863:7:3",
														"type": ""
													}
												],
												"src": "4826:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4973:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4983:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4998:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5005:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4983:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4955:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4965:7:3",
														"type": ""
													}
												],
												"src": "4928:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5105:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5115:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5126:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5115:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5087:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5097:7:3",
														"type": ""
													}
												],
												"src": "5060:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5181:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5181:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5181:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5288:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5278:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5309:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5312:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5143:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5418:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5435:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5438:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5428:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5329:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5541:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5561:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5551:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5452:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5681:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5703:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5711:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5715:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5771:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5779:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5767:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5784:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5760:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5760:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5673:6:3",
														"type": ""
													}
												],
												"src": "5575:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5912:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5942:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:14:3"
																	},
																	{
																		"hexValue": "496e76616c69642042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5946:17:3",
																		"type": "",
																		"value": "Invalid Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5923:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5923:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5904:6:3",
														"type": ""
													}
												],
												"src": "5806:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6083:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6105:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6113:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6101:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6117:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6094:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6075:6:3",
														"type": ""
													}
												],
												"src": "5977:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6265:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6274:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6277:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6267:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6267:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6267:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6231:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6256:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6238:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6238:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6228:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:43:3"
															},
															"nodeType": "YulIf",
															"src": "6218:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6201:5:3",
														"type": ""
													}
												],
												"src": "6165:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6336:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6393:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6402:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6395:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6395:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6395:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6359:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6384:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6366:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6366:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6356:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6356:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6349:43:3"
															},
															"nodeType": "YulIf",
															"src": "6346:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6329:5:3",
														"type": ""
													}
												],
												"src": "6293:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Balance\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c8063715018a6146100575780638da5cb5b1461006e578063ad95b1c614610099578063db568922146100c2578063f2fde38b146100eb57610055565b3661005557005b005b34801561006357600080fd5b5061006c610114565b005b34801561007a57600080fd5b5061008361019c565b604051610090919061068a565b60405180910390f35b3480156100a557600080fd5b506100c060048036038101906100bb91906105b8565b6101c5565b005b3480156100ce57600080fd5b506100e960048036038101906100e4919061058b565b6102c8565b005b3480156100f757600080fd5b50610112600480360381019061010d919061058b565b610388565b005b61011c610480565b73ffffffffffffffffffffffffffffffffffffffff1661013a61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610190576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610187906106e5565b60405180910390fd5b61019a6000610488565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b670de0b6b3a7640000816101d99190610716565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610234919061068a565b60206040518083038186803b15801561024c57600080fd5b505afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105e5565b10156102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc906106c5565b60405180910390fd5b50565b6102d0610480565b73ffffffffffffffffffffffffffffffffffffffff166102ee61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b906106e5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610390610480565b73ffffffffffffffffffffffffffffffffffffffff166103ae61019c565b73ffffffffffffffffffffffffffffffffffffffff1614610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb906106e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b906106a5565b60405180910390fd5b61047d81610488565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061055b81610881565b92915050565b60008135905061057081610898565b92915050565b60008151905061058581610898565b92915050565b6000602082840312156105a1576105a06107db565b5b60006105af8482850161054c565b91505092915050565b6000602082840312156105ce576105cd6107db565b5b60006105dc84828501610561565b91505092915050565b6000602082840312156105fb576105fa6107db565b5b600061060984828501610576565b91505092915050565b61061b81610770565b82525050565b600061062e602683610705565b9150610639826107e0565b604082019050919050565b6000610651600f83610705565b915061065c8261082f565b602082019050919050565b6000610674602083610705565b915061067f82610858565b602082019050919050565b600060208201905061069f6000830184610612565b92915050565b600060208201905081810360008301526106be81610621565b9050919050565b600060208201905081810360008301526106de81610644565b9050919050565b600060208201905081810360008301526106fe81610667565b9050919050565b600082825260208201905092915050565b6000610721826107a2565b915061072c836107a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610765576107646107ac565b5b828202905092915050565b600061077b82610782565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61088a81610770565b811461089557600080fd5b50565b6108a1816107a2565b81146108ac57600080fd5b5056fea2646970667358221220726ced9d773841befaf13435634129182ac76ce1702e7afd1ee0dba20901f93764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x114 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A PUSH1 0x0 PUSH2 0x488 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST LT ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2EE PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x390 PUSH2 0x480 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AE PUSH2 0x19C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FB SWAP1 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46B SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x488 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55B DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x585 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP5 DUP3 DUP6 ADD PUSH2 0x54C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5DC DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x7DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x609 DUP5 DUP3 DUP6 ADD PUSH2 0x576 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61B DUP2 PUSH2 0x770 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E PUSH1 0x26 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x639 DUP3 PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x651 PUSH1 0xF DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x65C DUP3 PUSH2 0x82F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x674 PUSH1 0x20 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x67F DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BE DUP2 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6DE DUP2 PUSH2 0x644 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6FE DUP2 PUSH2 0x667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x765 JUMPI PUSH2 0x764 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP3 PUSH2 0x782 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x770 JUMP JUMPDEST DUP2 EQ PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x6CED9D773841BEFAF13435634129182AC76CE1 PUSH17 0x2E7AFD1EE0DBA20901F93764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "465:2555:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;982:147:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;876:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;982:147:2:-;1096:6;1089;:13;;;;:::i;:::-;1050:12;;;;;;;;;;;1044:29;;;1074:10;1044:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;;1035:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;982:147;:::o;876:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;959:6:2::1;944:12;;:21;;;;;;;;;;;;;;;;;;876:96:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:::-;840:6;889:2;877:9;868:7;864:23;860:32;857:119;;;895:79;;:::i;:::-;857:119;1015:1;1040:53;1085:7;1076:6;1065:9;1061:22;1040:53;:::i;:::-;1030:63;;986:117;781:329;;;;:::o;1116:351::-;1186:6;1235:2;1223:9;1214:7;1210:23;1206:32;1203:119;;;1241:79;;:::i;:::-;1203:119;1361:1;1386:64;1442:7;1433:6;1422:9;1418:22;1386:64;:::i;:::-;1376:74;;1332:128;1116:351;;;;:::o;1473:118::-;1560:24;1578:5;1560:24;:::i;:::-;1555:3;1548:37;1473:118;;:::o;1597:366::-;1739:3;1760:67;1824:2;1819:3;1760:67;:::i;:::-;1753:74;;1836:93;1925:3;1836:93;:::i;:::-;1954:2;1949:3;1945:12;1938:19;;1597:366;;;:::o;1969:::-;2111:3;2132:67;2196:2;2191:3;2132:67;:::i;:::-;2125:74;;2208:93;2297:3;2208:93;:::i;:::-;2326:2;2321:3;2317:12;2310:19;;1969:366;;;:::o;2341:::-;2483:3;2504:67;2568:2;2563:3;2504:67;:::i;:::-;2497:74;;2580:93;2669:3;2580:93;:::i;:::-;2698:2;2693:3;2689:12;2682:19;;2341:366;;;:::o;2713:222::-;2806:4;2844:2;2833:9;2829:18;2821:26;;2857:71;2925:1;2914:9;2910:17;2901:6;2857:71;:::i;:::-;2713:222;;;;:::o;2941:419::-;3107:4;3145:2;3134:9;3130:18;3122:26;;3194:9;3188:4;3184:20;3180:1;3169:9;3165:17;3158:47;3222:131;3348:4;3222:131;:::i;:::-;3214:139;;2941:419;;;:::o;3366:::-;3532:4;3570:2;3559:9;3555:18;3547:26;;3619:9;3613:4;3609:20;3605:1;3594:9;3590:17;3583:47;3647:131;3773:4;3647:131;:::i;:::-;3639:139;;3366:419;;;:::o;3791:::-;3957:4;3995:2;3984:9;3980:18;3972:26;;4044:9;4038:4;4034:20;4030:1;4019:9;4015:17;4008:47;4072:131;4198:4;4072:131;:::i;:::-;4064:139;;3791:419;;;:::o;4297:169::-;4381:11;4415:6;4410:3;4403:19;4455:4;4450:3;4446:14;4431:29;;4297:169;;;;:::o;4472:348::-;4512:7;4535:20;4553:1;4535:20;:::i;:::-;4530:25;;4569:20;4587:1;4569:20;:::i;:::-;4564:25;;4757:1;4689:66;4685:74;4682:1;4679:81;4674:1;4667:9;4660:17;4656:105;4653:131;;;4764:18;;:::i;:::-;4653:131;4812:1;4809;4805:9;4794:20;;4472:348;;;;:::o;4826:96::-;4863:7;4892:24;4910:5;4892:24;:::i;:::-;4881:35;;4826:96;;;:::o;4928:126::-;4965:7;5005:42;4998:5;4994:54;4983:65;;4928:126;;;:::o;5060:77::-;5097:7;5126:5;5115:16;;5060:77;;;:::o;5143:180::-;5191:77;5188:1;5181:88;5288:4;5285:1;5278:15;5312:4;5309:1;5302:15;5452:117;5561:1;5558;5551:12;5575:225;5715:34;5711:1;5703:6;5699:14;5692:58;5784:8;5779:2;5771:6;5767:15;5760:33;5575:225;:::o;5806:165::-;5946:17;5942:1;5934:6;5930:14;5923:41;5806:165;:::o;5977:182::-;6117:34;6113:1;6105:6;6101:14;6094:58;5977:182;:::o;6165:122::-;6238:24;6256:5;6238:24;:::i;:::-;6231:5;6228:35;6218:63;;6277:1;6274;6267:12;6218:63;6165:122;:::o;6293:::-;6366:24;6384:5;6366:24;:::i;:::-;6359:5;6356:35;6346:63;;6405:1;6402;6395:12;6346:63;6293:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "455400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "173",
								"SetStakingToken(address)": "27006",
								"StakeToken(uint256)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30352",
								"transferOwnership(address)": "30789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 3020,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220726ced9d773841befaf13435634129182ac76ce1702e7afd1ee0dba20901f93764736f6c63430008070033",
									".code": [
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 465,
											"end": 3020,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1044,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1102,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1035,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 982,
											"end": 1129,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 944,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 944,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 944,
											"end": 965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 944,
											"end": 965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 354,
											"end": 359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 379,
											"end": 392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 775,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 446,
											"end": 775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 551,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 533,
											"end": 540,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 529,
											"end": 552,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 525,
											"end": 557,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 522,
											"end": 641,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 522,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 522,
											"end": 641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 522,
											"end": 641,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 522,
											"end": 641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 750,
											"end": 757,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 741,
											"end": 747,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 695,
											"end": 758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 695,
											"end": 758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 651,
											"end": 768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 446,
											"end": 775,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 446,
											"end": 775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 446,
											"end": 775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 446,
											"end": 775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 446,
											"end": 775,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 864,
											"end": 887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 860,
											"end": 892,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 857,
											"end": 976,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 857,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 857,
											"end": 976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 895,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 857,
											"end": 976,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 857,
											"end": 976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 1103,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1433,
											"end": 1439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1440,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1473,
											"end": 1591,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1560,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1591,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1760,
											"end": 1827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1827,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1760,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1836,
											"end": 1929,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1836,
											"end": 1929,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1836,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1597,
											"end": 1963,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2132,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2132,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2132,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2132,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2208,
											"end": 2301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2208,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2208,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2328,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2335,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2566,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2504,
											"end": 2571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2571,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2504,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2669,
											"end": 2672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2580,
											"end": 2673,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2673,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2580,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2693,
											"end": 2696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 2701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2707,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2907,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2857,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2935,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3205,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3348,
											"end": 3352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3222,
											"end": 3353,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3222,
											"end": 3353,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3222,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 3360,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3573,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3630,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3773,
											"end": 3777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3647,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3647,
											"end": 3778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3778,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3647,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3785,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4038,
											"end": 4042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4034,
											"end": 4054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4030,
											"end": 4031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4032,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4072,
											"end": 4203,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4072,
											"end": 4203,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4072,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 4210,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4410,
											"end": 4413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4422,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4459,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4297,
											"end": 4466,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4535,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4569,
											"end": 4589,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4569,
											"end": 4589,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4569,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4564,
											"end": 4589,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4564,
											"end": 4589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4755,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4685,
											"end": 4759,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4679,
											"end": 4760,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4674,
											"end": 4675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4660,
											"end": 4677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4653,
											"end": 4784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4653,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4653,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4814,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4820,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4870,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4910,
											"end": 4915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4892,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4892,
											"end": 4916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4916,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4892,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4916,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4922,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4965,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5047,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4998,
											"end": 5003,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 5048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 5048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5126,
											"end": 5131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5060,
											"end": 5137,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5143,
											"end": 5323,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5143,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5268,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5188,
											"end": 5189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5269,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5312,
											"end": 5316,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5569,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5452,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5563,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5800,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5575,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5715,
											"end": 5749,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5699,
											"end": 5713,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5784,
											"end": 5792,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5779,
											"end": 5781,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5793,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5800,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5806,
											"end": 5971,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5806,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5946,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C69642042616C616E63650000000000000000000000000000000000"
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5930,
											"end": 5944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5923,
											"end": 5964,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5971,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5977,
											"end": 6159,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5977,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6151,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6152,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6159,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6159,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6165,
											"end": 6287,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6165,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6238,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6231,
											"end": 6236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6228,
											"end": 6263,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6267,
											"end": 6279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6287,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6366,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6391,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6415,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStaking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x8478cadeaed2228e1eb109fe7dd4fb7e63cbe69d275ababf1d7c867b735eddaf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1759fd80b93b8703a5429dab6023c74e5977edeca3bc6e7bc1deca1bde0290c\",\"dweb:/ipfs/QmYcRLUycD4JEhu3B2639PCzFfqgDv5Y4LWNJXvMhbkGJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 170,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 174,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Solidity Part/contracts/staking.sol:31:5:\n   |\n31 |     function StakeToken(uint256 amount) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1129,
					"file": "Solidity Part/contracts/staking.sol",
					"start": 982
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							166
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							234
						]
					},
					"id": 235,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 235,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 166,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 166,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 166,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "396:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "412:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "404:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "429:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "421:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:33:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "455:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:6:2"
									},
									"scope": 166,
									"src": "387:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 235,
							"src": "114:349:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 167,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "493:7:2"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "493:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 234,
							"linearizedBaseContracts": [
								234,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "474:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 170,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "525:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "517:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "601:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 234,
									"src": "575:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 173,
										"keyType": {
											"id": 171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "583:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "575:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "592:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "663:2:2",
										"statements": []
									},
									"id": 178,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:0:2"
									},
									"scope": 234,
									"src": "636:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "698:2:2",
										"statements": []
									},
									"id": 182,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:2"
									},
									"scope": 234,
									"src": "670:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 190,
									"name": "NewStaking",
									"nameLocation": "725:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "744:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "736:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountStaked",
												"nameLocation": "760:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "752:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "782:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "774:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:57:2"
									},
									"src": "719:74:2"
								},
								{
									"anonymous": false,
									"id": 198,
									"name": "Unstaked",
									"nameLocation": "804:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "821:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "813:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountStaked",
												"nameLocation": "837:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "829:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "859:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "851:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:57:2"
									},
									"src": "798:72:2"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "934:38:2",
										"statements": [
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "944:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 206,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "959:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "944:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "944:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 202,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "924:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "924:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "885:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "901:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:16:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:2"
									},
									"scope": 234,
									"src": "876:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1025:104:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 220,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1074:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1074:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 217,
																				"name": "stakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "1050:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 216,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 166,
																			"src": "1044:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$166_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1044:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$166",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1044:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1044:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "1089:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1096:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1100:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1089:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1044:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642042616c616e6365",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1104:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															},
															"value": "Invalid Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1035:87:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "991:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1010:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1002:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:16:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:2"
									},
									"scope": 234,
									"src": "982:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 235,
							"src": "465:2555:2",
							"usedErrors": []
						}
					],
					"src": "36:2984:2"
				},
				"id": 2
			}
		}
	}
}