{
	"id": "dfbdfe3034a4f0744deec010ea60c587",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 StakeTime;\n        //unstake block timestamp\n        uint256 UnstakeTime;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function StakeToken(uint256 amount) public {\n        // enter amount * (10^18) to allow for decimals\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"Call Will Brech Maximum Stake\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount <= 10*10**18, \"Minimum Stake Not Reached\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"Invalid Balance\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xa00c1004ba1fde35008176e318f497f59b3e9c04b61b41b3affc52b390b08346\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c22ee038f0efc99db61483d9c408061a476b693a3258bec066927a3d879366b\",\"dweb:/ipfs/QmNSLX6sHZtUSS7U1TYF84uQdDXMYsFgTqpHDkNLjNA13y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "StakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "UnstakeTime",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:4078  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:4078  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:4078  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:4078  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:4078  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1343:2187  function StakeToken(uint256 amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1343:2187  function StakeToken(uint256 amount) public {... */\n    tag_25:\n        /* \"Solidity Part/contracts/staking.sol\":1460:1474  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1452:1501  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Solidity Part/contracts/staking.sol\":1559:1573  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1549:1555  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1519:1534  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1519:1546  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1535:1545  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1519:1546  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1519:1555  StakingBalances[msg.sender] + amount */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"Solidity Part/contracts/staking.sol\":1519:1573  StakingBalances[msg.sender] + amount >= 1000000*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1511:1607  require(StakingBalances[msg.sender] + amount >= 1000000*10**18, \"Call Will Brech Maximum Stake\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"Solidity Part/contracts/staking.sol\":1687:1696  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1677:1683  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1647:1662  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1647:1674  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1663:1673  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1647:1674  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1647:1683  StakingBalances[msg.sender] + amount */\n      tag_60\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_60:\n        /* \"Solidity Part/contracts/staking.sol\":1647:1696  StakingBalances[msg.sender] + amount <= 10*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1639:1726  require(StakingBalances[msg.sender] + amount <= 10*10**18, \"Minimum Stake Not Reached\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"Solidity Part/contracts/staking.sol\":1806:1812  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1767:1779  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1761:1790  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1791:1801  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1761:1802  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_64:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"Solidity Part/contracts/staking.sol\":1761:1812  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1752:1832  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"Invalid Balance\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"Solidity Part/contracts/staking.sol\":1849:1861  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1843:1875  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":1876:1886  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1896:1900  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":1903:1909  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":1843:1910  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1951:1957  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1920:1935  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1920:1947  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1936:1946  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1920:1947  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1920:1957  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_80:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1967:1988  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1991:2035  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1997:2007  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1991:2035  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2008:2014  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":1991:2035  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2016:2031  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":1991:2035  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2033:2034  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1991:2035  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1967:2035  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2075:2083  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2045:2059  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2045:2072  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2070:2071  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2060:2069  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2060:2071  currentID+1 */\n      tag_81\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_81:\n        /* \"Solidity Part/contracts/staking.sol\":2045:2072  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2045:2083  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2098:2158  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba6\n        /* \"Solidity Part/contracts/staking.sol\":2107:2117  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2129:2130  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2119:2128  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2119:2130  currentID+1 */\n      tag_82\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_82:\n        /* \"Solidity Part/contracts/staking.sol\":2132:2140  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2142:2157  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2098:2158  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_83\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2179:2180  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2168:2177  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2168:2180  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1386:2187  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1343:2187  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_28:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_46\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"Solidity Part/contracts/staking.sol\":1320:1326  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1305:1317  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1305:1326  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1237:1333  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_46\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_105:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_107\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_109:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_111\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_113:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_115\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_117:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_119\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_116\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_34:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":665:784   */\n    tag_121:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_124\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_105\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_79:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_127\n      tag_123\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1008:1127   */\n    tag_126:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_128\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_109\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_24:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_131\n      tag_123\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1351:1470   */\n    tag_130:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_132\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_113\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_69:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_135\n      tag_123\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1697:1816   */\n    tag_134:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_136\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_117\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2075   */\n    tag_137:\n        /* \"#utility.yul\":2044:2068   */\n      tag_139\n        /* \"#utility.yul\":2062:2067   */\n      dup2\n        /* \"#utility.yul\":2044:2068   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2039:2042   */\n      dup3\n        /* \"#utility.yul\":2032:2069   */\n      mstore\n        /* \"#utility.yul\":1967:2075   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2199   */\n    tag_141:\n        /* \"#utility.yul\":2168:2192   */\n      tag_143\n        /* \"#utility.yul\":2186:2191   */\n      dup2\n        /* \"#utility.yul\":2168:2192   */\n      tag_140\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2163:2166   */\n      dup3\n        /* \"#utility.yul\":2156:2193   */\n      mstore\n        /* \"#utility.yul\":2081:2199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2205:2314   */\n    tag_144:\n        /* \"#utility.yul\":2286:2307   */\n      tag_146\n        /* \"#utility.yul\":2301:2306   */\n      dup2\n        /* \"#utility.yul\":2286:2307   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2281:2284   */\n      dup3\n        /* \"#utility.yul\":2274:2308   */\n      mstore\n        /* \"#utility.yul\":2205:2314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2686   */\n    tag_148:\n        /* \"#utility.yul\":2462:2465   */\n      0x00\n        /* \"#utility.yul\":2483:2550   */\n      tag_150\n        /* \"#utility.yul\":2547:2549   */\n      0x1d\n        /* \"#utility.yul\":2542:2545   */\n      dup4\n        /* \"#utility.yul\":2483:2550   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2476:2550   */\n      swap2\n      pop\n        /* \"#utility.yul\":2559:2652   */\n      tag_152\n        /* \"#utility.yul\":2648:2651   */\n      dup3\n        /* \"#utility.yul\":2559:2652   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2677:2679   */\n      0x20\n        /* \"#utility.yul\":2672:2675   */\n      dup3\n        /* \"#utility.yul\":2668:2680   */\n      add\n        /* \"#utility.yul\":2661:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2320:2686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2692:3058   */\n    tag_154:\n        /* \"#utility.yul\":2834:2837   */\n      0x00\n        /* \"#utility.yul\":2855:2922   */\n      tag_156\n        /* \"#utility.yul\":2919:2921   */\n      0x26\n        /* \"#utility.yul\":2914:2917   */\n      dup4\n        /* \"#utility.yul\":2855:2922   */\n      tag_151\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2848:2922   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3024   */\n      tag_157\n        /* \"#utility.yul\":3020:3023   */\n      dup3\n        /* \"#utility.yul\":2931:3024   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3052   */\n      add\n        /* \"#utility.yul\":3033:3052   */\n      swap1\n      pop\n        /* \"#utility.yul\":2692:3058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3430   */\n    tag_159:\n        /* \"#utility.yul\":3206:3209   */\n      0x00\n        /* \"#utility.yul\":3227:3294   */\n      tag_161\n        /* \"#utility.yul\":3291:3293   */\n      0x0f\n        /* \"#utility.yul\":3286:3289   */\n      dup4\n        /* \"#utility.yul\":3227:3294   */\n      tag_151\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3220:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3303:3396   */\n      tag_162\n        /* \"#utility.yul\":3392:3395   */\n      dup3\n        /* \"#utility.yul\":3303:3396   */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3412:3424   */\n      add\n        /* \"#utility.yul\":3405:3424   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3802   */\n    tag_164:\n        /* \"#utility.yul\":3578:3581   */\n      0x00\n        /* \"#utility.yul\":3599:3666   */\n      tag_166\n        /* \"#utility.yul\":3663:3665   */\n      0x16\n        /* \"#utility.yul\":3658:3661   */\n      dup4\n        /* \"#utility.yul\":3599:3666   */\n      tag_151\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3592:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3675:3768   */\n      tag_167\n        /* \"#utility.yul\":3764:3767   */\n      dup3\n        /* \"#utility.yul\":3675:3768   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3788:3791   */\n      dup3\n        /* \"#utility.yul\":3784:3796   */\n      add\n        /* \"#utility.yul\":3777:3796   */\n      swap1\n      pop\n        /* \"#utility.yul\":3436:3802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4174   */\n    tag_169:\n        /* \"#utility.yul\":3950:3953   */\n      0x00\n        /* \"#utility.yul\":3971:4038   */\n      tag_171\n        /* \"#utility.yul\":4035:4037   */\n      0x19\n        /* \"#utility.yul\":4030:4033   */\n      dup4\n        /* \"#utility.yul\":3971:4038   */\n      tag_151\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3964:4038   */\n      swap2\n      pop\n        /* \"#utility.yul\":4047:4140   */\n      tag_172\n        /* \"#utility.yul\":4136:4139   */\n      dup3\n        /* \"#utility.yul\":4047:4140   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4165:4167   */\n      0x20\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4156:4168   */\n      add\n        /* \"#utility.yul\":4149:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3808:4174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4546   */\n    tag_174:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4343:4410   */\n      tag_176\n        /* \"#utility.yul\":4407:4409   */\n      0x20\n        /* \"#utility.yul\":4402:4405   */\n      dup4\n        /* \"#utility.yul\":4343:4410   */\n      tag_151\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4336:4410   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4512   */\n      tag_177\n        /* \"#utility.yul\":4508:4511   */\n      dup3\n        /* \"#utility.yul\":4419:4512   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4537:4539   */\n      0x20\n        /* \"#utility.yul\":4532:4535   */\n      dup3\n        /* \"#utility.yul\":4528:4540   */\n      add\n        /* \"#utility.yul\":4521:4540   */\n      swap1\n      pop\n        /* \"#utility.yul\":4180:4546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:5484   */\n    tag_179:\n        /* \"#utility.yul\":4761:4765   */\n      0x80\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4752:4766   */\n      add\n        /* \"#utility.yul\":4849:4853   */\n      0x00\n        /* \"#utility.yul\":4842:4847   */\n      dup3\n        /* \"#utility.yul\":4838:4854   */\n      add\n        /* \"#utility.yul\":4832:4855   */\n      mload\n        /* \"#utility.yul\":4868:4931   */\n      tag_181\n        /* \"#utility.yul\":4925:4929   */\n      0x00\n        /* \"#utility.yul\":4920:4923   */\n      dup6\n        /* \"#utility.yul\":4916:4930   */\n      add\n        /* \"#utility.yul\":4902:4914   */\n      dup3\n        /* \"#utility.yul\":4868:4931   */\n      tag_137\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4776:4941   */\n      pop\n        /* \"#utility.yul\":5025:5029   */\n      0x20\n        /* \"#utility.yul\":5018:5023   */\n      dup3\n        /* \"#utility.yul\":5014:5030   */\n      add\n        /* \"#utility.yul\":5008:5031   */\n      mload\n        /* \"#utility.yul\":5044:5107   */\n      tag_182\n        /* \"#utility.yul\":5101:5105   */\n      0x20\n        /* \"#utility.yul\":5096:5099   */\n      dup6\n        /* \"#utility.yul\":5092:5106   */\n      add\n        /* \"#utility.yul\":5078:5090   */\n      dup3\n        /* \"#utility.yul\":5044:5107   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4951:5117   */\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x40\n        /* \"#utility.yul\":5197:5202   */\n      dup3\n        /* \"#utility.yul\":5193:5209   */\n      add\n        /* \"#utility.yul\":5187:5210   */\n      mload\n        /* \"#utility.yul\":5223:5286   */\n      tag_184\n        /* \"#utility.yul\":5280:5284   */\n      0x40\n        /* \"#utility.yul\":5275:5278   */\n      dup6\n        /* \"#utility.yul\":5271:5285   */\n      add\n        /* \"#utility.yul\":5257:5269   */\n      dup3\n        /* \"#utility.yul\":5223:5286   */\n      tag_183\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5127:5296   */\n      pop\n        /* \"#utility.yul\":5385:5389   */\n      0x60\n        /* \"#utility.yul\":5378:5383   */\n      dup3\n        /* \"#utility.yul\":5374:5390   */\n      add\n        /* \"#utility.yul\":5368:5391   */\n      mload\n        /* \"#utility.yul\":5404:5467   */\n      tag_185\n        /* \"#utility.yul\":5461:5465   */\n      0x60\n        /* \"#utility.yul\":5456:5459   */\n      dup6\n        /* \"#utility.yul\":5452:5466   */\n      add\n        /* \"#utility.yul\":5438:5450   */\n      dup3\n        /* \"#utility.yul\":5404:5467   */\n      tag_183\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5306:5477   */\n      pop\n        /* \"#utility.yul\":4730:5484   */\n      pop\n        /* \"#utility.yul\":4620:5484   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5490:5598   */\n    tag_183:\n        /* \"#utility.yul\":5567:5591   */\n      tag_187\n        /* \"#utility.yul\":5585:5590   */\n      dup2\n        /* \"#utility.yul\":5567:5591   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5562:5565   */\n      dup3\n        /* \"#utility.yul\":5555:5592   */\n      mstore\n        /* \"#utility.yul\":5490:5598   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5604:5722   */\n    tag_189:\n        /* \"#utility.yul\":5691:5715   */\n      tag_191\n        /* \"#utility.yul\":5709:5714   */\n      dup2\n        /* \"#utility.yul\":5691:5715   */\n      tag_188\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5686:5689   */\n      dup3\n        /* \"#utility.yul\":5679:5716   */\n      mstore\n        /* \"#utility.yul\":5604:5722   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:5950   */\n    tag_20:\n        /* \"#utility.yul\":5821:5825   */\n      0x00\n        /* \"#utility.yul\":5859:5861   */\n      0x20\n        /* \"#utility.yul\":5848:5857   */\n      dup3\n        /* \"#utility.yul\":5844:5862   */\n      add\n        /* \"#utility.yul\":5836:5862   */\n      swap1\n      pop\n        /* \"#utility.yul\":5872:5943   */\n      tag_193\n        /* \"#utility.yul\":5940:5941   */\n      0x00\n        /* \"#utility.yul\":5929:5938   */\n      dup4\n        /* \"#utility.yul\":5925:5942   */\n      add\n        /* \"#utility.yul\":5916:5922   */\n      dup5\n        /* \"#utility.yul\":5872:5943   */\n      tag_141\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5728:5950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5956:6398   */\n    tag_74:\n        /* \"#utility.yul\":6105:6109   */\n      0x00\n        /* \"#utility.yul\":6143:6145   */\n      0x60\n        /* \"#utility.yul\":6132:6141   */\n      dup3\n        /* \"#utility.yul\":6128:6146   */\n      add\n        /* \"#utility.yul\":6120:6146   */\n      swap1\n      pop\n        /* \"#utility.yul\":6156:6227   */\n      tag_195\n        /* \"#utility.yul\":6224:6225   */\n      0x00\n        /* \"#utility.yul\":6213:6222   */\n      dup4\n        /* \"#utility.yul\":6209:6226   */\n      add\n        /* \"#utility.yul\":6200:6206   */\n      dup7\n        /* \"#utility.yul\":6156:6227   */\n      tag_141\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6237:6309   */\n      tag_196\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"#utility.yul\":6294:6303   */\n      dup4\n        /* \"#utility.yul\":6290:6308   */\n      add\n        /* \"#utility.yul\":6281:6287   */\n      dup6\n        /* \"#utility.yul\":6237:6309   */\n      tag_141\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6319:6391   */\n      tag_197\n        /* \"#utility.yul\":6387:6389   */\n      0x40\n        /* \"#utility.yul\":6376:6385   */\n      dup4\n        /* \"#utility.yul\":6372:6390   */\n      add\n        /* \"#utility.yul\":6363:6369   */\n      dup5\n        /* \"#utility.yul\":6319:6391   */\n      tag_189\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5956:6398   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6404:7046   */\n    tag_84:\n        /* \"#utility.yul\":6625:6629   */\n      0x00\n        /* \"#utility.yul\":6663:6666   */\n      0xe0\n        /* \"#utility.yul\":6652:6661   */\n      dup3\n        /* \"#utility.yul\":6648:6667   */\n      add\n        /* \"#utility.yul\":6640:6667   */\n      swap1\n      pop\n        /* \"#utility.yul\":6677:6748   */\n      tag_199\n        /* \"#utility.yul\":6745:6746   */\n      0x00\n        /* \"#utility.yul\":6734:6743   */\n      dup4\n        /* \"#utility.yul\":6730:6747   */\n      add\n        /* \"#utility.yul\":6721:6727   */\n      dup8\n        /* \"#utility.yul\":6677:6748   */\n      tag_141\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6758:6830   */\n      tag_200\n        /* \"#utility.yul\":6826:6828   */\n      0x20\n        /* \"#utility.yul\":6815:6824   */\n      dup4\n        /* \"#utility.yul\":6811:6829   */\n      add\n        /* \"#utility.yul\":6802:6808   */\n      dup7\n        /* \"#utility.yul\":6758:6830   */\n      tag_189\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6840:6956   */\n      tag_201\n        /* \"#utility.yul\":6952:6954   */\n      0x40\n        /* \"#utility.yul\":6941:6950   */\n      dup4\n        /* \"#utility.yul\":6937:6955   */\n      add\n        /* \"#utility.yul\":6928:6934   */\n      dup6\n        /* \"#utility.yul\":6840:6956   */\n      tag_179\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6966:7039   */\n      tag_202\n        /* \"#utility.yul\":7034:7037   */\n      0xc0\n        /* \"#utility.yul\":7023:7032   */\n      dup4\n        /* \"#utility.yul\":7019:7038   */\n      add\n        /* \"#utility.yul\":7010:7016   */\n      dup5\n        /* \"#utility.yul\":6966:7039   */\n      tag_189\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6404:7046   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7052:7262   */\n    tag_30:\n        /* \"#utility.yul\":7139:7143   */\n      0x00\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"#utility.yul\":7166:7175   */\n      dup3\n        /* \"#utility.yul\":7162:7180   */\n      add\n        /* \"#utility.yul\":7154:7180   */\n      swap1\n      pop\n        /* \"#utility.yul\":7190:7255   */\n      tag_204\n        /* \"#utility.yul\":7252:7253   */\n      0x00\n        /* \"#utility.yul\":7241:7250   */\n      dup4\n        /* \"#utility.yul\":7237:7254   */\n      add\n        /* \"#utility.yul\":7228:7234   */\n      dup5\n        /* \"#utility.yul\":7190:7255   */\n      tag_144\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7052:7262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7268:7687   */\n    tag_59:\n        /* \"#utility.yul\":7434:7438   */\n      0x00\n        /* \"#utility.yul\":7472:7474   */\n      0x20\n        /* \"#utility.yul\":7461:7470   */\n      dup3\n        /* \"#utility.yul\":7457:7475   */\n      add\n        /* \"#utility.yul\":7449:7475   */\n      swap1\n      pop\n        /* \"#utility.yul\":7521:7530   */\n      dup2\n        /* \"#utility.yul\":7515:7519   */\n      dup2\n        /* \"#utility.yul\":7511:7531   */\n      sub\n        /* \"#utility.yul\":7507:7508   */\n      0x00\n        /* \"#utility.yul\":7496:7505   */\n      dup4\n        /* \"#utility.yul\":7492:7509   */\n      add\n        /* \"#utility.yul\":7485:7532   */\n      mstore\n        /* \"#utility.yul\":7549:7680   */\n      tag_206\n        /* \"#utility.yul\":7675:7679   */\n      dup2\n        /* \"#utility.yul\":7549:7680   */\n      tag_148\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7541:7680   */\n      swap1\n      pop\n        /* \"#utility.yul\":7268:7687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7693:8112   */\n    tag_100:\n        /* \"#utility.yul\":7859:7863   */\n      0x00\n        /* \"#utility.yul\":7897:7899   */\n      0x20\n        /* \"#utility.yul\":7886:7895   */\n      dup3\n        /* \"#utility.yul\":7882:7900   */\n      add\n        /* \"#utility.yul\":7874:7900   */\n      swap1\n      pop\n        /* \"#utility.yul\":7946:7955   */\n      dup2\n        /* \"#utility.yul\":7940:7944   */\n      dup2\n        /* \"#utility.yul\":7936:7956   */\n      sub\n        /* \"#utility.yul\":7932:7933   */\n      0x00\n        /* \"#utility.yul\":7921:7930   */\n      dup4\n        /* \"#utility.yul\":7917:7934   */\n      add\n        /* \"#utility.yul\":7910:7957   */\n      mstore\n        /* \"#utility.yul\":7974:8105   */\n      tag_208\n        /* \"#utility.yul\":8100:8104   */\n      dup2\n        /* \"#utility.yul\":7974:8105   */\n      tag_154\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7966:8105   */\n      swap1\n      pop\n        /* \"#utility.yul\":7693:8112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8118:8537   */\n    tag_72:\n        /* \"#utility.yul\":8284:8288   */\n      0x00\n        /* \"#utility.yul\":8322:8324   */\n      0x20\n        /* \"#utility.yul\":8311:8320   */\n      dup3\n        /* \"#utility.yul\":8307:8325   */\n      add\n        /* \"#utility.yul\":8299:8325   */\n      swap1\n      pop\n        /* \"#utility.yul\":8371:8380   */\n      dup2\n        /* \"#utility.yul\":8365:8369   */\n      dup2\n        /* \"#utility.yul\":8361:8381   */\n      sub\n        /* \"#utility.yul\":8357:8358   */\n      0x00\n        /* \"#utility.yul\":8346:8355   */\n      dup4\n        /* \"#utility.yul\":8342:8359   */\n      add\n        /* \"#utility.yul\":8335:8382   */\n      mstore\n        /* \"#utility.yul\":8399:8530   */\n      tag_210\n        /* \"#utility.yul\":8525:8529   */\n      dup2\n        /* \"#utility.yul\":8399:8530   */\n      tag_159\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8391:8530   */\n      swap1\n      pop\n        /* \"#utility.yul\":8118:8537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8543:8962   */\n    tag_54:\n        /* \"#utility.yul\":8709:8713   */\n      0x00\n        /* \"#utility.yul\":8747:8749   */\n      0x20\n        /* \"#utility.yul\":8736:8745   */\n      dup3\n        /* \"#utility.yul\":8732:8750   */\n      add\n        /* \"#utility.yul\":8724:8750   */\n      swap1\n      pop\n        /* \"#utility.yul\":8796:8805   */\n      dup2\n        /* \"#utility.yul\":8790:8794   */\n      dup2\n        /* \"#utility.yul\":8786:8806   */\n      sub\n        /* \"#utility.yul\":8782:8783   */\n      0x00\n        /* \"#utility.yul\":8771:8780   */\n      dup4\n        /* \"#utility.yul\":8767:8784   */\n      add\n        /* \"#utility.yul\":8760:8807   */\n      mstore\n        /* \"#utility.yul\":8824:8955   */\n      tag_212\n        /* \"#utility.yul\":8950:8954   */\n      dup2\n        /* \"#utility.yul\":8824:8955   */\n      tag_164\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8816:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":8543:8962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9387   */\n    tag_63:\n        /* \"#utility.yul\":9134:9138   */\n      0x00\n        /* \"#utility.yul\":9172:9174   */\n      0x20\n        /* \"#utility.yul\":9161:9170   */\n      dup3\n        /* \"#utility.yul\":9157:9175   */\n      add\n        /* \"#utility.yul\":9149:9175   */\n      swap1\n      pop\n        /* \"#utility.yul\":9221:9230   */\n      dup2\n        /* \"#utility.yul\":9215:9219   */\n      dup2\n        /* \"#utility.yul\":9211:9231   */\n      sub\n        /* \"#utility.yul\":9207:9208   */\n      0x00\n        /* \"#utility.yul\":9196:9205   */\n      dup4\n        /* \"#utility.yul\":9192:9209   */\n      add\n        /* \"#utility.yul\":9185:9232   */\n      mstore\n        /* \"#utility.yul\":9249:9380   */\n      tag_214\n        /* \"#utility.yul\":9375:9379   */\n      dup2\n        /* \"#utility.yul\":9249:9380   */\n      tag_169\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9241:9380   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9393:9812   */\n    tag_46:\n        /* \"#utility.yul\":9559:9563   */\n      0x00\n        /* \"#utility.yul\":9597:9599   */\n      0x20\n        /* \"#utility.yul\":9586:9595   */\n      dup3\n        /* \"#utility.yul\":9582:9600   */\n      add\n        /* \"#utility.yul\":9574:9600   */\n      swap1\n      pop\n        /* \"#utility.yul\":9646:9655   */\n      dup2\n        /* \"#utility.yul\":9640:9644   */\n      dup2\n        /* \"#utility.yul\":9636:9656   */\n      sub\n        /* \"#utility.yul\":9632:9633   */\n      0x00\n        /* \"#utility.yul\":9621:9630   */\n      dup4\n        /* \"#utility.yul\":9617:9634   */\n      add\n        /* \"#utility.yul\":9610:9657   */\n      mstore\n        /* \"#utility.yul\":9674:9805   */\n      tag_216\n        /* \"#utility.yul\":9800:9804   */\n      dup2\n        /* \"#utility.yul\":9674:9805   */\n      tag_174\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9666:9805   */\n      swap1\n      pop\n        /* \"#utility.yul\":9393:9812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9899:10068   */\n    tag_151:\n        /* \"#utility.yul\":9983:9994   */\n      0x00\n        /* \"#utility.yul\":10017:10023   */\n      dup3\n        /* \"#utility.yul\":10012:10015   */\n      dup3\n        /* \"#utility.yul\":10005:10024   */\n      mstore\n        /* \"#utility.yul\":10057:10061   */\n      0x20\n        /* \"#utility.yul\":10052:10055   */\n      dup3\n        /* \"#utility.yul\":10048:10062   */\n      add\n        /* \"#utility.yul\":10033:10062   */\n      swap1\n      pop\n        /* \"#utility.yul\":9899:10068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10074:10379   */\n    tag_56:\n        /* \"#utility.yul\":10114:10117   */\n      0x00\n        /* \"#utility.yul\":10133:10153   */\n      tag_221\n        /* \"#utility.yul\":10151:10152   */\n      dup3\n        /* \"#utility.yul\":10133:10153   */\n      tag_188\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":10128:10153   */\n      swap2\n      pop\n        /* \"#utility.yul\":10167:10187   */\n      tag_222\n        /* \"#utility.yul\":10185:10186   */\n      dup4\n        /* \"#utility.yul\":10167:10187   */\n      tag_188\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10162:10187   */\n      swap3\n      pop\n        /* \"#utility.yul\":10321:10322   */\n      dup3\n        /* \"#utility.yul\":10253:10319   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10249:10323   */\n      sub\n        /* \"#utility.yul\":10246:10247   */\n      dup3\n        /* \"#utility.yul\":10243:10324   */\n      gt\n        /* \"#utility.yul\":10240:10347   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":10327:10345   */\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":10240:10347   */\n    tag_223:\n        /* \"#utility.yul\":10371:10372   */\n      dup3\n        /* \"#utility.yul\":10368:10369   */\n      dup3\n        /* \"#utility.yul\":10364:10373   */\n      add\n        /* \"#utility.yul\":10357:10373   */\n      swap1\n      pop\n        /* \"#utility.yul\":10074:10379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10385:10481   */\n    tag_140:\n        /* \"#utility.yul\":10422:10429   */\n      0x00\n        /* \"#utility.yul\":10451:10475   */\n      tag_227\n        /* \"#utility.yul\":10469:10474   */\n      dup3\n        /* \"#utility.yul\":10451:10475   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10440:10475   */\n      swap1\n      pop\n        /* \"#utility.yul\":10385:10481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10487:10577   */\n    tag_147:\n        /* \"#utility.yul\":10521:10528   */\n      0x00\n        /* \"#utility.yul\":10564:10569   */\n      dup2\n        /* \"#utility.yul\":10557:10570   */\n      iszero\n        /* \"#utility.yul\":10550:10571   */\n      iszero\n        /* \"#utility.yul\":10539:10571   */\n      swap1\n      pop\n        /* \"#utility.yul\":10487:10577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10583:10709   */\n    tag_228:\n        /* \"#utility.yul\":10620:10627   */\n      0x00\n        /* \"#utility.yul\":10660:10702   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10653:10658   */\n      dup3\n        /* \"#utility.yul\":10649:10703   */\n      and\n        /* \"#utility.yul\":10638:10703   */\n      swap1\n      pop\n        /* \"#utility.yul\":10583:10709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10715:10792   */\n    tag_188:\n        /* \"#utility.yul\":10752:10759   */\n      0x00\n        /* \"#utility.yul\":10781:10786   */\n      dup2\n        /* \"#utility.yul\":10770:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10715:10792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10798:10978   */\n    tag_225:\n        /* \"#utility.yul\":10846:10923   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10843:10844   */\n      0x00\n        /* \"#utility.yul\":10836:10924   */\n      mstore\n        /* \"#utility.yul\":10943:10947   */\n      0x11\n        /* \"#utility.yul\":10940:10941   */\n      0x04\n        /* \"#utility.yul\":10933:10948   */\n      mstore\n        /* \"#utility.yul\":10967:10971   */\n      0x24\n        /* \"#utility.yul\":10964:10965   */\n      0x00\n        /* \"#utility.yul\":10957:10972   */\n      revert\n        /* \"#utility.yul\":11107:11224   */\n    tag_123:\n        /* \"#utility.yul\":11216:11217   */\n      0x00\n        /* \"#utility.yul\":11213:11214   */\n      dup1\n        /* \"#utility.yul\":11206:11218   */\n      revert\n        /* \"#utility.yul\":11230:11409   */\n    tag_153:\n        /* \"#utility.yul\":11370:11401   */\n      0x43616c6c2057696c6c204272656368204d6178696d756d205374616b65000000\n        /* \"#utility.yul\":11366:11367   */\n      0x00\n        /* \"#utility.yul\":11358:11364   */\n      dup3\n        /* \"#utility.yul\":11354:11368   */\n      add\n        /* \"#utility.yul\":11347:11402   */\n      mstore\n        /* \"#utility.yul\":11230:11409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11415:11640   */\n    tag_158:\n        /* \"#utility.yul\":11555:11589   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11551:11552   */\n      0x00\n        /* \"#utility.yul\":11543:11549   */\n      dup3\n        /* \"#utility.yul\":11539:11553   */\n      add\n        /* \"#utility.yul\":11532:11590   */\n      mstore\n        /* \"#utility.yul\":11624:11632   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11619:11621   */\n      0x20\n        /* \"#utility.yul\":11611:11617   */\n      dup3\n        /* \"#utility.yul\":11607:11622   */\n      add\n        /* \"#utility.yul\":11600:11633   */\n      mstore\n        /* \"#utility.yul\":11415:11640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11646:11811   */\n    tag_163:\n        /* \"#utility.yul\":11786:11803   */\n      0x496e76616c69642042616c616e63650000000000000000000000000000000000\n        /* \"#utility.yul\":11782:11783   */\n      0x00\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11770:11784   */\n      add\n        /* \"#utility.yul\":11763:11804   */\n      mstore\n        /* \"#utility.yul\":11646:11811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11817:11989   */\n    tag_168:\n        /* \"#utility.yul\":11957:11981   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":11953:11954   */\n      0x00\n        /* \"#utility.yul\":11945:11951   */\n      dup3\n        /* \"#utility.yul\":11941:11955   */\n      add\n        /* \"#utility.yul\":11934:11982   */\n      mstore\n        /* \"#utility.yul\":11817:11989   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11995:12170   */\n    tag_173:\n        /* \"#utility.yul\":12135:12162   */\n      0x4d696e696d756d205374616b65204e6f74205265616368656400000000000000\n        /* \"#utility.yul\":12131:12132   */\n      0x00\n        /* \"#utility.yul\":12123:12129   */\n      dup3\n        /* \"#utility.yul\":12119:12133   */\n      add\n        /* \"#utility.yul\":12112:12163   */\n      mstore\n        /* \"#utility.yul\":11995:12170   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12176:12358   */\n    tag_178:\n        /* \"#utility.yul\":12316:12350   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12312:12313   */\n      0x00\n        /* \"#utility.yul\":12304:12310   */\n      dup3\n        /* \"#utility.yul\":12300:12314   */\n      add\n        /* \"#utility.yul\":12293:12351   */\n      mstore\n        /* \"#utility.yul\":12176:12358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12364:12486   */\n    tag_108:\n        /* \"#utility.yul\":12437:12461   */\n      tag_243\n        /* \"#utility.yul\":12455:12460   */\n      dup2\n        /* \"#utility.yul\":12437:12461   */\n      tag_140\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":12430:12435   */\n      dup2\n        /* \"#utility.yul\":12427:12462   */\n      eq\n        /* \"#utility.yul\":12417:12480   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":12476:12477   */\n      0x00\n        /* \"#utility.yul\":12473:12474   */\n      dup1\n        /* \"#utility.yul\":12466:12478   */\n      revert\n        /* \"#utility.yul\":12417:12480   */\n    tag_244:\n        /* \"#utility.yul\":12364:12486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12492:12608   */\n    tag_112:\n        /* \"#utility.yul\":12562:12583   */\n      tag_246\n        /* \"#utility.yul\":12577:12582   */\n      dup2\n        /* \"#utility.yul\":12562:12583   */\n      tag_147\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":12555:12560   */\n      dup2\n        /* \"#utility.yul\":12552:12584   */\n      eq\n        /* \"#utility.yul\":12542:12602   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":12598:12599   */\n      0x00\n        /* \"#utility.yul\":12595:12596   */\n      dup1\n        /* \"#utility.yul\":12588:12600   */\n      revert\n        /* \"#utility.yul\":12542:12602   */\n    tag_247:\n        /* \"#utility.yul\":12492:12608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12614:12736   */\n    tag_116:\n        /* \"#utility.yul\":12687:12711   */\n      tag_249\n        /* \"#utility.yul\":12705:12710   */\n      dup2\n        /* \"#utility.yul\":12687:12711   */\n      tag_188\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":12680:12685   */\n      dup2\n        /* \"#utility.yul\":12677:12712   */\n      eq\n        /* \"#utility.yul\":12667:12730   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":12726:12727   */\n      0x00\n        /* \"#utility.yul\":12723:12724   */\n      dup1\n        /* \"#utility.yul\":12716:12728   */\n      revert\n        /* \"#utility.yul\":12667:12730   */\n    tag_250:\n        /* \"#utility.yul\":12614:12736   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c27903887fb8143c1766798ccac4f9fce27805c337427c211695063a1e5c2b5c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f978061012d6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100625780638da5cb5b14610079578063ad95b1c6146100a4578063da917aea146100cd578063db568922146100f8578063f2fde38b1461012157610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b005b34801561008557600080fd5b5061008e6101d2565b60405161009b9190610bab565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c691906109df565b6101fb565b005b3480156100d957600080fd5b506100e261069a565b6040516100ef9190610c42565b60405180910390f35b34801561010457600080fd5b5061011f600480360381019061011a9190610985565b6106ad565b005b34801561012d57600080fd5b5061014860048036038101906101439190610985565b61076d565b005b610152610865565b73ffffffffffffffffffffffffffffffffffffffff166101706101d2565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd90610cfd565b60405180910390fd5b6101d0600061086d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610cbd565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102a09190610d2e565b10156102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d890610c5d565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103359190610d2e565b1115610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d90610cdd565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103d29190610bab565b60206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190610a0c565b1015610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90610c9d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104c293929190610bc6565b602060405180830381600087803b1580156104dc57600080fd5b505af11580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051491906109b2565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105649190610d2e565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546105bb9190610d2e565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba63360016002546106629190610d2e565b83426040516106749493929190610bfd565b60405180910390a160016002600082825461068f9190610d2e565b925050819055505050565b600360009054906101000a900460ff1681565b6106b5610865565b73ffffffffffffffffffffffffffffffffffffffff166106d36101d2565b73ffffffffffffffffffffffffffffffffffffffff1614610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610cfd565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610775610865565b73ffffffffffffffffffffffffffffffffffffffff166107936101d2565b73ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090610cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610c7d565b60405180910390fd5b6108628161086d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061094081610f1c565b92915050565b60008151905061095581610f33565b92915050565b60008135905061096a81610f4a565b92915050565b60008151905061097f81610f4a565b92915050565b60006020828403121561099b5761099a610dfb565b5b60006109a984828501610931565b91505092915050565b6000602082840312156109c8576109c7610dfb565b5b60006109d684828501610946565b91505092915050565b6000602082840312156109f5576109f4610dfb565b5b6000610a038482850161095b565b91505092915050565b600060208284031215610a2257610a21610dfb565b5b6000610a3084828501610970565b91505092915050565b610a4281610d84565b82525050565b610a5181610d84565b82525050565b610a6081610d96565b82525050565b6000610a73601d83610d1d565b9150610a7e82610e00565b602082019050919050565b6000610a96602683610d1d565b9150610aa182610e29565b604082019050919050565b6000610ab9600f83610d1d565b9150610ac482610e78565b602082019050919050565b6000610adc601683610d1d565b9150610ae782610ea1565b602082019050919050565b6000610aff601983610d1d565b9150610b0a82610eca565b602082019050919050565b6000610b22602083610d1d565b9150610b2d82610ef3565b602082019050919050565b608082016000820151610b4e6000850182610a39565b506020820151610b616020850182610b8d565b506040820151610b746040850182610b8d565b506060820151610b876060850182610b8d565b50505050565b610b9681610dc2565b82525050565b610ba581610dc2565b82525050565b6000602082019050610bc06000830184610a48565b92915050565b6000606082019050610bdb6000830186610a48565b610be86020830185610a48565b610bf56040830184610b9c565b949350505050565b600060e082019050610c126000830187610a48565b610c1f6020830186610b9c565b610c2c6040830185610b38565b610c3960c0830184610b9c565b95945050505050565b6000602082019050610c576000830184610a57565b92915050565b60006020820190508181036000830152610c7681610a66565b9050919050565b60006020820190508181036000830152610c9681610a89565b9050919050565b60006020820190508181036000830152610cb681610aac565b9050919050565b60006020820190508181036000830152610cd681610acf565b9050919050565b60006020820190508181036000830152610cf681610af2565b9050919050565b60006020820190508181036000830152610d1681610b15565b9050919050565b600082825260208201905092915050565b6000610d3982610dc2565b9150610d4483610dc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7957610d78610dcc565b5b828201905092915050565b6000610d8f82610da2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f43616c6c2057696c6c204272656368204d6178696d756d205374616b65000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4d696e696d756d205374616b65204e6f74205265616368656400000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f2581610d84565b8114610f3057600080fd5b50565b610f3c81610d96565b8114610f4757600080fd5b50565b610f5381610dc2565b8114610f5e57600080fd5b5056fea2646970667358221220c27903887fb8143c1766798ccac4f9fce27805c337427c211695063a1e5c2b5c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF97 DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x121 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x170 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D0 PUSH1 0x0 PUSH2 0x86D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241 SWAP1 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST GT ISZERO PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x674 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x68F SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D3 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x775 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x793 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x850 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x862 DUP2 PUSH2 0x86D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x940 DUP2 PUSH2 0xF1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x955 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96A DUP2 PUSH2 0xF4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x97F DUP2 PUSH2 0xF4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH2 0x99A PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP5 DUP3 DUP6 ADD PUSH2 0x931 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D6 DUP5 DUP3 DUP6 ADD PUSH2 0x946 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA03 DUP5 DUP3 DUP6 ADD PUSH2 0x95B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA30 DUP5 DUP3 DUP6 ADD PUSH2 0x970 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA42 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xD96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH1 0x1D DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 PUSH1 0x26 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP3 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH1 0xF DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC PUSH1 0x16 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAE7 DUP3 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x19 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x20 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB4E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB61 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xB74 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB87 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBA5 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBDB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xBE8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xC12 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xC1F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xC2C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xC39 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC76 DUP2 PUSH2 0xA66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC96 DUP2 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB6 DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD6 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCF6 DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD16 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0xDC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD44 DUP4 PUSH2 0xDC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD78 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8F DUP3 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616C6C2057696C6C204272656368204D6178696D756D205374616B65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D205374616B65204E6F74205265616368656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF25 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP2 EQ PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xD96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF53 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP2 EQ PUSH2 0xF5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH26 0x3887FB8143C1766798CCAC4F9FCE27805C337427C211695063A 0x1E 0x5C 0x2B 0x5C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:3692:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:3692;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:3692:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:3692:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetStakingToken_227": {
									"entryPoint": 1709,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_338": {
									"entryPoint": 507,
									"id": 338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 1690,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 2149,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 2157,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 466,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 330,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1901,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 3745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12739:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2039:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2062:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2044:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2010:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2017:3:3",
														"type": ""
													}
												],
												"src": "1967:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2146:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2163:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2186:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2168:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2168:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2134:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2141:3:3",
														"type": ""
													}
												],
												"src": "2081:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2301:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2286:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2252:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2259:3:3",
														"type": ""
													}
												],
												"src": "2205:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2547:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2648:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403",
																	"nodeType": "YulIdentifier",
																	"src": "2559:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2661:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2672:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2454:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2462:3:3",
														"type": ""
													}
												],
												"src": "2320:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2848:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2914:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2855:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2931:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2826:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2834:3:3",
														"type": ""
													}
												],
												"src": "2692:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3286:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3227:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3392:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																	"nodeType": "YulIdentifier",
																	"src": "3303:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3405:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3206:3:3",
														"type": ""
													}
												],
												"src": "3064:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3599:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3592:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3764:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "3675:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3788:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3570:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3578:3:3",
														"type": ""
													}
												],
												"src": "3436:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3964:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4030:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3971:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3964:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4136:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b",
																	"nodeType": "YulIdentifier",
																	"src": "4047:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3942:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3950:3:3",
														"type": ""
													}
												],
												"src": "3808:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4326:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4402:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4343:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4419:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4314:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4180:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:754:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4740:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4744:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4776:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4812:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4842:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4849:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4832:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4816:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4902:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4925:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4868:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4868:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4868:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4951:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4988:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5018:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5025:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5014:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5008:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5008:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4992:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5078:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5096:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5101:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5092:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5092:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5044:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5044:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5127:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5167:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5197:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5204:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5193:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5193:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5187:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5187:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5171:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5257:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5275:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5280:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5271:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5271:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5223:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5223:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5306:171:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5348:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5378:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5385:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5374:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5374:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5368:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5352:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5438:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5456:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5461:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5452:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5404:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5404:63:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4717:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4724:3:3",
														"type": ""
													}
												],
												"src": "4620:864:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5545:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5585:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5567:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5555:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5555:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5533:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5540:3:3",
														"type": ""
													}
												],
												"src": "5490:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5669:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5686:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5709:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5691:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5657:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5664:3:3",
														"type": ""
													}
												],
												"src": "5604:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5826:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5836:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5848:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5836:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5916:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5929:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5940:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5872:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5872:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5872:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5798:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5810:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5821:4:3",
														"type": ""
													}
												],
												"src": "5728:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6110:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6120:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6132:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6143:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6120:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6200:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6213:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6224:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6209:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6156:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6294:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6305:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6290:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6290:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6237:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6237:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6363:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6376:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6387:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6319:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6319:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6066:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6078:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6086:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6094:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6105:4:3",
														"type": ""
													}
												],
												"src": "5956:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6630:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6640:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6652:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6663:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6648:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6640:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6721:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6734:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6745:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6730:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6730:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6677:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6677:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6802:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6815:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6826:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6811:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6811:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6758:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6928:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6952:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6937:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6937:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6840:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6840:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6840:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7010:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6966:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6966:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6578:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6590:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6598:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6606:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6614:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6625:4:3",
														"type": ""
													}
												],
												"src": "6404:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7144:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7154:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7162:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7162:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7154:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7228:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7237:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7190:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7190:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7190:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7116:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7128:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7139:4:3",
														"type": ""
													}
												],
												"src": "7052:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7439:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7449:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7461:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7472:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7449:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7496:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7507:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7492:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7492:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7515:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7521:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7511:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7485:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7485:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7541:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7675:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7541:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7419:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7434:4:3",
														"type": ""
													}
												],
												"src": "7268:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7864:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7874:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7886:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7874:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7921:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7932:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7917:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7917:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7940:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7946:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7936:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7936:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7910:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7910:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7910:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7966:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8100:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7974:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7974:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7966:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7844:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7859:4:3",
														"type": ""
													}
												],
												"src": "7693:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8299:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8311:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8307:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8299:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8346:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8357:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8365:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8361:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8361:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8391:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8399:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8391:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8269:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8284:4:3",
														"type": ""
													}
												],
												"src": "8118:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8724:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8736:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8747:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8732:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8732:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8724:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8771:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8782:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8767:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8790:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8796:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8760:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8760:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8760:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8816:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8950:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8824:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8824:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8816:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8694:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8709:4:3",
														"type": ""
													}
												],
												"src": "8543:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9139:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9149:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9161:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9172:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9157:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9149:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9196:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9207:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9192:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9192:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9215:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9221:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9211:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9185:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9185:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9375:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9249:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9119:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9134:4:3",
														"type": ""
													}
												],
												"src": "8968:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9564:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9574:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9586:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9597:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9574:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9621:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9632:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9617:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9617:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9640:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9646:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9636:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9610:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9666:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9800:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9674:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9666:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9544:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9559:4:3",
														"type": ""
													}
												],
												"src": "9393:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9858:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9868:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9884:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9878:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9868:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9851:6:3",
														"type": ""
													}
												],
												"src": "9818:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9995:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10012:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10017:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10005:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10033:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10052:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10057:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10033:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9967:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9972:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9983:11:3",
														"type": ""
													}
												],
												"src": "9899:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10118:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10151:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10133:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10128:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10162:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10185:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10167:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10167:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10162:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10325:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10327:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10327:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10327:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10246:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10253:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10321:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10249:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10243:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:81:3"
															},
															"nodeType": "YulIf",
															"src": "10240:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10357:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10368:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10371:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10364:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10364:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10357:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10105:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10108:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10114:3:3",
														"type": ""
													}
												],
												"src": "10074:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10430:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10440:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10469:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10451:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10451:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10440:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10412:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10422:7:3",
														"type": ""
													}
												],
												"src": "10385:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10529:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10539:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10564:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10557:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10557:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10550:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10539:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10511:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10521:7:3",
														"type": ""
													}
												],
												"src": "10487:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10628:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10638:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10653:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10660:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10649:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10638:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10610:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10620:7:3",
														"type": ""
													}
												],
												"src": "10583:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10760:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10770:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10781:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10770:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10742:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10752:7:3",
														"type": ""
													}
												],
												"src": "10715:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10826:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10843:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10846:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10836:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10836:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10836:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10943:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10933:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10933:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10964:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10967:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10957:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10957:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10798:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11073:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11093:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11083:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10984:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11213:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11216:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11107:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11336:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11358:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11366:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11354:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11354:14:3"
																	},
																	{
																		"hexValue": "43616c6c2057696c6c204272656368204d6178696d756d205374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11370:31:3",
																		"type": "",
																		"value": "Call Will Brech Maximum Stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11347:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11347:55:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11347:55:3"
														}
													]
												},
												"name": "store_literal_in_memory_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11328:6:3",
														"type": ""
													}
												],
												"src": "11230:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11521:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11543:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11551:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11539:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11539:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11555:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11532:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11532:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11532:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11611:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11619:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11607:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11607:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11624:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11600:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11600:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11513:6:3",
														"type": ""
													}
												],
												"src": "11415:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11752:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11782:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:14:3"
																	},
																	{
																		"hexValue": "496e76616c69642042616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11786:17:3",
																		"type": "",
																		"value": "Invalid Balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11744:6:3",
														"type": ""
													}
												],
												"src": "11646:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11923:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11945:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11953:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11941:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11957:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11934:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11934:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11934:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11915:6:3",
														"type": ""
													}
												],
												"src": "11817:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12101:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12123:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12131:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12119:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12119:14:3"
																	},
																	{
																		"hexValue": "4d696e696d756d205374616b65204e6f742052656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12135:27:3",
																		"type": "",
																		"value": "Minimum Stake Not Reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12112:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12112:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12112:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12093:6:3",
														"type": ""
													}
												],
												"src": "11995:175:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12282:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12304:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12312:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12300:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12300:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12316:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12293:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12293:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12293:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12274:6:3",
														"type": ""
													}
												],
												"src": "12176:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12407:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12464:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12473:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12476:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12466:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12466:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12466:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12430:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12455:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12437:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12437:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12427:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12427:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:43:3"
															},
															"nodeType": "YulIf",
															"src": "12417:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12400:5:3",
														"type": ""
													}
												],
												"src": "12364:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12532:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12586:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12595:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12598:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12588:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12588:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12588:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12555:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12577:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12562:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12562:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12552:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12552:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12545:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12545:40:3"
															},
															"nodeType": "YulIf",
															"src": "12542:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12525:5:3",
														"type": ""
													}
												],
												"src": "12492:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12657:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12714:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12723:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12726:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12716:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12716:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12716:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12680:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12705:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12687:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12687:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12677:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12677:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12670:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12670:43:3"
															},
															"nodeType": "YulIf",
															"src": "12667:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12650:5:3",
														"type": ""
													}
												],
												"src": "12614:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // StakeTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // UnstakeTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403(memPtr) {\n\n        mstore(add(memPtr, 0), \"Call Will Brech Maximum Stake\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Balance\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum Stake Not Reached\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c8063715018a6146100625780638da5cb5b14610079578063ad95b1c6146100a4578063da917aea146100cd578063db568922146100f8578063f2fde38b1461012157610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b005b34801561008557600080fd5b5061008e6101d2565b60405161009b9190610bab565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c691906109df565b6101fb565b005b3480156100d957600080fd5b506100e261069a565b6040516100ef9190610c42565b60405180910390f35b34801561010457600080fd5b5061011f600480360381019061011a9190610985565b6106ad565b005b34801561012d57600080fd5b5061014860048036038101906101439190610985565b61076d565b005b610152610865565b73ffffffffffffffffffffffffffffffffffffffff166101706101d2565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd90610cfd565b60405180910390fd5b6101d0600061086d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff1661024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610cbd565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102a09190610d2e565b10156102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d890610c5d565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103359190610d2e565b1115610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d90610cdd565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103d29190610bab565b60206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190610a0c565b1015610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90610c9d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104c293929190610bc6565b602060405180830381600087803b1580156104dc57600080fd5b505af11580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051491906109b2565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105649190610d2e565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815260200160008152509050806004600060016002546105bb9190610d2e565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050507f4893ba24a61962c26d899bdc2f219eb2486292d793493c0cc5be1d3bebe9bba63360016002546106629190610d2e565b83426040516106749493929190610bfd565b60405180910390a160016002600082825461068f9190610d2e565b925050819055505050565b600360009054906101000a900460ff1681565b6106b5610865565b73ffffffffffffffffffffffffffffffffffffffff166106d36101d2565b73ffffffffffffffffffffffffffffffffffffffff1614610729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072090610cfd565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610775610865565b73ffffffffffffffffffffffffffffffffffffffff166107936101d2565b73ffffffffffffffffffffffffffffffffffffffff16146107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090610cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610c7d565b60405180910390fd5b6108628161086d565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061094081610f1c565b92915050565b60008151905061095581610f33565b92915050565b60008135905061096a81610f4a565b92915050565b60008151905061097f81610f4a565b92915050565b60006020828403121561099b5761099a610dfb565b5b60006109a984828501610931565b91505092915050565b6000602082840312156109c8576109c7610dfb565b5b60006109d684828501610946565b91505092915050565b6000602082840312156109f5576109f4610dfb565b5b6000610a038482850161095b565b91505092915050565b600060208284031215610a2257610a21610dfb565b5b6000610a3084828501610970565b91505092915050565b610a4281610d84565b82525050565b610a5181610d84565b82525050565b610a6081610d96565b82525050565b6000610a73601d83610d1d565b9150610a7e82610e00565b602082019050919050565b6000610a96602683610d1d565b9150610aa182610e29565b604082019050919050565b6000610ab9600f83610d1d565b9150610ac482610e78565b602082019050919050565b6000610adc601683610d1d565b9150610ae782610ea1565b602082019050919050565b6000610aff601983610d1d565b9150610b0a82610eca565b602082019050919050565b6000610b22602083610d1d565b9150610b2d82610ef3565b602082019050919050565b608082016000820151610b4e6000850182610a39565b506020820151610b616020850182610b8d565b506040820151610b746040850182610b8d565b506060820151610b876060850182610b8d565b50505050565b610b9681610dc2565b82525050565b610ba581610dc2565b82525050565b6000602082019050610bc06000830184610a48565b92915050565b6000606082019050610bdb6000830186610a48565b610be86020830185610a48565b610bf56040830184610b9c565b949350505050565b600060e082019050610c126000830187610a48565b610c1f6020830186610b9c565b610c2c6040830185610b38565b610c3960c0830184610b9c565b95945050505050565b6000602082019050610c576000830184610a57565b92915050565b60006020820190508181036000830152610c7681610a66565b9050919050565b60006020820190508181036000830152610c9681610a89565b9050919050565b60006020820190508181036000830152610cb681610aac565b9050919050565b60006020820190508181036000830152610cd681610acf565b9050919050565b60006020820190508181036000830152610cf681610af2565b9050919050565b60006020820190508181036000830152610d1681610b15565b9050919050565b600082825260208201905092915050565b6000610d3982610dc2565b9150610d4483610dc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7957610d78610dcc565b5b828201905092915050565b6000610d8f82610da2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f43616c6c2057696c6c204272656368204d6178696d756d205374616b65000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c69642042616c616e63650000000000000000000000000000000000600082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4d696e696d756d205374616b65204e6f74205265616368656400000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f2581610d84565b8114610f3057600080fd5b50565b610f3c81610d96565b8114610f4757600080fd5b50565b610f5381610dc2565b8114610f5e57600080fd5b5056fea2646970667358221220c27903887fb8143c1766798ccac4f9fce27805c337427c211695063a1e5c2b5c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x121 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x14A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x170 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D0 PUSH1 0x0 PUSH2 0x86D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241 SWAP1 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST GT ISZERO PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0xA0C JUMP JUMPDEST LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x674 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x68F SWAP2 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D3 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x775 PUSH2 0x865 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x793 PUSH2 0x1D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x850 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x862 DUP2 PUSH2 0x86D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x940 DUP2 PUSH2 0xF1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x955 DUP2 PUSH2 0xF33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x96A DUP2 PUSH2 0xF4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x97F DUP2 PUSH2 0xF4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99B JUMPI PUSH2 0x99A PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP5 DUP3 DUP6 ADD PUSH2 0x931 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C8 JUMPI PUSH2 0x9C7 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9D6 DUP5 DUP3 DUP6 ADD PUSH2 0x946 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA03 DUP5 DUP3 DUP6 ADD PUSH2 0x95B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA30 DUP5 DUP3 DUP6 ADD PUSH2 0x970 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA42 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA51 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA60 DUP2 PUSH2 0xD96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA73 PUSH1 0x1D DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E DUP3 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA96 PUSH1 0x26 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAA1 DUP3 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH1 0xF DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAC4 DUP3 PUSH2 0xE78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC PUSH1 0x16 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAE7 DUP3 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFF PUSH1 0x19 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xB0A DUP3 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB22 PUSH1 0x20 DUP4 PUSH2 0xD1D JUMP JUMPDEST SWAP2 POP PUSH2 0xB2D DUP3 PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xB4E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xA39 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xB61 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xB74 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB87 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xB8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xBA5 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBDB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xBE8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xC12 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xA48 JUMP JUMPDEST PUSH2 0xC1F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0xC2C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB38 JUMP JUMPDEST PUSH2 0xC39 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC57 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC76 DUP2 PUSH2 0xA66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC96 DUP2 PUSH2 0xA89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB6 DUP2 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD6 DUP2 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCF6 DUP2 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD16 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0xDC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD44 DUP4 PUSH2 0xDC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD78 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8F DUP3 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616C6C2057696C6C204272656368204D6178696D756D205374616B65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642042616C616E63650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D205374616B65204E6F74205265616368656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF25 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP2 EQ PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF3C DUP2 PUSH2 0xD96 JUMP JUMPDEST DUP2 EQ PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF53 DUP2 PUSH2 0xDC2 JUMP JUMPDEST DUP2 EQ PUSH2 0xF5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH26 0x3887FB8143C1766798CCAC4F9FCE27805C337427C211695063A 0x1E 0x5C 0x2B 0x5C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:3692:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1343:844:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1343:844:2:-;1460:14;;;;;;;;;;;1452:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1559:14;1549:6;1519:15;:27;1535:10;1519:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1511:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;1687:9;1677:6;1647:15;:27;1663:10;1647:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1639:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:6;1767:12;;;;;;;;;;;1761:29;;;1791:10;1761:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1752:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1849:12;;;;;;;;;;;1843:32;;;1876:10;1896:4;1903:6;1843:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1951:6;1920:15;:27;1936:10;1920:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1967:21;1991:44;;;;;;;;1997:10;1991:44;;;;;;2008:6;1991:44;;;;2016:15;1991:44;;;;2033:1;1991:44;;;1967:68;;2075:8;2045:14;:27;2070:1;2060:9;;:11;;;;:::i;:::-;2045:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:60;2107:10;2129:1;2119:9;;:11;;;;:::i;:::-;2132:8;2142:15;2098:60;;;;;;;;;:::i;:::-;;;;;;;;2179:1;2168:9;;:12;;;;;;;:::i;:::-;;;;;;;;1386:801;1343:844;:::o;491:34::-;;;;;;;;;;;;;:::o;1237:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:6:2::1;1305:12;;:21;;;;;;;;;;;;;;;;;;1237:96:::0;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:108::-;2044:24;2062:5;2044:24;:::i;:::-;2039:3;2032:37;1967:108;;:::o;2081:118::-;2168:24;2186:5;2168:24;:::i;:::-;2163:3;2156:37;2081:118;;:::o;2205:109::-;2286:21;2301:5;2286:21;:::i;:::-;2281:3;2274:34;2205:109;;:::o;2320:366::-;2462:3;2483:67;2547:2;2542:3;2483:67;:::i;:::-;2476:74;;2559:93;2648:3;2559:93;:::i;:::-;2677:2;2672:3;2668:12;2661:19;;2320:366;;;:::o;2692:::-;2834:3;2855:67;2919:2;2914:3;2855:67;:::i;:::-;2848:74;;2931:93;3020:3;2931:93;:::i;:::-;3049:2;3044:3;3040:12;3033:19;;2692:366;;;:::o;3064:::-;3206:3;3227:67;3291:2;3286:3;3227:67;:::i;:::-;3220:74;;3303:93;3392:3;3303:93;:::i;:::-;3421:2;3416:3;3412:12;3405:19;;3064:366;;;:::o;3436:::-;3578:3;3599:67;3663:2;3658:3;3599:67;:::i;:::-;3592:74;;3675:93;3764:3;3675:93;:::i;:::-;3793:2;3788:3;3784:12;3777:19;;3436:366;;;:::o;3808:::-;3950:3;3971:67;4035:2;4030:3;3971:67;:::i;:::-;3964:74;;4047:93;4136:3;4047:93;:::i;:::-;4165:2;4160:3;4156:12;4149:19;;3808:366;;;:::o;4180:::-;4322:3;4343:67;4407:2;4402:3;4343:67;:::i;:::-;4336:74;;4419:93;4508:3;4419:93;:::i;:::-;4537:2;4532:3;4528:12;4521:19;;4180:366;;;:::o;4620:864::-;4761:4;4756:3;4752:14;4849:4;4842:5;4838:16;4832:23;4868:63;4925:4;4920:3;4916:14;4902:12;4868:63;:::i;:::-;4776:165;5025:4;5018:5;5014:16;5008:23;5044:63;5101:4;5096:3;5092:14;5078:12;5044:63;:::i;:::-;4951:166;5204:4;5197:5;5193:16;5187:23;5223:63;5280:4;5275:3;5271:14;5257:12;5223:63;:::i;:::-;5127:169;5385:4;5378:5;5374:16;5368:23;5404:63;5461:4;5456:3;5452:14;5438:12;5404:63;:::i;:::-;5306:171;4730:754;4620:864;;:::o;5490:108::-;5567:24;5585:5;5567:24;:::i;:::-;5562:3;5555:37;5490:108;;:::o;5604:118::-;5691:24;5709:5;5691:24;:::i;:::-;5686:3;5679:37;5604:118;;:::o;5728:222::-;5821:4;5859:2;5848:9;5844:18;5836:26;;5872:71;5940:1;5929:9;5925:17;5916:6;5872:71;:::i;:::-;5728:222;;;;:::o;5956:442::-;6105:4;6143:2;6132:9;6128:18;6120:26;;6156:71;6224:1;6213:9;6209:17;6200:6;6156:71;:::i;:::-;6237:72;6305:2;6294:9;6290:18;6281:6;6237:72;:::i;:::-;6319;6387:2;6376:9;6372:18;6363:6;6319:72;:::i;:::-;5956:442;;;;;;:::o;6404:642::-;6625:4;6663:3;6652:9;6648:19;6640:27;;6677:71;6745:1;6734:9;6730:17;6721:6;6677:71;:::i;:::-;6758:72;6826:2;6815:9;6811:18;6802:6;6758:72;:::i;:::-;6840:116;6952:2;6941:9;6937:18;6928:6;6840:116;:::i;:::-;6966:73;7034:3;7023:9;7019:19;7010:6;6966:73;:::i;:::-;6404:642;;;;;;;:::o;7052:210::-;7139:4;7177:2;7166:9;7162:18;7154:26;;7190:65;7252:1;7241:9;7237:17;7228:6;7190:65;:::i;:::-;7052:210;;;;:::o;7268:419::-;7434:4;7472:2;7461:9;7457:18;7449:26;;7521:9;7515:4;7511:20;7507:1;7496:9;7492:17;7485:47;7549:131;7675:4;7549:131;:::i;:::-;7541:139;;7268:419;;;:::o;7693:::-;7859:4;7897:2;7886:9;7882:18;7874:26;;7946:9;7940:4;7936:20;7932:1;7921:9;7917:17;7910:47;7974:131;8100:4;7974:131;:::i;:::-;7966:139;;7693:419;;;:::o;8118:::-;8284:4;8322:2;8311:9;8307:18;8299:26;;8371:9;8365:4;8361:20;8357:1;8346:9;8342:17;8335:47;8399:131;8525:4;8399:131;:::i;:::-;8391:139;;8118:419;;;:::o;8543:::-;8709:4;8747:2;8736:9;8732:18;8724:26;;8796:9;8790:4;8786:20;8782:1;8771:9;8767:17;8760:47;8824:131;8950:4;8824:131;:::i;:::-;8816:139;;8543:419;;;:::o;8968:::-;9134:4;9172:2;9161:9;9157:18;9149:26;;9221:9;9215:4;9211:20;9207:1;9196:9;9192:17;9185:47;9249:131;9375:4;9249:131;:::i;:::-;9241:139;;8968:419;;;:::o;9393:::-;9559:4;9597:2;9586:9;9582:18;9574:26;;9646:9;9640:4;9636:20;9632:1;9621:9;9617:17;9610:47;9674:131;9800:4;9674:131;:::i;:::-;9666:139;;9393:419;;;:::o;9899:169::-;9983:11;10017:6;10012:3;10005:19;10057:4;10052:3;10048:14;10033:29;;9899:169;;;;:::o;10074:305::-;10114:3;10133:20;10151:1;10133:20;:::i;:::-;10128:25;;10167:20;10185:1;10167:20;:::i;:::-;10162:25;;10321:1;10253:66;10249:74;10246:1;10243:81;10240:107;;;10327:18;;:::i;:::-;10240:107;10371:1;10368;10364:9;10357:16;;10074:305;;;;:::o;10385:96::-;10422:7;10451:24;10469:5;10451:24;:::i;:::-;10440:35;;10385:96;;;:::o;10487:90::-;10521:7;10564:5;10557:13;10550:21;10539:32;;10487:90;;;:::o;10583:126::-;10620:7;10660:42;10653:5;10649:54;10638:65;;10583:126;;;:::o;10715:77::-;10752:7;10781:5;10770:16;;10715:77;;;:::o;10798:180::-;10846:77;10843:1;10836:88;10943:4;10940:1;10933:15;10967:4;10964:1;10957:15;11107:117;11216:1;11213;11206:12;11230:179;11370:31;11366:1;11358:6;11354:14;11347:55;11230:179;:::o;11415:225::-;11555:34;11551:1;11543:6;11539:14;11532:58;11624:8;11619:2;11611:6;11607:15;11600:33;11415:225;:::o;11646:165::-;11786:17;11782:1;11774:6;11770:14;11763:41;11646:165;:::o;11817:172::-;11957:24;11953:1;11945:6;11941:14;11934:48;11817:172;:::o;11995:175::-;12135:27;12131:1;12123:6;12119:14;12112:51;11995:175;:::o;12176:182::-;12316:34;12312:1;12304:6;12300:14;12293:58;12176:182;:::o;12364:122::-;12437:24;12455:5;12437:24;:::i;:::-;12430:5;12427:35;12417:63;;12476:1;12473;12466:12;12417:63;12364:122;:::o;12492:116::-;12562:21;12577:5;12562:21;:::i;:::-;12555:5;12552:32;12542:60;;12598:1;12595;12588:12;12542:60;12492:116;:::o;12614:122::-;12687:24;12705:5;12687:24;:::i;:::-;12680:5;12677:35;12667:63;;12726:1;12723;12716:12;12667:63;12614:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "798200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "195",
								"SetStakingToken(address)": "27028",
								"StakeToken(uint256)": "infinite",
								"StakingEnabled()": "2515",
								"owner()": "2522",
								"renounceOwnership()": "30352",
								"transferOwnership(address)": "30811"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4078,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c27903887fb8143c1766798ccac4f9fce27805c337427c211695063a1e5c2b5c64736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 4078,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1452,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1545,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1546,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1573,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1519,
											"end": 1573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1511,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1662,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1673,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1696,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1696,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1639,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1791,
											"end": 1801,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1761,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1812,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1812,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1752,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 1900,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1946,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2031,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2060,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "4893BA24A61962C26D899BDC2F219EB2486292D793493C0CC5BE1D3BEBE9BBA6"
										},
										{
											"begin": 2107,
											"end": 2117,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2157,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2158,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 2187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1333,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2062,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2044,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2186,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2168,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2199,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2301,
											"end": 2306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2547,
											"end": 2549,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2483,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2914,
											"end": 2917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2855,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2848,
											"end": 2922,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2931,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3291,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3303,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3064,
											"end": 3430,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3599,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3764,
											"end": 3767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3675,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3784,
											"end": 3796,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4030,
											"end": 4033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3971,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 4038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4136,
											"end": 4139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4047,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 4174,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4407,
											"end": 4409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4343,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4419,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4521,
											"end": 4540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4923,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4868,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5031,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5101,
											"end": 5105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5078,
											"end": 5090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5044,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 5117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5187,
											"end": 5210,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5275,
											"end": 5278,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5223,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5378,
											"end": 5383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5368,
											"end": 5391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5404,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4730,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4620,
											"end": 5484,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5585,
											"end": 5590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5567,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5598,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5686,
											"end": 5689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5604,
											"end": 5722,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5821,
											"end": 5825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5844,
											"end": 5862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5836,
											"end": 5862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5922,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5872,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5950,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6145,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6224,
											"end": 6225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6206,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6156,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6237,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6363,
											"end": 6369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6319,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5956,
											"end": 6398,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6666,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6677,
											"end": 6748,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6677,
											"end": 6748,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6677,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6826,
											"end": 6828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6815,
											"end": 6824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6758,
											"end": 6830,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6758,
											"end": 6830,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6758,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6952,
											"end": 6954,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6928,
											"end": 6934,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6840,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6840,
											"end": 6956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6840,
											"end": 6956,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6840,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7034,
											"end": 7037,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7010,
											"end": 7016,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6966,
											"end": 7039,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6966,
											"end": 7039,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6966,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 7046,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7166,
											"end": 7175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7162,
											"end": 7180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7180,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7190,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7190,
											"end": 7255,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7190,
											"end": 7255,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7190,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7052,
											"end": 7262,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7457,
											"end": 7475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7511,
											"end": 7531,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7507,
											"end": 7508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7509,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7532,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7675,
											"end": 7679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7549,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7549,
											"end": 7680,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7680,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7549,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7541,
											"end": 7680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7541,
											"end": 7680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7687,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7940,
											"end": 7944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7936,
											"end": 7956,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7930,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7910,
											"end": 7957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7974,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 8100,
											"end": 8104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7974,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 7974,
											"end": 8105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7974,
											"end": 8105,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7974,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 8105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 8105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 8112,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8324,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8307,
											"end": 8325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8299,
											"end": 8325,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8355,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8342,
											"end": 8359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8335,
											"end": 8382,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8399,
											"end": 8530,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8530,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8399,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8391,
											"end": 8530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8391,
											"end": 8530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8537,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8749,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8736,
											"end": 8745,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8732,
											"end": 8750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8724,
											"end": 8750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8724,
											"end": 8750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8796,
											"end": 8805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8806,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8782,
											"end": 8783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8767,
											"end": 8784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8760,
											"end": 8807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8824,
											"end": 8955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8824,
											"end": 8955,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8824,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9134,
											"end": 9138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9149,
											"end": 9175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9149,
											"end": 9175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9215,
											"end": 9219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9211,
											"end": 9231,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9207,
											"end": 9208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9192,
											"end": 9209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9185,
											"end": 9232,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9249,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9249,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 9249,
											"end": 9380,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9249,
											"end": 9380,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 9249,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9241,
											"end": 9380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9241,
											"end": 9380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8968,
											"end": 9387,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9582,
											"end": 9600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9634,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9674,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9800,
											"end": 9804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9674,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9674,
											"end": 9805,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9674,
											"end": 9805,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9674,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9666,
											"end": 9805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9666,
											"end": 9805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9812,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10012,
											"end": 10015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10005,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10061,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10033,
											"end": 10062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10033,
											"end": 10062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9899,
											"end": 10068,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10133,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10133,
											"end": 10153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10133,
											"end": 10153,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 10133,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10167,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10162,
											"end": 10187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10162,
											"end": 10187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10253,
											"end": 10319,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10249,
											"end": 10323,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10243,
											"end": 10324,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 10347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10240,
											"end": 10347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 10347,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 10240,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10371,
											"end": 10372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10364,
											"end": 10373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10074,
											"end": 10379,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10422,
											"end": 10429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 10469,
											"end": 10474,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 10451,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10440,
											"end": 10475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10440,
											"end": 10475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10385,
											"end": 10481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10528,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10564,
											"end": 10569,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10550,
											"end": 10571,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10577,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10620,
											"end": 10627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10702,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10653,
											"end": 10658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10649,
											"end": 10703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10583,
											"end": 10709,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 10759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 10786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 10786,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10792,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10798,
											"end": 10978,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10798,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10846,
											"end": 10923,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10943,
											"end": 10947,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 10940,
											"end": 10941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10933,
											"end": 10948,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10967,
											"end": 10971,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10964,
											"end": 10965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11107,
											"end": 11224,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 11107,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11216,
											"end": 11217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11213,
											"end": 11214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11409,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 11230,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11370,
											"end": 11401,
											"name": "PUSH",
											"source": 3,
											"value": "43616C6C2057696C6C204272656368204D6178696D756D205374616B65000000"
										},
										{
											"begin": 11366,
											"end": 11367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11358,
											"end": 11364,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11354,
											"end": 11368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11347,
											"end": 11402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11409,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11415,
											"end": 11640,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 11415,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11555,
											"end": 11589,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11549,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11532,
											"end": 11590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11624,
											"end": 11632,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11611,
											"end": 11617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11607,
											"end": 11622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11640,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11646,
											"end": 11811,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 11646,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11786,
											"end": 11803,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C69642042616C616E63650000000000000000000000000000000000"
										},
										{
											"begin": 11782,
											"end": 11783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11770,
											"end": 11784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11763,
											"end": 11804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11646,
											"end": 11811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11646,
											"end": 11811,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11817,
											"end": 11989,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 11817,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11957,
											"end": 11981,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 11953,
											"end": 11954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 11951,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11934,
											"end": 11982,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11817,
											"end": 11989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11817,
											"end": 11989,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11995,
											"end": 12170,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 11995,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12135,
											"end": 12162,
											"name": "PUSH",
											"source": 3,
											"value": "4D696E696D756D205374616B65204E6F74205265616368656400000000000000"
										},
										{
											"begin": 12131,
											"end": 12132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12123,
											"end": 12129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12119,
											"end": 12133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12112,
											"end": 12163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11995,
											"end": 12170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11995,
											"end": 12170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12176,
											"end": 12358,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 12176,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12316,
											"end": 12350,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12312,
											"end": 12313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12293,
											"end": 12351,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12176,
											"end": 12358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12176,
											"end": 12358,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12364,
											"end": 12486,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 12364,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 12455,
											"end": 12460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12430,
											"end": 12435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12427,
											"end": 12462,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12417,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 12417,
											"end": 12480,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12476,
											"end": 12477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12466,
											"end": 12478,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12417,
											"end": 12480,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 12417,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12364,
											"end": 12486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12364,
											"end": 12486,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12492,
											"end": 12608,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 12492,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12577,
											"end": 12582,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 12562,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12555,
											"end": 12560,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12552,
											"end": 12584,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12542,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12542,
											"end": 12602,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12598,
											"end": 12599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12596,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12588,
											"end": 12600,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12542,
											"end": 12602,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12542,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12492,
											"end": 12608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12492,
											"end": 12608,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12614,
											"end": 12736,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 12614,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12687,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 12705,
											"end": 12710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12687,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 12687,
											"end": 12711,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12687,
											"end": 12711,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 12687,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12680,
											"end": 12685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12677,
											"end": 12712,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12667,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 12667,
											"end": 12730,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12726,
											"end": 12727,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12723,
											"end": 12724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12716,
											"end": 12728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12667,
											"end": 12730,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 12667,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12614,
											"end": 12736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12614,
											"end": 12736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingEnabled()": "da917aea",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"UnstakeTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0xa00c1004ba1fde35008176e318f497f59b3e9c04b61b41b3affc52b390b08346\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5c22ee038f0efc99db61483d9c408061a476b693a3258bec066927a3d879366b\",\"dweb:/ipfs/QmNSLX6sHZtUSS7U1TYF84uQdDXMYsFgTqpHDkNLjNA13y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "StakeTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "UnstakeTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							339
						]
					},
					"id": 340,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 340,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 340,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "StakeTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "UnstakeTime",
											"nameLocation": "782:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "774:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "774:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 339,
									"src": "532:268:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "879:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "855:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "863:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "855:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "872:5:2"
											},
											"referencedDeclaration": 176,
											"src": "872:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "956:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "930:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "938:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "930:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "947:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1021:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1001:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:2"
									},
									"scope": 339,
									"src": "994:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1056:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:2"
									},
									"scope": 339,
									"src": "1028:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1083:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1100:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1092:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1116:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1108:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1126:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1120:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1120:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1120:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1141:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1133:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:60:2"
									},
									"src": "1077:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1163:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1179:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1171:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1195:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1187:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1205:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1199:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1199:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1220:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1212:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:60:2"
									},
									"src": "1157:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1295:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1305:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1320:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1305:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1305:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1285:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1246:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1270:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1262:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:0:2"
									},
									"scope": 339,
									"src": "1237:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1386:801:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1460:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1476:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1452:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1452:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1452:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 238,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1519:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 241,
																	"indexExpression": {
																		"expression": {
																			"id": 239,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1535:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1535:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1519:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 242,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1549:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1519:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1559:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1571:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1567:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1559:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1519:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c2057696c6c204272656368204d6178696d756d205374616b65",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1575:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403",
																"typeString": "literal_string \"Call Will Brech Maximum Stake\""
															},
															"value": "Call Will Brech Maximum Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15b71b238b4a31d48c192889671e68ae3e442874b872cb10206d39f35207f403",
																"typeString": "literal_string \"Call Will Brech Maximum Stake\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1511:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1511:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1511:96:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 254,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1647:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 257,
																	"indexExpression": {
																		"expression": {
																			"id": 255,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1663:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1663:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1647:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 258,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1677:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1647:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1690:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1694:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1690:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1687:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1647:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d205374616b65204e6f742052656163686564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b",
																"typeString": "literal_string \"Minimum Stake Not Reached\""
															},
															"value": "Minimum Stake Not Reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e5d824a71244881757a1eb75187e14ecfe313b6d0769a5a74303f7fa69e812b",
																"typeString": "literal_string \"Minimum Stake Not Reached\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1639:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 274,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1791:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1791:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 271,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1767:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 270,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1761:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1761:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1761:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 277,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "1806:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1761:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642042616c616e6365",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1814:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															},
															"value": "Invalid Balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_350c574e92ae439861493a5a5f4d5213ee7a026ae7fba512b00e2f4708d36b51",
																"typeString": "literal_string \"Invalid Balance\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1752:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:80:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1752:80:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1876:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1876:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 290,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1896:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$339",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$339",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1888:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1888:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1888:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "1903:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 283,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1849:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 282,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1843:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1843:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "1843:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1843:67:2"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 295,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1920:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 298,
														"indexExpression": {
															"expression": {
																"id": 296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1936:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1936:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1920:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 299,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "1951:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1920:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1920:37:2"
											},
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "1980:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "1967:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 303,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 302,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "1967:5:2"
															},
															"referencedDeclaration": 176,
															"src": "1967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 306,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1997:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1997:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2008:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 309,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2016:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2016:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2033:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 305,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1991:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1967:68:2"
											},
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 314,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2045:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 318,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 315,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2060:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2070:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2060:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2045:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 319,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2075:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2045:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2045:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2107:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2107:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2119:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2129:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2119:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 328,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "2132:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 329,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2142:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2142:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 322,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2098:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "2093:65:2"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2168:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2179:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2168:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "2168:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1352:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1371:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1363:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:16:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1386:0:2"
									},
									"scope": 339,
									"src": "1343:844:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 340,
							"src": "386:3692:2",
							"usedErrors": []
						}
					],
					"src": "36:4042:2"
				},
				"id": 2
			}
		}
	}
}