{
	"id": "1dd6cd5dbc36f94402c763dac2a3a403",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity Part/contracts/staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface ERC20 {\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\n    function transfer(address to, uint tokens) external returns (bool success);\n    function balanceOf(address account) external view returns (uint256);\n}\n\ncontract StakingContract is Ownable{\n    //vars\n    address StakingToken;\n    uint256 currentID = 0;\n    bool public StakingEnabled = false;\n\n    struct Stake { \n        //address of staker\n        address owner;\n        //amount staked without decimals (*10^18)\n        uint256 amount;\n        //stake block timestamp\n        uint256 EventTime;\n        //stake (0) or unstake (1)\n        uint8 eventType;\n    }   \n    //event id (autoincrement) => staking info\n    mapping(uint256=>Stake) public StakingHistory;\n    //address => amount staked\n    mapping(address=>uint256) public StakingBalances;\n\n    //fallbacks\n    receive() external payable {}\n    fallback() external payable {}\n\n    //events\n    event NewStake(address staker, uint256 id, Stake stake, uint256 blockTime);\n    event Unstake(address staker, uint256 id, Stake stake, uint256 blockTime);\n\n\n    //set the erc20 token address for the contract\n    function SetStakingToken(address _token) public onlyOwner {\n        StakingToken = _token;\n    }\n    \n    function ToggleStaking() public onlyOwner {\n        StakingEnabled = !StakingEnabled;\n    }\n    \n    // enter amount * (10^18) to allow for decimals\n    function StakeToken(uint256 amount) public {\n        require(StakingEnabled, \"Staking Is Not Enabled\");\n        require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\"); //less than 1 million\n        require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\"); // more than 10\n        require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\");\n\n        ERC20(StakingToken).transferFrom(msg.sender, address(this), amount);\n        StakingBalances[msg.sender] += amount;\n        Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0);\n        StakingHistory[currentID+1] = newStake;\n        emit NewStake(msg.sender, currentID+1, newStake, block.timestamp);\n        currentID+=1;\n    }\n\n    // enter amount * (10^18) to allow for decimals\n    function UnstakeToken(uint256 amount) public {\n        require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\"); //unstaking more than staked\n\n        ERC20(StakingToken).transfer(msg.sender, amount);\n        StakingBalances[msg.sender] -= amount;\n        Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1);\n        StakingHistory[currentID+1] = newUnstake;\n        emit Unstake(msg.sender, currentID+1, newUnstake, block.timestamp);\n        currentID+=1;\n    }\n\n    function GetStakingHistory() public view returns(Stake[] memory) {\n        Stake[] memory stakes = new Stake[](currentID-1);\n        for (uint i = 1; i < currentID; i++) {\n            stakes[i-1] = StakingHistory[i+1];\n        }\n        return stakes;\n    }\n\n    // function createProperty() public payable returns(uint256) {\n    //     require(msg.value >= 0.1 ether, \"NEED 0.1 ETHER\");\n    //     Property memory newProp = Property(currentID+1, msg.sender, msg.sender, 0, 0, true);\n    //     propertiesListed[currentID+1] = newProp;\n    //     currentID+=1;\n    //     emit NewProperty(newProp, block.timestamp);\n    //     return currentID;\n    // }\n\n    // //_id refers to the property id\n    // function delistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"CANNOT DELIST WHILE BOOKED\");\n    //     propertiesListed[_id].listed = false;\n    //     emit Delisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // function relistProperty(uint256 _id) public {\n    //     require(propertiesListed[_id].owner == msg.sender, \"NOT OWNER\");\n    //     require(!propertiesListed[_id].listed, \"NOT DELISTED\");\n    //     propertiesListed[_id].listed = true;\n    //     emit Relisted(propertiesListed[_id], block.timestamp);\n    // }\n\n    // //_id refers to the property id\n    // //_renter is the person who will be renting\n    // //_days is the number of days to book for\n    // function bookProperty(uint256 _id, address _renter, uint256 _days) public {\n    //     require(propertiesListed[_id].checkOut < block.timestamp, \"ALREADY BOOKED\");\n    //     //Also makes sure listing exists, non existent = false\n    //     require(propertiesListed[_id].listed, \"DELISTED\");\n    //     require(_days > 0);\n\n    //     propertiesListed[_id].checkIn = block.timestamp;\n    //     propertiesListed[_id].checkOut = block.timestamp + _days * 1 days;\n    //     propertiesListed[_id].renter = _renter;\n    //     emit BookedProperty(propertiesListed[_id], block.timestamp);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Solidity Part/contracts/staking.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x250d2f86266e1408cb5ef28dfb05ba100ba17eb2e2f7b3d1e9d5f6bb3ef4259e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://68855445aef87f1ec62d2a682619845fd38405240a04ad7f6484d1dc99d5edbd\",\"dweb:/ipfs/QmPG5hoNzdbbzv6Bd77GjEG1zKmQ8oWsjeeAjdwjR4Y3pJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StakingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "NewStake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct StakingContract.Stake",
									"name": "stake",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockTime",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "GetStakingHistory",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "EventTime",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "eventType",
											"type": "uint8"
										}
									],
									"internalType": "struct StakingContract.Stake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "SetStakingToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "StakingBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "StakingHistory",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "EventTime",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "eventType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ToggleStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnstakeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Solidity Part/contracts/staking.sol\":386:5059  contract StakingContract is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"Solidity Part/contracts/staking.sol\":484:485  0 */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":464:485  uint256 currentID = 0 */\n  0x02\n  sstore\n    /* \"Solidity Part/contracts/staking.sol\":520:525  false */\n  0x00\n    /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity Part/contracts/staking.sol\":386:5059  contract StakingContract is Ownable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Solidity Part/contracts/staking.sol\":386:5059  contract StakingContract is Ownable{... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Solidity Part/contracts/staking.sol\":386:5059  contract StakingContract is Ownable{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity Part/contracts/staking.sol\":386:5059  contract StakingContract is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xad95b1c6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xad95b1c6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb0adfa09\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xda917aea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdb568922\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdf6a8a15\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x356bb8db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x376aa972\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x64cb560c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":852:897  mapping(uint256=>Stake) public StakingHistory */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":934:982  mapping(address=>uint256) public StakingBalances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2911:3168  function GetStakingHistory() public view returns(Stake[] memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Solidity Part/contracts/staking.sol\":852:897  mapping(uint256=>Stake) public StakingHistory */\n    tag_23:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":934:982  mapping(address=>uint256) public StakingBalances */\n    tag_30:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Solidity Part/contracts/staking.sol\":1476:1490  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1475:1490  !StakingEnabled */\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1458:1472  StakingEnabled */\n      0x03\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1458:1490  StakingEnabled = !StakingEnabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1406:1497  function ToggleStaking() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_76\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n    tag_47:\n        /* \"Solidity Part/contracts/staking.sol\":1620:1634  StakingEnabled */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1612:1661  require(StakingEnabled, \"Staking Is Not Enabled\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Solidity Part/contracts/staking.sol\":1719:1733  1000000*10**18 */\n      0xd3c21bcecceda1000000\n        /* \"Solidity Part/contracts/staking.sol\":1709:1715  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1679:1694  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1679:1706  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1695:1705  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1679:1706  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1679:1715  StakingBalances[msg.sender] + amount */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"Solidity Part/contracts/staking.sol\":1679:1733  StakingBalances[msg.sender] + amount <= 1000000*10**18 */\n      gt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1671:1758  require(StakingBalances[msg.sender] + amount <= 1000000*10**18, \"ERROR: MAXIMUM STAKE\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Solidity Part/contracts/staking.sol\":1838:1847  10*10**18 */\n      0x8ac7230489e80000\n        /* \"Solidity Part/contracts/staking.sol\":1828:1834  amount */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":1798:1813  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":1798:1825  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1814:1824  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1798:1825  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":1798:1834  StakingBalances[msg.sender] + amount */\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"Solidity Part/contracts/staking.sol\":1798:1847  StakingBalances[msg.sender] + amount >= 10*10**18 */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1790:1872  require(StakingBalances[msg.sender] + amount >= 10*10**18, \"ERROR: MINIMUM STAKE\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Solidity Part/contracts/staking.sol\":1952:1958  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1913:1925  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":1907:1936  ERC20(StakingToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Solidity Part/contracts/staking.sol\":1937:1947  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":1907:1948  ERC20(StakingToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"Solidity Part/contracts/staking.sol\":1907:1958  ERC20(StakingToken).balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":1898:1990  require (ERC20(StakingToken).balanceOf(msg.sender) >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"Solidity Part/contracts/staking.sol\":2007:2019  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2001:2033  ERC20(StakingToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Solidity Part/contracts/staking.sol\":2034:2044  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2054:2058  this */\n      address\n        /* \"Solidity Part/contracts/staking.sol\":2061:2067  amount */\n      dup5\n        /* \"Solidity Part/contracts/staking.sol\":2001:2068  ERC20(StakingToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2109:2115  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2078:2093  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2078:2105  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2094:2104  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2078:2105  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2078:2115  StakingBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2125:2146  Stake memory newStake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2155:2165  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2166:2172  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2174:2189  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2191:2192  0 */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2149:2193  Stake(msg.sender,amount, block.timestamp, 0) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2125:2193  Stake memory newStake = Stake(msg.sender,amount, block.timestamp, 0) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2233:2241  newStake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2203:2217  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2203:2230  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2228:2229  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2218:2227  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2218:2229  currentID+1 */\n      tag_117\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_117:\n        /* \"Solidity Part/contracts/staking.sol\":2203:2230  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2203:2241  StakingHistory[currentID+1] = newStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2256:2316  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      0x62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b612\n        /* \"Solidity Part/contracts/staking.sol\":2265:2275  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2287:2288  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2277:2286  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2277:2288  currentID+1 */\n      tag_118\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_118:\n        /* \"Solidity Part/contracts/staking.sol\":2290:2298  newStake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2300:2315  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2256:2316  NewStake(msg.sender, currentID+1, newStake, block.timestamp) */\n      mload(0x40)\n      tag_119\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2337:2338  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2326:2335  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2326:2338  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1602:2345  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1559:2345  function StakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2911:3168  function GetStakingHistory() public view returns(Stake[] memory) {... */\n    tag_50:\n        /* \"Solidity Part/contracts/staking.sol\":2960:2974  Stake[] memory */\n      0x60\n        /* \"Solidity Part/contracts/staking.sol\":2986:3007  Stake[] memory stakes */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3032:3033  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3022:3031  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3022:3033  currentID-1 */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"Solidity Part/contracts/staking.sol\":3010:3034  new Stake[](currentID-1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup2\n      0x20\n      add\n    tag_129:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_129\n      jumpi\n      swap1\n      pop\n    tag_128:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2986:3034  Stake[] memory stakes = new Stake[](currentID-1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3049:3055  uint i */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3058:3059  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3049:3059  uint i = 1 */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3044:3139  for (uint i = 1; i < currentID; i++) {... */\n    tag_132:\n        /* \"Solidity Part/contracts/staking.sol\":3065:3074  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":3061:3062  i */\n      dup2\n        /* \"Solidity Part/contracts/staking.sol\":3061:3074  i < currentID */\n      lt\n        /* \"Solidity Part/contracts/staking.sol\":3044:3139  for (uint i = 1; i < currentID; i++) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"Solidity Part/contracts/staking.sol\":3109:3123  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":3109:3128  StakingHistory[i+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":3126:3127  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3124:3125  i */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":3124:3127  i+1 */\n      tag_135\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"Solidity Part/contracts/staking.sol\":3109:3128  StakingHistory[i+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":3095:3128  stakes[i-1] = StakingHistory[i+1] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3095:3101  stakes */\n      dup3\n        /* \"Solidity Part/contracts/staking.sol\":3104:3105  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":3102:3103  i */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":3102:3105  i-1 */\n      tag_136\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_136:\n        /* \"Solidity Part/contracts/staking.sol\":3095:3106  stakes[i-1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Solidity Part/contracts/staking.sol\":3095:3128  stakes[i-1] = StakingHistory[i+1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3076:3079  i++ */\n      dup1\n      dup1\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3044:3139  for (uint i = 1; i < currentID; i++) {... */\n      jump(tag_132)\n    tag_133:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":3155:3161  stakes */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":3148:3161  return stakes */\n      swap2\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2911:3168  function GetStakingHistory() public view returns(Stake[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":491:525  bool public StakingEnabled = false */\n    tag_55:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_76\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"Solidity Part/contracts/staking.sol\":1383:1389  _token */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":1368:1380  StakingToken */\n      0x01\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":1368:1389  StakingToken = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":1300:1396  function SetStakingToken(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n    tag_65:\n        /* \"Solidity Part/contracts/staking.sol\":2497:2503  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2466:2481  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2466:2493  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2482:2492  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2466:2493  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Solidity Part/contracts/staking.sol\":2466:2503  StakingBalances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"Solidity Part/contracts/staking.sol\":2458:2535  require(StakingBalances[msg.sender] >= amount, \"ERROR: INSUFFICIENT BALANCE\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_108\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"Solidity Part/contracts/staking.sol\":2581:2593  StakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity Part/contracts/staking.sol\":2575:2603  ERC20(StakingToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Solidity Part/contracts/staking.sol\":2604:2614  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2616:2622  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2575:2623  ERC20(StakingToken).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_156:\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2664:2670  amount */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2633:2648  StakingBalances */\n      0x05\n        /* \"Solidity Part/contracts/staking.sol\":2633:2660  StakingBalances[msg.sender] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2649:2659  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2633:2660  StakingBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2633:2670  StakingBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2680:2703  Stake memory newUnstake */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2712:2722  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2723:2729  amount */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2731:2746  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Solidity Part/contracts/staking.sol\":2748:2749  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2706:2750  Stake(msg.sender,amount, block.timestamp, 1) */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2680:2750  Stake memory newUnstake = Stake(msg.sender,amount, block.timestamp, 1) */\n      swap1\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2790:2800  newUnstake */\n      dup1\n        /* \"Solidity Part/contracts/staking.sol\":2760:2774  StakingHistory */\n      0x04\n        /* \"Solidity Part/contracts/staking.sol\":2760:2787  StakingHistory[currentID+1] */\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2785:2786  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2775:2784  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2775:2786  currentID+1 */\n      tag_158\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_158:\n        /* \"Solidity Part/contracts/staking.sol\":2760:2787  StakingHistory[currentID+1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Solidity Part/contracts/staking.sol\":2760:2800  StakingHistory[currentID+1] = newUnstake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2815:2876  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      0x27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24\n        /* \"Solidity Part/contracts/staking.sol\":2823:2833  msg.sender */\n      caller\n        /* \"Solidity Part/contracts/staking.sol\":2845:2846  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2835:2844  currentID */\n      sload(0x02)\n        /* \"Solidity Part/contracts/staking.sol\":2835:2846  currentID+1 */\n      tag_159\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_159:\n        /* \"Solidity Part/contracts/staking.sol\":2848:2858  newUnstake */\n      dup4\n        /* \"Solidity Part/contracts/staking.sol\":2860:2875  block.timestamp */\n      timestamp\n        /* \"Solidity Part/contracts/staking.sol\":2815:2876  Unstake(msg.sender, currentID+1, newUnstake, block.timestamp) */\n      mload(0x40)\n      tag_160\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Solidity Part/contracts/staking.sol\":2897:2898  1 */\n      0x01\n        /* \"Solidity Part/contracts/staking.sol\":2886:2895  currentID */\n      0x02\n      0x00\n        /* \"Solidity Part/contracts/staking.sol\":2886:2898  currentID+=1 */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2448:2905  {... */\n      pop\n        /* \"Solidity Part/contracts/staking.sol\":2403:2905  function UnstakeToken(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_76\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_131:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_175:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_177\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_179:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_181\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_183:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_185\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_187:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_189\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_186\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_29:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":665:784   */\n    tag_191:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_194\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_175\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_115:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_197\n      tag_193\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1008:1127   */\n    tag_196:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_198\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_179\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_22:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_201\n      tag_193\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1351:1470   */\n    tag_200:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_202\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_183\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_105:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_205\n      tag_193\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1697:1816   */\n    tag_204:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_206\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_187\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2234   */\n    tag_207:\n        /* \"#utility.yul\":2080:2090   */\n      0x00\n        /* \"#utility.yul\":2101:2191   */\n      tag_209\n        /* \"#utility.yul\":2187:2190   */\n      dup4\n        /* \"#utility.yul\":2179:2185   */\n      dup4\n        /* \"#utility.yul\":2101:2191   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2223:2227   */\n      0x80\n        /* \"#utility.yul\":2218:2221   */\n      dup4\n        /* \"#utility.yul\":2214:2228   */\n      add\n        /* \"#utility.yul\":2200:2228   */\n      swap1\n      pop\n        /* \"#utility.yul\":1967:2234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2348   */\n    tag_211:\n        /* \"#utility.yul\":2317:2341   */\n      tag_213\n        /* \"#utility.yul\":2335:2340   */\n      dup2\n        /* \"#utility.yul\":2317:2341   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2305:2342   */\n      mstore\n        /* \"#utility.yul\":2240:2348   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2354:2472   */\n    tag_215:\n        /* \"#utility.yul\":2441:2465   */\n      tag_217\n        /* \"#utility.yul\":2459:2464   */\n      dup2\n        /* \"#utility.yul\":2441:2465   */\n      tag_214\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2436:2439   */\n      dup3\n        /* \"#utility.yul\":2429:2466   */\n      mstore\n        /* \"#utility.yul\":2354:2472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2550:3458   */\n    tag_218:\n        /* \"#utility.yul\":2713:2716   */\n      0x00\n        /* \"#utility.yul\":2742:2818   */\n      tag_220\n        /* \"#utility.yul\":2812:2817   */\n      dup3\n        /* \"#utility.yul\":2742:2818   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2834:2942   */\n      tag_222\n        /* \"#utility.yul\":2935:2941   */\n      dup2\n        /* \"#utility.yul\":2930:2933   */\n      dup6\n        /* \"#utility.yul\":2834:2942   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2827:2942   */\n      swap4\n      pop\n        /* \"#utility.yul\":2966:3044   */\n      tag_224\n        /* \"#utility.yul\":3038:3043   */\n      dup4\n        /* \"#utility.yul\":2966:3044   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3067:3074   */\n      dup1\n        /* \"#utility.yul\":3098:3099   */\n      0x00\n        /* \"#utility.yul\":3083:3433   */\n    tag_226:\n        /* \"#utility.yul\":3108:3114   */\n      dup4\n        /* \"#utility.yul\":3105:3106   */\n      dup2\n        /* \"#utility.yul\":3102:3115   */\n      lt\n        /* \"#utility.yul\":3083:3433   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3184:3190   */\n      dup2\n        /* \"#utility.yul\":3178:3191   */\n      mload\n        /* \"#utility.yul\":3211:3318   */\n      tag_229\n        /* \"#utility.yul\":3314:3317   */\n      dup9\n        /* \"#utility.yul\":3299:3312   */\n      dup3\n        /* \"#utility.yul\":3211:3318   */\n      tag_207\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3204:3318   */\n      swap8\n      pop\n        /* \"#utility.yul\":3341:3423   */\n      tag_230\n        /* \"#utility.yul\":3416:3422   */\n      dup4\n        /* \"#utility.yul\":3341:3423   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3331:3423   */\n      swap3\n      pop\n        /* \"#utility.yul\":3143:3433   */\n      pop\n        /* \"#utility.yul\":3130:3131   */\n      0x01\n        /* \"#utility.yul\":3127:3128   */\n      dup2\n        /* \"#utility.yul\":3123:3132   */\n      add\n        /* \"#utility.yul\":3118:3132   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3433   */\n      jump(tag_226)\n    tag_228:\n        /* \"#utility.yul\":3087:3101   */\n      pop\n        /* \"#utility.yul\":3449:3452   */\n      dup6\n        /* \"#utility.yul\":3442:3452   */\n      swap4\n      pop\n        /* \"#utility.yul\":2718:3458   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2550:3458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3464:3573   */\n    tag_232:\n        /* \"#utility.yul\":3545:3566   */\n      tag_234\n        /* \"#utility.yul\":3560:3565   */\n      dup2\n        /* \"#utility.yul\":3545:3566   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3540:3543   */\n      dup3\n        /* \"#utility.yul\":3533:3567   */\n      mstore\n        /* \"#utility.yul\":3464:3573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3945   */\n    tag_236:\n        /* \"#utility.yul\":3721:3724   */\n      0x00\n        /* \"#utility.yul\":3742:3809   */\n      tag_238\n        /* \"#utility.yul\":3806:3808   */\n      0x1b\n        /* \"#utility.yul\":3801:3804   */\n      dup4\n        /* \"#utility.yul\":3742:3809   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3735:3809   */\n      swap2\n      pop\n        /* \"#utility.yul\":3818:3911   */\n      tag_240\n        /* \"#utility.yul\":3907:3910   */\n      dup3\n        /* \"#utility.yul\":3818:3911   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3931:3934   */\n      dup3\n        /* \"#utility.yul\":3927:3939   */\n      add\n        /* \"#utility.yul\":3920:3939   */\n      swap1\n      pop\n        /* \"#utility.yul\":3579:3945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3951:4317   */\n    tag_242:\n        /* \"#utility.yul\":4093:4096   */\n      0x00\n        /* \"#utility.yul\":4114:4181   */\n      tag_244\n        /* \"#utility.yul\":4178:4180   */\n      0x26\n        /* \"#utility.yul\":4173:4176   */\n      dup4\n        /* \"#utility.yul\":4114:4181   */\n      tag_239\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4107:4181   */\n      swap2\n      pop\n        /* \"#utility.yul\":4190:4283   */\n      tag_245\n        /* \"#utility.yul\":4279:4282   */\n      dup3\n        /* \"#utility.yul\":4190:4283   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4308:4310   */\n      0x40\n        /* \"#utility.yul\":4303:4306   */\n      dup3\n        /* \"#utility.yul\":4299:4311   */\n      add\n        /* \"#utility.yul\":4292:4311   */\n      swap1\n      pop\n        /* \"#utility.yul\":3951:4317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4323:4689   */\n    tag_247:\n        /* \"#utility.yul\":4465:4468   */\n      0x00\n        /* \"#utility.yul\":4486:4553   */\n      tag_249\n        /* \"#utility.yul\":4550:4552   */\n      0x16\n        /* \"#utility.yul\":4545:4548   */\n      dup4\n        /* \"#utility.yul\":4486:4553   */\n      tag_239\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4479:4553   */\n      swap2\n      pop\n        /* \"#utility.yul\":4562:4655   */\n      tag_250\n        /* \"#utility.yul\":4651:4654   */\n      dup3\n        /* \"#utility.yul\":4562:4655   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4680:4682   */\n      0x20\n        /* \"#utility.yul\":4675:4678   */\n      dup3\n        /* \"#utility.yul\":4671:4683   */\n      add\n        /* \"#utility.yul\":4664:4683   */\n      swap1\n      pop\n        /* \"#utility.yul\":4323:4689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4695:5061   */\n    tag_252:\n        /* \"#utility.yul\":4837:4840   */\n      0x00\n        /* \"#utility.yul\":4858:4925   */\n      tag_254\n        /* \"#utility.yul\":4922:4924   */\n      0x14\n        /* \"#utility.yul\":4917:4920   */\n      dup4\n        /* \"#utility.yul\":4858:4925   */\n      tag_239\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4851:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4934:5027   */\n      tag_255\n        /* \"#utility.yul\":5023:5026   */\n      dup3\n        /* \"#utility.yul\":4934:5027   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5052:5054   */\n      0x20\n        /* \"#utility.yul\":5047:5050   */\n      dup3\n        /* \"#utility.yul\":5043:5055   */\n      add\n        /* \"#utility.yul\":5036:5055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4695:5061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5067:5433   */\n    tag_257:\n        /* \"#utility.yul\":5209:5212   */\n      0x00\n        /* \"#utility.yul\":5230:5297   */\n      tag_259\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5289:5292   */\n      dup4\n        /* \"#utility.yul\":5230:5297   */\n      tag_239\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5223:5297   */\n      swap2\n      pop\n        /* \"#utility.yul\":5306:5399   */\n      tag_260\n        /* \"#utility.yul\":5395:5398   */\n      dup3\n        /* \"#utility.yul\":5306:5399   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5419:5422   */\n      dup3\n        /* \"#utility.yul\":5415:5427   */\n      add\n        /* \"#utility.yul\":5408:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5439:5805   */\n    tag_262:\n        /* \"#utility.yul\":5581:5584   */\n      0x00\n        /* \"#utility.yul\":5602:5669   */\n      tag_264\n        /* \"#utility.yul\":5666:5668   */\n      0x14\n        /* \"#utility.yul\":5661:5664   */\n      dup4\n        /* \"#utility.yul\":5602:5669   */\n      tag_239\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5595:5669   */\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5771   */\n      tag_265\n        /* \"#utility.yul\":5767:5770   */\n      dup3\n        /* \"#utility.yul\":5678:5771   */\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5796:5798   */\n      0x20\n        /* \"#utility.yul\":5791:5794   */\n      dup3\n        /* \"#utility.yul\":5787:5799   */\n      add\n        /* \"#utility.yul\":5780:5799   */\n      swap1\n      pop\n        /* \"#utility.yul\":5439:5805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5879:6727   */\n    tag_210:\n        /* \"#utility.yul\":6010:6014   */\n      0x80\n        /* \"#utility.yul\":6005:6008   */\n      dup3\n        /* \"#utility.yul\":6001:6015   */\n      add\n        /* \"#utility.yul\":6098:6102   */\n      0x00\n        /* \"#utility.yul\":6091:6096   */\n      dup3\n        /* \"#utility.yul\":6087:6103   */\n      add\n        /* \"#utility.yul\":6081:6104   */\n      mload\n        /* \"#utility.yul\":6117:6180   */\n      tag_268\n        /* \"#utility.yul\":6174:6178   */\n      0x00\n        /* \"#utility.yul\":6169:6172   */\n      dup6\n        /* \"#utility.yul\":6165:6179   */\n      add\n        /* \"#utility.yul\":6151:6163   */\n      dup3\n        /* \"#utility.yul\":6117:6180   */\n      tag_211\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6025:6190   */\n      pop\n        /* \"#utility.yul\":6274:6278   */\n      0x20\n        /* \"#utility.yul\":6267:6272   */\n      dup3\n        /* \"#utility.yul\":6263:6279   */\n      add\n        /* \"#utility.yul\":6257:6280   */\n      mload\n        /* \"#utility.yul\":6293:6356   */\n      tag_269\n        /* \"#utility.yul\":6350:6354   */\n      0x20\n        /* \"#utility.yul\":6345:6348   */\n      dup6\n        /* \"#utility.yul\":6341:6355   */\n      add\n        /* \"#utility.yul\":6327:6339   */\n      dup3\n        /* \"#utility.yul\":6293:6356   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6200:6366   */\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x40\n        /* \"#utility.yul\":6446:6451   */\n      dup3\n        /* \"#utility.yul\":6442:6458   */\n      add\n        /* \"#utility.yul\":6436:6459   */\n      mload\n        /* \"#utility.yul\":6472:6535   */\n      tag_271\n        /* \"#utility.yul\":6529:6533   */\n      0x40\n        /* \"#utility.yul\":6524:6527   */\n      dup6\n        /* \"#utility.yul\":6520:6534   */\n      add\n        /* \"#utility.yul\":6506:6518   */\n      dup3\n        /* \"#utility.yul\":6472:6535   */\n      tag_270\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6376:6545   */\n      pop\n        /* \"#utility.yul\":6632:6636   */\n      0x60\n        /* \"#utility.yul\":6625:6630   */\n      dup3\n        /* \"#utility.yul\":6621:6637   */\n      add\n        /* \"#utility.yul\":6615:6638   */\n      mload\n        /* \"#utility.yul\":6651:6710   */\n      tag_272\n        /* \"#utility.yul\":6704:6708   */\n      0x60\n        /* \"#utility.yul\":6699:6702   */\n      dup6\n        /* \"#utility.yul\":6695:6709   */\n      add\n        /* \"#utility.yul\":6681:6693   */\n      dup3\n        /* \"#utility.yul\":6651:6710   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6555:6720   */\n      pop\n        /* \"#utility.yul\":5979:6727   */\n      pop\n        /* \"#utility.yul\":5879:6727   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:7659   */\n    tag_274:\n        /* \"#utility.yul\":6942:6946   */\n      0x80\n        /* \"#utility.yul\":6937:6940   */\n      dup3\n        /* \"#utility.yul\":6933:6947   */\n      add\n        /* \"#utility.yul\":7030:7034   */\n      0x00\n        /* \"#utility.yul\":7023:7028   */\n      dup3\n        /* \"#utility.yul\":7019:7035   */\n      add\n        /* \"#utility.yul\":7013:7036   */\n      mload\n        /* \"#utility.yul\":7049:7112   */\n      tag_276\n        /* \"#utility.yul\":7106:7110   */\n      0x00\n        /* \"#utility.yul\":7101:7104   */\n      dup6\n        /* \"#utility.yul\":7097:7111   */\n      add\n        /* \"#utility.yul\":7083:7095   */\n      dup3\n        /* \"#utility.yul\":7049:7112   */\n      tag_211\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6957:7122   */\n      pop\n        /* \"#utility.yul\":7206:7210   */\n      0x20\n        /* \"#utility.yul\":7199:7204   */\n      dup3\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7189:7212   */\n      mload\n        /* \"#utility.yul\":7225:7288   */\n      tag_277\n        /* \"#utility.yul\":7282:7286   */\n      0x20\n        /* \"#utility.yul\":7277:7280   */\n      dup6\n        /* \"#utility.yul\":7273:7287   */\n      add\n        /* \"#utility.yul\":7259:7271   */\n      dup3\n        /* \"#utility.yul\":7225:7288   */\n      tag_270\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7132:7298   */\n      pop\n        /* \"#utility.yul\":7385:7389   */\n      0x40\n        /* \"#utility.yul\":7378:7383   */\n      dup3\n        /* \"#utility.yul\":7374:7390   */\n      add\n        /* \"#utility.yul\":7368:7391   */\n      mload\n        /* \"#utility.yul\":7404:7467   */\n      tag_278\n        /* \"#utility.yul\":7461:7465   */\n      0x40\n        /* \"#utility.yul\":7456:7459   */\n      dup6\n        /* \"#utility.yul\":7452:7466   */\n      add\n        /* \"#utility.yul\":7438:7450   */\n      dup3\n        /* \"#utility.yul\":7404:7467   */\n      tag_270\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7308:7477   */\n      pop\n        /* \"#utility.yul\":7564:7568   */\n      0x60\n        /* \"#utility.yul\":7557:7562   */\n      dup3\n        /* \"#utility.yul\":7553:7569   */\n      add\n        /* \"#utility.yul\":7547:7570   */\n      mload\n        /* \"#utility.yul\":7583:7642   */\n      tag_279\n        /* \"#utility.yul\":7636:7640   */\n      0x60\n        /* \"#utility.yul\":7631:7634   */\n      dup6\n        /* \"#utility.yul\":7627:7641   */\n      add\n        /* \"#utility.yul\":7613:7625   */\n      dup3\n        /* \"#utility.yul\":7583:7642   */\n      tag_273\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7487:7652   */\n      pop\n        /* \"#utility.yul\":6911:7659   */\n      pop\n        /* \"#utility.yul\":6801:7659   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7665:7773   */\n    tag_270:\n        /* \"#utility.yul\":7742:7766   */\n      tag_281\n        /* \"#utility.yul\":7760:7765   */\n      dup2\n        /* \"#utility.yul\":7742:7766   */\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7737:7740   */\n      dup3\n        /* \"#utility.yul\":7730:7767   */\n      mstore\n        /* \"#utility.yul\":7665:7773   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:7897   */\n    tag_283:\n        /* \"#utility.yul\":7866:7890   */\n      tag_285\n        /* \"#utility.yul\":7884:7889   */\n      dup2\n        /* \"#utility.yul\":7866:7890   */\n      tag_282\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7861:7864   */\n      dup3\n        /* \"#utility.yul\":7854:7891   */\n      mstore\n        /* \"#utility.yul\":7779:7897   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7903:8005   */\n    tag_273:\n        /* \"#utility.yul\":7976:7998   */\n      tag_287\n        /* \"#utility.yul\":7992:7997   */\n      dup2\n        /* \"#utility.yul\":7976:7998   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7971:7974   */\n      dup3\n        /* \"#utility.yul\":7964:7999   */\n      mstore\n        /* \"#utility.yul\":7903:8005   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8011:8123   */\n    tag_289:\n        /* \"#utility.yul\":8094:8116   */\n      tag_291\n        /* \"#utility.yul\":8110:8115   */\n      dup2\n        /* \"#utility.yul\":8094:8116   */\n      tag_288\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8089:8092   */\n      dup3\n        /* \"#utility.yul\":8082:8117   */\n      mstore\n        /* \"#utility.yul\":8011:8123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8129:8351   */\n    tag_43:\n        /* \"#utility.yul\":8222:8226   */\n      0x00\n        /* \"#utility.yul\":8260:8262   */\n      0x20\n        /* \"#utility.yul\":8249:8258   */\n      dup3\n        /* \"#utility.yul\":8245:8263   */\n      add\n        /* \"#utility.yul\":8237:8263   */\n      swap1\n      pop\n        /* \"#utility.yul\":8273:8344   */\n      tag_293\n        /* \"#utility.yul\":8341:8342   */\n      0x00\n        /* \"#utility.yul\":8330:8339   */\n      dup4\n        /* \"#utility.yul\":8326:8343   */\n      add\n        /* \"#utility.yul\":8317:8323   */\n      dup5\n        /* \"#utility.yul\":8273:8344   */\n      tag_215\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8129:8351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8357:8799   */\n    tag_110:\n        /* \"#utility.yul\":8506:8510   */\n      0x00\n        /* \"#utility.yul\":8544:8546   */\n      0x60\n        /* \"#utility.yul\":8533:8542   */\n      dup3\n        /* \"#utility.yul\":8529:8547   */\n      add\n        /* \"#utility.yul\":8521:8547   */\n      swap1\n      pop\n        /* \"#utility.yul\":8557:8628   */\n      tag_295\n        /* \"#utility.yul\":8625:8626   */\n      0x00\n        /* \"#utility.yul\":8614:8623   */\n      dup4\n        /* \"#utility.yul\":8610:8627   */\n      add\n        /* \"#utility.yul\":8601:8607   */\n      dup7\n        /* \"#utility.yul\":8557:8628   */\n      tag_215\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8638:8710   */\n      tag_296\n        /* \"#utility.yul\":8706:8708   */\n      0x20\n        /* \"#utility.yul\":8695:8704   */\n      dup4\n        /* \"#utility.yul\":8691:8709   */\n      add\n        /* \"#utility.yul\":8682:8688   */\n      dup6\n        /* \"#utility.yul\":8638:8710   */\n      tag_215\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8720:8792   */\n      tag_297\n        /* \"#utility.yul\":8788:8790   */\n      0x40\n        /* \"#utility.yul\":8777:8786   */\n      dup4\n        /* \"#utility.yul\":8773:8791   */\n      add\n        /* \"#utility.yul\":8764:8770   */\n      dup5\n        /* \"#utility.yul\":8720:8792   */\n      tag_283\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8357:8799   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8805:9137   */\n    tag_152:\n        /* \"#utility.yul\":8926:8930   */\n      0x00\n        /* \"#utility.yul\":8964:8966   */\n      0x40\n        /* \"#utility.yul\":8953:8962   */\n      dup3\n        /* \"#utility.yul\":8949:8967   */\n      add\n        /* \"#utility.yul\":8941:8967   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:9048   */\n      tag_299\n        /* \"#utility.yul\":9045:9046   */\n      0x00\n        /* \"#utility.yul\":9034:9043   */\n      dup4\n        /* \"#utility.yul\":9030:9047   */\n      add\n        /* \"#utility.yul\":9021:9027   */\n      dup6\n        /* \"#utility.yul\":8977:9048   */\n      tag_215\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9058:9130   */\n      tag_300\n        /* \"#utility.yul\":9126:9128   */\n      0x20\n        /* \"#utility.yul\":9115:9124   */\n      dup4\n        /* \"#utility.yul\":9111:9129   */\n      add\n        /* \"#utility.yul\":9102:9108   */\n      dup5\n        /* \"#utility.yul\":9058:9130   */\n      tag_283\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8805:9137   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9785   */\n    tag_120:\n        /* \"#utility.yul\":9364:9368   */\n      0x00\n        /* \"#utility.yul\":9402:9405   */\n      0xe0\n        /* \"#utility.yul\":9391:9400   */\n      dup3\n        /* \"#utility.yul\":9387:9406   */\n      add\n        /* \"#utility.yul\":9379:9406   */\n      swap1\n      pop\n        /* \"#utility.yul\":9416:9487   */\n      tag_302\n        /* \"#utility.yul\":9484:9485   */\n      0x00\n        /* \"#utility.yul\":9473:9482   */\n      dup4\n        /* \"#utility.yul\":9469:9486   */\n      add\n        /* \"#utility.yul\":9460:9466   */\n      dup8\n        /* \"#utility.yul\":9416:9487   */\n      tag_215\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9497:9569   */\n      tag_303\n        /* \"#utility.yul\":9565:9567   */\n      0x20\n        /* \"#utility.yul\":9554:9563   */\n      dup4\n        /* \"#utility.yul\":9550:9568   */\n      add\n        /* \"#utility.yul\":9541:9547   */\n      dup7\n        /* \"#utility.yul\":9497:9569   */\n      tag_283\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9579:9695   */\n      tag_304\n        /* \"#utility.yul\":9691:9693   */\n      0x40\n        /* \"#utility.yul\":9680:9689   */\n      dup4\n        /* \"#utility.yul\":9676:9694   */\n      add\n        /* \"#utility.yul\":9667:9673   */\n      dup6\n        /* \"#utility.yul\":9579:9695   */\n      tag_274\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9705:9778   */\n      tag_305\n        /* \"#utility.yul\":9773:9776   */\n      0xc0\n        /* \"#utility.yul\":9762:9771   */\n      dup4\n        /* \"#utility.yul\":9758:9777   */\n      add\n        /* \"#utility.yul\":9749:9755   */\n      dup5\n        /* \"#utility.yul\":9705:9778   */\n      tag_283\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9143:9785   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9791:10336   */\n    tag_25:\n        /* \"#utility.yul\":9964:9968   */\n      0x00\n        /* \"#utility.yul\":10002:10005   */\n      0x80\n        /* \"#utility.yul\":9991:10000   */\n      dup3\n        /* \"#utility.yul\":9987:10006   */\n      add\n        /* \"#utility.yul\":9979:10006   */\n      swap1\n      pop\n        /* \"#utility.yul\":10016:10087   */\n      tag_307\n        /* \"#utility.yul\":10084:10085   */\n      0x00\n        /* \"#utility.yul\":10073:10082   */\n      dup4\n        /* \"#utility.yul\":10069:10086   */\n      add\n        /* \"#utility.yul\":10060:10066   */\n      dup8\n        /* \"#utility.yul\":10016:10087   */\n      tag_215\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10097:10169   */\n      tag_308\n        /* \"#utility.yul\":10165:10167   */\n      0x20\n        /* \"#utility.yul\":10154:10163   */\n      dup4\n        /* \"#utility.yul\":10150:10168   */\n      add\n        /* \"#utility.yul\":10141:10147   */\n      dup7\n        /* \"#utility.yul\":10097:10169   */\n      tag_283\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10179:10251   */\n      tag_309\n        /* \"#utility.yul\":10247:10249   */\n      0x40\n        /* \"#utility.yul\":10236:10245   */\n      dup4\n        /* \"#utility.yul\":10232:10250   */\n      add\n        /* \"#utility.yul\":10223:10229   */\n      dup6\n        /* \"#utility.yul\":10179:10251   */\n      tag_283\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10261:10329   */\n      tag_310\n        /* \"#utility.yul\":10325:10327   */\n      0x60\n        /* \"#utility.yul\":10314:10323   */\n      dup4\n        /* \"#utility.yul\":10310:10328   */\n      add\n        /* \"#utility.yul\":10301:10307   */\n      dup5\n        /* \"#utility.yul\":10261:10329   */\n      tag_289\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9791:10336   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10342:10803   */\n    tag_52:\n        /* \"#utility.yul\":10529:10533   */\n      0x00\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"#utility.yul\":10556:10565   */\n      dup3\n        /* \"#utility.yul\":10552:10570   */\n      add\n        /* \"#utility.yul\":10544:10570   */\n      swap1\n      pop\n        /* \"#utility.yul\":10616:10625   */\n      dup2\n        /* \"#utility.yul\":10610:10614   */\n      dup2\n        /* \"#utility.yul\":10606:10626   */\n      sub\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10591:10600   */\n      dup4\n        /* \"#utility.yul\":10587:10604   */\n      add\n        /* \"#utility.yul\":10580:10627   */\n      mstore\n        /* \"#utility.yul\":10644:10796   */\n      tag_312\n        /* \"#utility.yul\":10791:10795   */\n      dup2\n        /* \"#utility.yul\":10782:10788   */\n      dup5\n        /* \"#utility.yul\":10644:10796   */\n      tag_218\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10636:10796   */\n      swap1\n      pop\n        /* \"#utility.yul\":10342:10803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10809:11019   */\n    tag_57:\n        /* \"#utility.yul\":10896:10900   */\n      0x00\n        /* \"#utility.yul\":10934:10936   */\n      0x20\n        /* \"#utility.yul\":10923:10932   */\n      dup3\n        /* \"#utility.yul\":10919:10937   */\n      add\n        /* \"#utility.yul\":10911:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10947:11012   */\n      tag_314\n        /* \"#utility.yul\":11009:11010   */\n      0x00\n        /* \"#utility.yul\":10998:11007   */\n      dup4\n        /* \"#utility.yul\":10994:11011   */\n      add\n        /* \"#utility.yul\":10985:10991   */\n      dup5\n        /* \"#utility.yul\":10947:11012   */\n      tag_232\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10809:11019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11444   */\n    tag_108:\n        /* \"#utility.yul\":11191:11195   */\n      0x00\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"#utility.yul\":11218:11227   */\n      dup3\n        /* \"#utility.yul\":11214:11232   */\n      add\n        /* \"#utility.yul\":11206:11232   */\n      swap1\n      pop\n        /* \"#utility.yul\":11278:11287   */\n      dup2\n        /* \"#utility.yul\":11272:11276   */\n      dup2\n        /* \"#utility.yul\":11268:11288   */\n      sub\n        /* \"#utility.yul\":11264:11265   */\n      0x00\n        /* \"#utility.yul\":11253:11262   */\n      dup4\n        /* \"#utility.yul\":11249:11266   */\n      add\n        /* \"#utility.yul\":11242:11289   */\n      mstore\n        /* \"#utility.yul\":11306:11437   */\n      tag_316\n        /* \"#utility.yul\":11432:11436   */\n      dup2\n        /* \"#utility.yul\":11306:11437   */\n      tag_236\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11298:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11025:11444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11450:11869   */\n    tag_170:\n        /* \"#utility.yul\":11616:11620   */\n      0x00\n        /* \"#utility.yul\":11654:11656   */\n      0x20\n        /* \"#utility.yul\":11643:11652   */\n      dup3\n        /* \"#utility.yul\":11639:11657   */\n      add\n        /* \"#utility.yul\":11631:11657   */\n      swap1\n      pop\n        /* \"#utility.yul\":11703:11712   */\n      dup2\n        /* \"#utility.yul\":11697:11701   */\n      dup2\n        /* \"#utility.yul\":11693:11713   */\n      sub\n        /* \"#utility.yul\":11689:11690   */\n      0x00\n        /* \"#utility.yul\":11678:11687   */\n      dup4\n        /* \"#utility.yul\":11674:11691   */\n      add\n        /* \"#utility.yul\":11667:11714   */\n      mstore\n        /* \"#utility.yul\":11731:11862   */\n      tag_318\n        /* \"#utility.yul\":11857:11861   */\n      dup2\n        /* \"#utility.yul\":11731:11862   */\n      tag_242\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11723:11862   */\n      swap1\n      pop\n        /* \"#utility.yul\":11450:11869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11875:12294   */\n    tag_90:\n        /* \"#utility.yul\":12041:12045   */\n      0x00\n        /* \"#utility.yul\":12079:12081   */\n      0x20\n        /* \"#utility.yul\":12068:12077   */\n      dup3\n        /* \"#utility.yul\":12064:12082   */\n      add\n        /* \"#utility.yul\":12056:12082   */\n      swap1\n      pop\n        /* \"#utility.yul\":12128:12137   */\n      dup2\n        /* \"#utility.yul\":12122:12126   */\n      dup2\n        /* \"#utility.yul\":12118:12138   */\n      sub\n        /* \"#utility.yul\":12114:12115   */\n      0x00\n        /* \"#utility.yul\":12103:12112   */\n      dup4\n        /* \"#utility.yul\":12099:12116   */\n      add\n        /* \"#utility.yul\":12092:12139   */\n      mstore\n        /* \"#utility.yul\":12156:12287   */\n      tag_320\n        /* \"#utility.yul\":12282:12286   */\n      dup2\n        /* \"#utility.yul\":12156:12287   */\n      tag_247\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12148:12287   */\n      swap1\n      pop\n        /* \"#utility.yul\":11875:12294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12300:12719   */\n    tag_95:\n        /* \"#utility.yul\":12466:12470   */\n      0x00\n        /* \"#utility.yul\":12504:12506   */\n      0x20\n        /* \"#utility.yul\":12493:12502   */\n      dup3\n        /* \"#utility.yul\":12489:12507   */\n      add\n        /* \"#utility.yul\":12481:12507   */\n      swap1\n      pop\n        /* \"#utility.yul\":12553:12562   */\n      dup2\n        /* \"#utility.yul\":12547:12551   */\n      dup2\n        /* \"#utility.yul\":12543:12563   */\n      sub\n        /* \"#utility.yul\":12539:12540   */\n      0x00\n        /* \"#utility.yul\":12528:12537   */\n      dup4\n        /* \"#utility.yul\":12524:12541   */\n      add\n        /* \"#utility.yul\":12517:12564   */\n      mstore\n        /* \"#utility.yul\":12581:12712   */\n      tag_322\n        /* \"#utility.yul\":12707:12711   */\n      dup2\n        /* \"#utility.yul\":12581:12712   */\n      tag_252\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12573:12712   */\n      swap1\n      pop\n        /* \"#utility.yul\":12300:12719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12725:13144   */\n    tag_76:\n        /* \"#utility.yul\":12891:12895   */\n      0x00\n        /* \"#utility.yul\":12929:12931   */\n      0x20\n        /* \"#utility.yul\":12918:12927   */\n      dup3\n        /* \"#utility.yul\":12914:12932   */\n      add\n        /* \"#utility.yul\":12906:12932   */\n      swap1\n      pop\n        /* \"#utility.yul\":12978:12987   */\n      dup2\n        /* \"#utility.yul\":12972:12976   */\n      dup2\n        /* \"#utility.yul\":12968:12988   */\n      sub\n        /* \"#utility.yul\":12964:12965   */\n      0x00\n        /* \"#utility.yul\":12953:12962   */\n      dup4\n        /* \"#utility.yul\":12949:12966   */\n      add\n        /* \"#utility.yul\":12942:12989   */\n      mstore\n        /* \"#utility.yul\":13006:13137   */\n      tag_324\n        /* \"#utility.yul\":13132:13136   */\n      dup2\n        /* \"#utility.yul\":13006:13137   */\n      tag_257\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12998:13137   */\n      swap1\n      pop\n        /* \"#utility.yul\":12725:13144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13150:13569   */\n    tag_99:\n        /* \"#utility.yul\":13316:13320   */\n      0x00\n        /* \"#utility.yul\":13354:13356   */\n      0x20\n        /* \"#utility.yul\":13343:13352   */\n      dup3\n        /* \"#utility.yul\":13339:13357   */\n      add\n        /* \"#utility.yul\":13331:13357   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13412   */\n      dup2\n        /* \"#utility.yul\":13397:13401   */\n      dup2\n        /* \"#utility.yul\":13393:13413   */\n      sub\n        /* \"#utility.yul\":13389:13390   */\n      0x00\n        /* \"#utility.yul\":13378:13387   */\n      dup4\n        /* \"#utility.yul\":13374:13391   */\n      add\n        /* \"#utility.yul\":13367:13414   */\n      mstore\n        /* \"#utility.yul\":13431:13562   */\n      tag_326\n        /* \"#utility.yul\":13557:13561   */\n      dup2\n        /* \"#utility.yul\":13431:13562   */\n      tag_262\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":13423:13562   */\n      swap1\n      pop\n        /* \"#utility.yul\":13150:13569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13575:13797   */\n    tag_32:\n        /* \"#utility.yul\":13668:13672   */\n      0x00\n        /* \"#utility.yul\":13706:13708   */\n      0x20\n        /* \"#utility.yul\":13695:13704   */\n      dup3\n        /* \"#utility.yul\":13691:13709   */\n      add\n        /* \"#utility.yul\":13683:13709   */\n      swap1\n      pop\n        /* \"#utility.yul\":13719:13790   */\n      tag_328\n        /* \"#utility.yul\":13787:13788   */\n      0x00\n        /* \"#utility.yul\":13776:13785   */\n      dup4\n        /* \"#utility.yul\":13772:13789   */\n      add\n        /* \"#utility.yul\":13763:13769   */\n      dup5\n        /* \"#utility.yul\":13719:13790   */\n      tag_283\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":13575:13797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13884:14038   */\n    tag_225:\n        /* \"#utility.yul\":13973:13977   */\n      0x00\n        /* \"#utility.yul\":13996:13999   */\n      dup2\n        /* \"#utility.yul\":13988:13999   */\n      swap1\n      pop\n        /* \"#utility.yul\":14026:14030   */\n      0x20\n        /* \"#utility.yul\":14021:14024   */\n      dup3\n        /* \"#utility.yul\":14017:14031   */\n      add\n        /* \"#utility.yul\":14009:14031   */\n      swap1\n      pop\n        /* \"#utility.yul\":13884:14038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14044:14180   */\n    tag_221:\n        /* \"#utility.yul\":14133:14139   */\n      0x00\n        /* \"#utility.yul\":14167:14172   */\n      dup2\n        /* \"#utility.yul\":14161:14173   */\n      mload\n        /* \"#utility.yul\":14151:14173   */\n      swap1\n      pop\n        /* \"#utility.yul\":14044:14180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14186:14321   */\n    tag_231:\n        /* \"#utility.yul\":14278:14282   */\n      0x00\n        /* \"#utility.yul\":14310:14314   */\n      0x20\n        /* \"#utility.yul\":14305:14308   */\n      dup3\n        /* \"#utility.yul\":14301:14315   */\n      add\n        /* \"#utility.yul\":14293:14315   */\n      swap1\n      pop\n        /* \"#utility.yul\":14186:14321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14327:14533   */\n    tag_223:\n        /* \"#utility.yul\":14448:14459   */\n      0x00\n        /* \"#utility.yul\":14482:14488   */\n      dup3\n        /* \"#utility.yul\":14477:14480   */\n      dup3\n        /* \"#utility.yul\":14470:14489   */\n      mstore\n        /* \"#utility.yul\":14522:14526   */\n      0x20\n        /* \"#utility.yul\":14517:14520   */\n      dup3\n        /* \"#utility.yul\":14513:14527   */\n      add\n        /* \"#utility.yul\":14498:14527   */\n      swap1\n      pop\n        /* \"#utility.yul\":14327:14533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14539:14708   */\n    tag_239:\n        /* \"#utility.yul\":14623:14634   */\n      0x00\n        /* \"#utility.yul\":14657:14663   */\n      dup3\n        /* \"#utility.yul\":14652:14655   */\n      dup3\n        /* \"#utility.yul\":14645:14664   */\n      mstore\n        /* \"#utility.yul\":14697:14701   */\n      0x20\n        /* \"#utility.yul\":14692:14695   */\n      dup3\n        /* \"#utility.yul\":14688:14702   */\n      add\n        /* \"#utility.yul\":14673:14702   */\n      swap1\n      pop\n        /* \"#utility.yul\":14539:14708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14714:15019   */\n    tag_92:\n        /* \"#utility.yul\":14754:14757   */\n      0x00\n        /* \"#utility.yul\":14773:14793   */\n      tag_337\n        /* \"#utility.yul\":14791:14792   */\n      dup3\n        /* \"#utility.yul\":14773:14793   */\n      tag_282\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14768:14793   */\n      swap2\n      pop\n        /* \"#utility.yul\":14807:14827   */\n      tag_338\n        /* \"#utility.yul\":14825:14826   */\n      dup4\n        /* \"#utility.yul\":14807:14827   */\n      tag_282\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":14802:14827   */\n      swap3\n      pop\n        /* \"#utility.yul\":14961:14962   */\n      dup3\n        /* \"#utility.yul\":14893:14959   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14889:14963   */\n      sub\n        /* \"#utility.yul\":14886:14887   */\n      dup3\n        /* \"#utility.yul\":14883:14964   */\n      gt\n        /* \"#utility.yul\":14880:14987   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14967:14985   */\n      tag_340\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14880:14987   */\n    tag_339:\n        /* \"#utility.yul\":15011:15012   */\n      dup3\n        /* \"#utility.yul\":15008:15009   */\n      dup3\n        /* \"#utility.yul\":15004:15013   */\n      add\n        /* \"#utility.yul\":14997:15013   */\n      swap1\n      pop\n        /* \"#utility.yul\":14714:15019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15025:15216   */\n    tag_124:\n        /* \"#utility.yul\":15065:15069   */\n      0x00\n        /* \"#utility.yul\":15085:15105   */\n      tag_343\n        /* \"#utility.yul\":15103:15104   */\n      dup3\n        /* \"#utility.yul\":15085:15105   */\n      tag_282\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":15080:15105   */\n      swap2\n      pop\n        /* \"#utility.yul\":15119:15139   */\n      tag_344\n        /* \"#utility.yul\":15137:15138   */\n      dup4\n        /* \"#utility.yul\":15119:15139   */\n      tag_282\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":15114:15139   */\n      swap3\n      pop\n        /* \"#utility.yul\":15158:15159   */\n      dup3\n        /* \"#utility.yul\":15155:15156   */\n      dup3\n        /* \"#utility.yul\":15152:15160   */\n      lt\n        /* \"#utility.yul\":15149:15183   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":15163:15181   */\n      tag_346\n      tag_341\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15149:15183   */\n    tag_345:\n        /* \"#utility.yul\":15208:15209   */\n      dup3\n        /* \"#utility.yul\":15205:15206   */\n      dup3\n        /* \"#utility.yul\":15201:15210   */\n      sub\n        /* \"#utility.yul\":15193:15210   */\n      swap1\n      pop\n        /* \"#utility.yul\":15025:15216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15222:15318   */\n    tag_214:\n        /* \"#utility.yul\":15259:15266   */\n      0x00\n        /* \"#utility.yul\":15288:15312   */\n      tag_348\n        /* \"#utility.yul\":15306:15311   */\n      dup3\n        /* \"#utility.yul\":15288:15312   */\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":15277:15312   */\n      swap1\n      pop\n        /* \"#utility.yul\":15222:15318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15324:15414   */\n    tag_235:\n        /* \"#utility.yul\":15358:15365   */\n      0x00\n        /* \"#utility.yul\":15401:15406   */\n      dup2\n        /* \"#utility.yul\":15394:15407   */\n      iszero\n        /* \"#utility.yul\":15387:15408   */\n      iszero\n        /* \"#utility.yul\":15376:15408   */\n      swap1\n      pop\n        /* \"#utility.yul\":15324:15414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15420:15546   */\n    tag_349:\n        /* \"#utility.yul\":15457:15464   */\n      0x00\n        /* \"#utility.yul\":15497:15539   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15490:15495   */\n      dup3\n        /* \"#utility.yul\":15486:15540   */\n      and\n        /* \"#utility.yul\":15475:15540   */\n      swap1\n      pop\n        /* \"#utility.yul\":15420:15546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15552:15629   */\n    tag_282:\n        /* \"#utility.yul\":15589:15596   */\n      0x00\n        /* \"#utility.yul\":15618:15623   */\n      dup2\n        /* \"#utility.yul\":15607:15623   */\n      swap1\n      pop\n        /* \"#utility.yul\":15552:15629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15635:15721   */\n    tag_288:\n        /* \"#utility.yul\":15670:15677   */\n      0x00\n        /* \"#utility.yul\":15710:15714   */\n      0xff\n        /* \"#utility.yul\":15703:15708   */\n      dup3\n        /* \"#utility.yul\":15699:15715   */\n      and\n        /* \"#utility.yul\":15688:15715   */\n      swap1\n      pop\n        /* \"#utility.yul\":15635:15721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15727:15960   */\n    tag_141:\n        /* \"#utility.yul\":15766:15769   */\n      0x00\n        /* \"#utility.yul\":15789:15813   */\n      tag_355\n        /* \"#utility.yul\":15807:15812   */\n      dup3\n        /* \"#utility.yul\":15789:15813   */\n      tag_282\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":15780:15813   */\n      swap2\n      pop\n        /* \"#utility.yul\":15835:15901   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15828:15833   */\n      dup3\n        /* \"#utility.yul\":15825:15902   */\n      eq\n        /* \"#utility.yul\":15822:15925   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":15905:15923   */\n      tag_357\n      tag_341\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":15822:15925   */\n    tag_356:\n        /* \"#utility.yul\":15952:15953   */\n      0x01\n        /* \"#utility.yul\":15945:15950   */\n      dup3\n        /* \"#utility.yul\":15941:15954   */\n      add\n        /* \"#utility.yul\":15934:15954   */\n      swap1\n      pop\n        /* \"#utility.yul\":15727:15960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15966:16146   */\n    tag_341:\n        /* \"#utility.yul\":16014:16091   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16011:16012   */\n      0x00\n        /* \"#utility.yul\":16004:16092   */\n      mstore\n        /* \"#utility.yul\":16111:16115   */\n      0x11\n        /* \"#utility.yul\":16108:16109   */\n      0x04\n        /* \"#utility.yul\":16101:16116   */\n      mstore\n        /* \"#utility.yul\":16135:16139   */\n      0x24\n        /* \"#utility.yul\":16132:16133   */\n      0x00\n        /* \"#utility.yul\":16125:16140   */\n      revert\n        /* \"#utility.yul\":16152:16332   */\n    tag_139:\n        /* \"#utility.yul\":16200:16277   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16197:16198   */\n      0x00\n        /* \"#utility.yul\":16190:16278   */\n      mstore\n        /* \"#utility.yul\":16297:16301   */\n      0x32\n        /* \"#utility.yul\":16294:16295   */\n      0x04\n        /* \"#utility.yul\":16287:16302   */\n      mstore\n        /* \"#utility.yul\":16321:16325   */\n      0x24\n        /* \"#utility.yul\":16318:16319   */\n      0x00\n        /* \"#utility.yul\":16311:16326   */\n      revert\n        /* \"#utility.yul\":16338:16518   */\n    tag_127:\n        /* \"#utility.yul\":16386:16463   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16383:16384   */\n      0x00\n        /* \"#utility.yul\":16376:16464   */\n      mstore\n        /* \"#utility.yul\":16483:16487   */\n      0x41\n        /* \"#utility.yul\":16480:16481   */\n      0x04\n        /* \"#utility.yul\":16473:16488   */\n      mstore\n        /* \"#utility.yul\":16507:16511   */\n      0x24\n        /* \"#utility.yul\":16504:16505   */\n      0x00\n        /* \"#utility.yul\":16497:16512   */\n      revert\n        /* \"#utility.yul\":16647:16764   */\n    tag_193:\n        /* \"#utility.yul\":16756:16757   */\n      0x00\n        /* \"#utility.yul\":16753:16754   */\n      dup1\n        /* \"#utility.yul\":16746:16758   */\n      revert\n        /* \"#utility.yul\":16770:16947   */\n    tag_241:\n        /* \"#utility.yul\":16910:16939   */\n      0x4552524f523a20494e53554646494349454e542042414c414e43450000000000\n        /* \"#utility.yul\":16906:16907   */\n      0x00\n        /* \"#utility.yul\":16898:16904   */\n      dup3\n        /* \"#utility.yul\":16894:16908   */\n      add\n        /* \"#utility.yul\":16887:16940   */\n      mstore\n        /* \"#utility.yul\":16770:16947   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16953:17178   */\n    tag_246:\n        /* \"#utility.yul\":17093:17127   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17089:17090   */\n      0x00\n        /* \"#utility.yul\":17081:17087   */\n      dup3\n        /* \"#utility.yul\":17077:17091   */\n      add\n        /* \"#utility.yul\":17070:17128   */\n      mstore\n        /* \"#utility.yul\":17162:17170   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17157:17159   */\n      0x20\n        /* \"#utility.yul\":17149:17155   */\n      dup3\n        /* \"#utility.yul\":17145:17160   */\n      add\n        /* \"#utility.yul\":17138:17171   */\n      mstore\n        /* \"#utility.yul\":16953:17178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17356   */\n    tag_251:\n        /* \"#utility.yul\":17324:17348   */\n      0x5374616b696e67204973204e6f7420456e61626c656400000000000000000000\n        /* \"#utility.yul\":17320:17321   */\n      0x00\n        /* \"#utility.yul\":17312:17318   */\n      dup3\n        /* \"#utility.yul\":17308:17322   */\n      add\n        /* \"#utility.yul\":17301:17349   */\n      mstore\n        /* \"#utility.yul\":17184:17356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17362:17532   */\n    tag_256:\n        /* \"#utility.yul\":17502:17524   */\n      0x4552524f523a204d4158494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":17498:17499   */\n      0x00\n        /* \"#utility.yul\":17490:17496   */\n      dup3\n        /* \"#utility.yul\":17486:17500   */\n      add\n        /* \"#utility.yul\":17479:17525   */\n      mstore\n        /* \"#utility.yul\":17362:17532   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17538:17720   */\n    tag_261:\n        /* \"#utility.yul\":17678:17712   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17674:17675   */\n      0x00\n        /* \"#utility.yul\":17666:17672   */\n      dup3\n        /* \"#utility.yul\":17662:17676   */\n      add\n        /* \"#utility.yul\":17655:17713   */\n      mstore\n        /* \"#utility.yul\":17538:17720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17726:17896   */\n    tag_266:\n        /* \"#utility.yul\":17866:17888   */\n      0x4552524f523a204d494e494d554d205354414b45000000000000000000000000\n        /* \"#utility.yul\":17862:17863   */\n      0x00\n        /* \"#utility.yul\":17854:17860   */\n      dup3\n        /* \"#utility.yul\":17850:17864   */\n      add\n        /* \"#utility.yul\":17843:17889   */\n      mstore\n        /* \"#utility.yul\":17726:17896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17902:18024   */\n    tag_178:\n        /* \"#utility.yul\":17975:17999   */\n      tag_371\n        /* \"#utility.yul\":17993:17998   */\n      dup2\n        /* \"#utility.yul\":17975:17999   */\n      tag_214\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":17968:17973   */\n      dup2\n        /* \"#utility.yul\":17965:18000   */\n      eq\n        /* \"#utility.yul\":17955:18018   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":18014:18015   */\n      0x00\n        /* \"#utility.yul\":18011:18012   */\n      dup1\n        /* \"#utility.yul\":18004:18016   */\n      revert\n        /* \"#utility.yul\":17955:18018   */\n    tag_372:\n        /* \"#utility.yul\":17902:18024   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18030:18146   */\n    tag_182:\n        /* \"#utility.yul\":18100:18121   */\n      tag_374\n        /* \"#utility.yul\":18115:18120   */\n      dup2\n        /* \"#utility.yul\":18100:18121   */\n      tag_235\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":18093:18098   */\n      dup2\n        /* \"#utility.yul\":18090:18122   */\n      eq\n        /* \"#utility.yul\":18080:18140   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":18136:18137   */\n      0x00\n        /* \"#utility.yul\":18133:18134   */\n      dup1\n        /* \"#utility.yul\":18126:18138   */\n      revert\n        /* \"#utility.yul\":18080:18140   */\n    tag_375:\n        /* \"#utility.yul\":18030:18146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18152:18274   */\n    tag_186:\n        /* \"#utility.yul\":18225:18249   */\n      tag_377\n        /* \"#utility.yul\":18243:18248   */\n      dup2\n        /* \"#utility.yul\":18225:18249   */\n      tag_282\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":18218:18223   */\n      dup2\n        /* \"#utility.yul\":18215:18250   */\n      eq\n        /* \"#utility.yul\":18205:18268   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":18264:18265   */\n      0x00\n        /* \"#utility.yul\":18261:18262   */\n      dup1\n        /* \"#utility.yul\":18254:18266   */\n      revert\n        /* \"#utility.yul\":18205:18268   */\n    tag_378:\n        /* \"#utility.yul\":18152:18274   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122095e73a0226da1780d0c9f35de214f5b1064197f0d151d80316cdeadd456ad9e864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 82,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 90,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260006002556000600360006101000a81548160ff02191690831515021790555034801561003057600080fd5b5061004d61004261005260201b60201c565b61005a60201b60201c565b61011e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119338061012d6000396000f3fe6080604052600436106100a05760003560e01c8063ad95b1c611610064578063ad95b1c61461017f578063b0adfa09146101a8578063da917aea146101d3578063db568922146101fe578063df6a8a1514610227578063f2fde38b14610250576100a7565b8063356bb8db146100a9578063376aa972146100e957806364cb560c14610126578063715018a61461013d5780638da5cb5b14610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906110c6565b610279565b6040516100e0949392919061143b565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b919061106c565b6102d6565b60405161011d919061157d565b60405180910390f35b34801561013257600080fd5b5061013b6102ee565b005b34801561014957600080fd5b50610152610396565b005b34801561016057600080fd5b5061016961041e565b604051610176919061137b565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906110c6565b610447565b005b3480156101b457600080fd5b506101bd610900565b6040516101ca9190611480565b60405180910390f35b3480156101df57600080fd5b506101e8610a6f565b6040516101f591906114a2565b60405180910390f35b34801561020a57600080fd5b506102256004803603810190610220919061106c565b610a82565b005b34801561023357600080fd5b5061024e600480360381019061024991906110c6565b610b42565b005b34801561025c57600080fd5b506102776004803603810190610272919061106c565b610e13565b005b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60056020528060005260406000206000915090505481565b6102f6610f0b565b73ffffffffffffffffffffffffffffffffffffffff1661031461041e565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103619061153d565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b61039e610f0b565b73ffffffffffffffffffffffffffffffffffffffff166103bc61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104099061153d565b60405180910390fd5b61041c6000610f13565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d906114fd565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906115e2565b111561052d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105249061151d565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058191906115e2565b10156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061155d565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161061e919061137b565b60206040518083038186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e91906110f3565b10156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906114bd565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070e93929190611396565b602060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611099565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b091906115e2565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff1681525090508060046000600160025461080a91906115e2565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546108c891906115e2565b83426040516108da94939291906113f6565b60405180910390a16001600260008282546108f591906115e2565b925050819055505050565b6060600060016002546109139190611638565b67ffffffffffffffff81111561092c5761092b611768565b5b60405190808252806020026020018201604052801561096557816020015b610952610fd7565b81526020019060019003908161094a5790505b5090506000600190505b600254811015610a67576004600060018361098a91906115e2565b81526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff168152505082600183610a389190611638565b81518110610a4957610a48611739565b5b60200260200101819052508080610a5f906116c1565b91505061096f565b508091505090565b600360009054906101000a900460ff1681565b610a8a610f0b565b73ffffffffffffffffffffffffffffffffffffffff16610aa861041e565b73ffffffffffffffffffffffffffffffffffffffff1614610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af59061153d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb906114bd565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c219291906113cd565b602060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190611099565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cc39190611638565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610d1d91906115e2565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610ddb91906115e2565b8342604051610ded94939291906113f6565b60405180910390a1600160026000828254610e0891906115e2565b925050819055505050565b610e1b610f0b565b73ffffffffffffffffffffffffffffffffffffffff16610e3961041e565b73ffffffffffffffffffffffffffffffffffffffff1614610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e869061153d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef6906114dd565b60405180910390fd5b610f0881610f13565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b600081359050611027816118b8565b92915050565b60008151905061103c816118cf565b92915050565b600081359050611051816118e6565b92915050565b600081519050611066816118e6565b92915050565b60006020828403121561108257611081611797565b5b600061109084828501611018565b91505092915050565b6000602082840312156110af576110ae611797565b5b60006110bd8482850161102d565b91505092915050565b6000602082840312156110dc576110db611797565b5b60006110ea84828501611042565b91505092915050565b60006020828403121561110957611108611797565b5b600061111784828501611057565b91505092915050565b600061112c8383611295565b60808301905092915050565b6111418161166c565b82525050565b6111508161166c565b82525050565b6000611161826115a8565b61116b81856115c0565b935061117683611598565b8060005b838110156111a757815161118e8882611120565b9750611199836115b3565b92505060018101905061117a565b5085935050505092915050565b6111bd8161167e565b82525050565b60006111d0601b836115d1565b91506111db8261179c565b602082019050919050565b60006111f36026836115d1565b91506111fe826117c5565b604082019050919050565b60006112166016836115d1565b915061122182611814565b602082019050919050565b60006112396014836115d1565b91506112448261183d565b602082019050919050565b600061125c6020836115d1565b915061126782611866565b602082019050919050565b600061127f6014836115d1565b915061128a8261188f565b602082019050919050565b6080820160008201516112ab6000850182611138565b5060208201516112be602085018261133f565b5060408201516112d1604085018261133f565b5060608201516112e4606085018261135d565b50505050565b6080820160008201516113006000850182611138565b506020820151611313602085018261133f565b506040820151611326604085018261133f565b506060820151611339606085018261135d565b50505050565b611348816116aa565b82525050565b611357816116aa565b82525050565b611366816116b4565b82525050565b611375816116b4565b82525050565b60006020820190506113906000830184611147565b92915050565b60006060820190506113ab6000830186611147565b6113b86020830185611147565b6113c5604083018461134e565b949350505050565b60006040820190506113e26000830185611147565b6113ef602083018461134e565b9392505050565b600060e08201905061140b6000830187611147565b611418602083018661134e565b61142560408301856112ea565b61143260c083018461134e565b95945050505050565b60006080820190506114506000830187611147565b61145d602083018661134e565b61146a604083018561134e565b611477606083018461136c565b95945050505050565b6000602082019050818103600083015261149a8184611156565b905092915050565b60006020820190506114b760008301846111b4565b92915050565b600060208201905081810360008301526114d6816111c3565b9050919050565b600060208201905081810360008301526114f6816111e6565b9050919050565b6000602082019050818103600083015261151681611209565b9050919050565b600060208201905081810360008301526115368161122c565b9050919050565b600060208201905081810360008301526115568161124f565b9050919050565b6000602082019050818103600083015261157681611272565b9050919050565b6000602082019050611592600083018461134e565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115ed826116aa565b91506115f8836116aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162d5761162c61170a565b5b828201905092915050565b6000611643826116aa565b915061164e836116aa565b9250828210156116615761166061170a565b5b828203905092915050565b60006116778261168a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006116cc826116aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116ff576116fe61170a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6118c18161166c565b81146118cc57600080fd5b50565b6118d88161167e565b81146118e357600080fd5b50565b6118ef816116aa565b81146118fa57600080fd5b5056fea264697066735822122095e73a0226da1780d0c9f35de214f5b1064197f0d151d80316cdeadd456ad9e864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x42 PUSH2 0x52 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1933 DUP1 PUSH2 0x12D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD95B1C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x250 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x356BB8DB EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x376AA972 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x64CB560C EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C PUSH1 0x0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST GT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x92C JUMPI PUSH2 0x92B PUSH2 0x1768 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x965 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x952 PUSH2 0xFD7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x94A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA48 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xA5F SWAP1 PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA8 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xDED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE1B PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE39 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0xF13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1027 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x18CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1090 DUP5 DUP3 DUP6 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EA DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH2 0x1108 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112C DUP4 DUP4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1141 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP3 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x116B DUP2 DUP6 PUSH2 0x15C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1176 DUP4 PUSH2 0x1598 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11A7 JUMPI DUP2 MLOAD PUSH2 0x118E DUP9 DUP3 PUSH2 0x1120 JUMP JUMPDEST SWAP8 POP PUSH2 0x1199 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x117A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH1 0x1B DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DB DUP3 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1216 PUSH1 0x16 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1221 DUP3 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1239 PUSH1 0x14 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1244 DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127F PUSH1 0x14 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x128A DUP3 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x12AB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1138 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x12BE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x12D1 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x12E4 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x135D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1300 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1138 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1313 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1326 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1339 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x135D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1390 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x140B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x1418 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1425 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x1432 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1450 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x146A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1477 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x136C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149A DUP2 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1516 DUP2 PUSH2 0x1209 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1536 DUP2 PUSH2 0x122C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1556 DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1576 DUP2 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15ED DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH2 0x15F8 DUP4 PUSH2 0x16AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH2 0x164E DUP4 PUSH2 0x16AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1677 DUP3 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP2 EQ PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18D8 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP2 EQ PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xE7 GASPRICE MUL 0x26 0xDA OR DUP1 0xD0 0xC9 RETURN 0x5D 0xE2 EQ CREATE2 0xB1 MOD COINBASE SWAP8 CREATE 0xD1 MLOAD 0xD8 SUB AND 0xCD 0xEA 0xDD GASLIMIT PUSH11 0xD9E864736F6C6343000807 STOP CALLER ",
							"sourceMap": "386:4673:2:-:0;;;484:1;464:21;;520:5;491:34;;;;;;;;;;;;;;;;;;;;386:4673;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;386:4673:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;386:4673:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@GetStakingHistory_464": {
									"entryPoint": 2304,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@SetStakingToken_227": {
									"entryPoint": 2690,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakeToken_349": {
									"entryPoint": 1095,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@StakingBalances_185": {
									"entryPoint": 726,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StakingEnabled_167": {
									"entryPoint": 2671,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StakingHistory_181": {
									"entryPoint": 633,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ToggleStaking_238": {
									"entryPoint": 750,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UnstakeToken_416": {
									"entryPoint": 2882,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_193": {
									"entryPoint": null,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": 3851,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3859,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 1054,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 918,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3603,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18277:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:3",
														"type": ""
													}
												],
												"src": "440:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:3"
															},
															"nodeType": "YulIf",
															"src": "665:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:3",
														"type": ""
													}
												],
												"src": "589:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:3"
															},
															"nodeType": "YulIf",
															"src": "1008:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:3",
														"type": ""
													}
												],
												"src": "924:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1275:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:3"
															},
															"nodeType": "YulIf",
															"src": "1697:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:3",
														"type": ""
													}
												],
												"src": "1610:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:143:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2187:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2101:77:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:90:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2101:90:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2200:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2218:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2214:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2214:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2200:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2064:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2080:10:3",
														"type": ""
													}
												],
												"src": "1967:267:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2312:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2335:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2317:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2283:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2290:3:3",
														"type": ""
													}
												],
												"src": "2240:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2436:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2459:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2407:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2414:3:3",
														"type": ""
													}
												],
												"src": "2354:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:740:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2728:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2812:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2742:69:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:76:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2732:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2827:115:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2834:95:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:108:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2951:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3038:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2966:71:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:78:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2955:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3053:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3067:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3057:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3143:290:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3157:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3184:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3178:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3161:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3204:114:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3299:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3211:87:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:107:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3204:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3331:92:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3416:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3341:74:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3341:82:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3331:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3105:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3102:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3116:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3118:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3127:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3123:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3118:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3087:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3089:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3098:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3093:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3083:350:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3442:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3449:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2697:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2704:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2713:3:3",
														"type": ""
													}
												],
												"src": "2550:908:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3523:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3540:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3560:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3545:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3533:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3511:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3518:3:3",
														"type": ""
													}
												],
												"src": "3464:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3725:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3735:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3801:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3806:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3742:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3742:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3735:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3907:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																	"nodeType": "YulIdentifier",
																	"src": "3818:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3818:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3920:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3927:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3713:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3721:3:3",
														"type": ""
													}
												],
												"src": "3579:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4097:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4107:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4173:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4114:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4107:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4279:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4190:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4190:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4292:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4303:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4308:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4085:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4093:3:3",
														"type": ""
													}
												],
												"src": "3951:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4479:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4545:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4486:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4651:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																	"nodeType": "YulIdentifier",
																	"src": "4562:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4562:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4675:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4457:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4465:3:3",
														"type": ""
													}
												],
												"src": "4323:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4917:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4922:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4858:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5023:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																	"nodeType": "YulIdentifier",
																	"src": "4934:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4934:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5036:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5047:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5043:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4829:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4837:3:3",
														"type": ""
													}
												],
												"src": "4695:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5213:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5223:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5289:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5294:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5230:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5223:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5395:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5306:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5306:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5408:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5419:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5201:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5209:3:3",
														"type": ""
													}
												],
												"src": "5067:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5585:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5595:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5661:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5602:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5767:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																	"nodeType": "YulIdentifier",
																	"src": "5678:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5780:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5791:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5787:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5780:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5573:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5581:3:3",
														"type": ""
													}
												],
												"src": "5439:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5979:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5989:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6005:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6010:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6001:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6001:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5993:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6025:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6061:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6091:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6098:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6087:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6087:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6081:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6065:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6151:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6169:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6174:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6165:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6165:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6117:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6117:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6200:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6237:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6267:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6274:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6263:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6263:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6257:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6257:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6241:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6327:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6345:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6350:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6341:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6341:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6293:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6293:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6293:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6376:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6416:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6446:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6453:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6442:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6442:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6436:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6436:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6420:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6506:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6524:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6529:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6520:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6472:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6472:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6555:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6595:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6625:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6632:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6621:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6621:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6615:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6615:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6599:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6681:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6699:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6704:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6695:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6651:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6651:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6651:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5966:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5973:3:3",
														"type": ""
													}
												],
												"src": "5879:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6911:748:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6921:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6937:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6942:4:3",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6933:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6925:4:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6957:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6993:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7023:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7030:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7019:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7019:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7013:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6997:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7083:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7101:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7106:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7097:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7097:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7049:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7049:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7049:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7132:166:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7169:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7199:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7206:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7195:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7195:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7189:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7189:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7173:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7259:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7277:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7282:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7273:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7273:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7225:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7225:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7225:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7308:169:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7348:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7378:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7385:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7374:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7374:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7368:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7352:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7438:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7456:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7461:4:3",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7452:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7452:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7404:33:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7404:63:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7404:63:3"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7487:165:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7527:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7557:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7564:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7553:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7553:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7547:5:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7547:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7531:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7613:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7631:3:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7636:4:3",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7627:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7627:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7583:29:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7583:59:3"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7583:59:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6898:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6905:3:3",
														"type": ""
													}
												],
												"src": "6801:858:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7720:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7737:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7760:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7742:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7742:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7730:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7730:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7708:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7715:3:3",
														"type": ""
													}
												],
												"src": "7665:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7844:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7861:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7884:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7866:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7866:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7854:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7832:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7839:3:3",
														"type": ""
													}
												],
												"src": "7779:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7992:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7976:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7976:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7964:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7964:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7964:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7942:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7949:3:3",
														"type": ""
													}
												],
												"src": "7903:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8072:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8089:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8110:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8094:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8094:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8082:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8060:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8067:3:3",
														"type": ""
													}
												],
												"src": "8011:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8227:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8249:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8245:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8237:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8317:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8341:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8326:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8326:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8273:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8199:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8211:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8222:4:3",
														"type": ""
													}
												],
												"src": "8129:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8511:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8521:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8533:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8544:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8521:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8601:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8614:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8625:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8610:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8610:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8557:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8557:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8695:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8706:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8691:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8691:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8638:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8638:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8638:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8764:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8720:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8720:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8720:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8467:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8479:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8487:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8495:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8506:4:3",
														"type": ""
													}
												],
												"src": "8357:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8931:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8941:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8953:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8964:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8949:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8949:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8941:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9021:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9034:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9045:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8977:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8977:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8977:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9102:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9115:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9126:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9111:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9111:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9058:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9058:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8895:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8907:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8915:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8926:4:3",
														"type": ""
													}
												],
												"src": "8805:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9369:416:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9379:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9391:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9402:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9379:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9460:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9473:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9484:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9469:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9469:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9416:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9416:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9416:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9541:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9554:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9565:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9550:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9550:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9497:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9497:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9667:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9579:87:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:116:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9579:116:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9749:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9762:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9773:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9758:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9705:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9705:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9705:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9317:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9329:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9337:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9345:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9353:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9364:4:3",
														"type": ""
													}
												],
												"src": "9143:642:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9969:367:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9979:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9991:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10002:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9987:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9987:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9979:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10060:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10073:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10084:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10069:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10069:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10016:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10016:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10141:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10154:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10165:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10150:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10097:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10097:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10097:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10223:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10236:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10247:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10232:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10232:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10179:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10179:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10179:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10301:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10314:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10325:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10310:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10261:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:68:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10261:68:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9917:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9929:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9937:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9945:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9953:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9964:4:3",
														"type": ""
													}
												],
												"src": "9791:545:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10534:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10544:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10556:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10544:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10591:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10602:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10587:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10587:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10610:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10616:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10606:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10606:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10580:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10580:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10580:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10636:160:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10782:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10791:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10644:137:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10644:152:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10636:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10506:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10518:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10529:4:3",
														"type": ""
													}
												],
												"src": "10342:461:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10901:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10911:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10923:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10934:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10919:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10919:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10911:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10985:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11009:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10994:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10947:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10947:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10947:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10873:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10885:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10896:4:3",
														"type": ""
													}
												],
												"src": "10809:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11218:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11206:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11264:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11249:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11272:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11268:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11242:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11298:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11432:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11306:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11298:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11176:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11191:4:3",
														"type": ""
													}
												],
												"src": "11025:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11621:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11631:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11643:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11654:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11639:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11639:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11631:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11678:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11689:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11674:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11674:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11697:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11703:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11693:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11723:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11857:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11731:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11723:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11601:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11616:4:3",
														"type": ""
													}
												],
												"src": "11450:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12046:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12056:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12068:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12079:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12064:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12064:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12056:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12103:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12114:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12099:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12099:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12122:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12128:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12118:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12092:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12148:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12282:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12156:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12156:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12148:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12026:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12041:4:3",
														"type": ""
													}
												],
												"src": "11875:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12471:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12481:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12493:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12504:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12489:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12481:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12528:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12539:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12524:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12524:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12547:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12553:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12543:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12543:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12517:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12517:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12573:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12707:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12581:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12581:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12573:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12451:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12466:4:3",
														"type": ""
													}
												],
												"src": "12300:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12896:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12906:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12918:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12929:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12914:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12906:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12953:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12964:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12949:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12949:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12972:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12978:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12968:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12968:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12942:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12942:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12998:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13132:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13006:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13006:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12998:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12876:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12891:4:3",
														"type": ""
													}
												],
												"src": "12725:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13321:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13331:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13343:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13354:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13331:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13378:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13389:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13374:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13374:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13397:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13393:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13393:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13423:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13557:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13431:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13431:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13423:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13301:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13316:4:3",
														"type": ""
													}
												],
												"src": "13150:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13673:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13683:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13695:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13706:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13691:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13691:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13683:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13763:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13776:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13787:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13772:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13772:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13719:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13719:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13719:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13645:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13657:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13668:4:3",
														"type": ""
													}
												],
												"src": "13575:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13843:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13853:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13869:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13863:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13863:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "13853:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13836:6:3",
														"type": ""
													}
												],
												"src": "13803:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13978:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13988:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "13996:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "13988:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14009:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14021:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14026:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14017:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14017:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14009:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13965:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13973:4:3",
														"type": ""
													}
												],
												"src": "13884:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14140:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14151:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14167:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14161:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14161:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14151:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14123:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14133:6:3",
														"type": ""
													}
												],
												"src": "14044:136:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14283:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14293:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14305:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14310:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14301:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "14293:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14270:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14278:4:3",
														"type": ""
													}
												],
												"src": "14186:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14460:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14477:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14482:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14470:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14498:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14517:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14522:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14513:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14498:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14432:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14437:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14448:11:3",
														"type": ""
													}
												],
												"src": "14327:206:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14635:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14652:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14657:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14645:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14645:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14645:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14673:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14692:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14697:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14688:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14673:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14607:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14612:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14623:11:3",
														"type": ""
													}
												],
												"src": "14539:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14758:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14768:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14791:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14773:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14773:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14768:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14802:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14825:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14807:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14807:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14802:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14965:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14967:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14967:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14967:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14886:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14893:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14961:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14889:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14889:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14883:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14883:81:3"
															},
															"nodeType": "YulIf",
															"src": "14880:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14997:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15008:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15011:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15004:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15004:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14997:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14745:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14748:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14754:3:3",
														"type": ""
													}
												],
												"src": "14714:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15070:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15080:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15103:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15085:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15085:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15080:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15114:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15137:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15119:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15119:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15114:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15161:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15163:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15163:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15163:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15155:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15158:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15152:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15152:8:3"
															},
															"nodeType": "YulIf",
															"src": "15149:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15193:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15205:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15208:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15201:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15201:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15193:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15056:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15059:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15065:4:3",
														"type": ""
													}
												],
												"src": "15025:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15267:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15277:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15306:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15288:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15288:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15277:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15249:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15259:7:3",
														"type": ""
													}
												],
												"src": "15222:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15366:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15376:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15401:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15394:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15394:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15387:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15387:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15376:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15348:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15358:7:3",
														"type": ""
													}
												],
												"src": "15324:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15465:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15475:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15490:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15497:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15486:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15475:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15447:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15457:7:3",
														"type": ""
													}
												],
												"src": "15420:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15597:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15607:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15618:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15607:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15579:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15589:7:3",
														"type": ""
													}
												],
												"src": "15552:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15678:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15688:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15703:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15710:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15699:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15699:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15688:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15660:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15670:7:3",
														"type": ""
													}
												],
												"src": "15635:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15770:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15780:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15807:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15789:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15789:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15780:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15903:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15905:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15905:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15905:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15828:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15835:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15825:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15825:77:3"
															},
															"nodeType": "YulIf",
															"src": "15822:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15934:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15945:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15952:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15941:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15941:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15934:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15756:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15766:3:3",
														"type": ""
													}
												],
												"src": "15727:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15994:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16011:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16014:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16004:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16004:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16108:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16111:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16101:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16101:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16101:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16132:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16135:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16125:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16125:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15966:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16180:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16197:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16200:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16190:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16190:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16190:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16294:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16297:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16287:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16287:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16318:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16321:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16311:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16311:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16311:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16152:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16366:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16383:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16386:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16376:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16376:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16376:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16480:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16483:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16473:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16473:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16504:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16507:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16497:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16497:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16338:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16613:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16630:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16633:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16623:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16623:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16623:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "16524:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16736:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16753:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16756:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16746:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16746:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16746:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "16647:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16876:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16898:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16906:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16894:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16894:14:3"
																	},
																	{
																		"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16910:29:3",
																		"type": "",
																		"value": "ERROR: INSUFFICIENT BALANCE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16887:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "16887:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16887:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16868:6:3",
														"type": ""
													}
												],
												"src": "16770:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17059:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17081:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17089:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17077:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17077:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17093:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17070:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17070:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17070:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17149:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17157:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17145:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17145:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17162:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17138:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17138:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17138:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17051:6:3",
														"type": ""
													}
												],
												"src": "16953:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17290:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17312:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17320:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17308:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17308:14:3"
																	},
																	{
																		"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17324:24:3",
																		"type": "",
																		"value": "Staking Is Not Enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17301:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17301:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17301:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17282:6:3",
														"type": ""
													}
												],
												"src": "17184:172:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17468:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17490:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17498:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17486:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17486:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d4158494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17502:22:3",
																		"type": "",
																		"value": "ERROR: MAXIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17479:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17479:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17479:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17460:6:3",
														"type": ""
													}
												],
												"src": "17362:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17644:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17666:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17674:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17662:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17662:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17678:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17655:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17655:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17655:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17636:6:3",
														"type": ""
													}
												],
												"src": "17538:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17832:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17854:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17862:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17850:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17850:14:3"
																	},
																	{
																		"hexValue": "4552524f523a204d494e494d554d205354414b45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17866:22:3",
																		"type": "",
																		"value": "ERROR: MINIMUM STAKE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17843:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17843:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17843:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17824:6:3",
														"type": ""
													}
												],
												"src": "17726:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17945:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18002:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18011:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18014:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18004:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18004:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18004:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17968:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17993:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17975:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17975:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17965:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17965:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17958:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "17958:43:3"
															},
															"nodeType": "YulIf",
															"src": "17955:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17938:5:3",
														"type": ""
													}
												],
												"src": "17902:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18070:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18124:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18133:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18136:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18126:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18126:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18126:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18093:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18115:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18100:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18100:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18090:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18090:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "18083:40:3"
															},
															"nodeType": "YulIf",
															"src": "18080:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18063:5:3",
														"type": ""
													}
												],
												"src": "18030:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18195:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18252:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18261:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18264:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18254:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18254:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18254:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18218:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18243:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18225:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18225:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18215:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "18208:43:3"
															},
															"nodeType": "YulIf",
															"src": "18205:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18188:5:3",
														"type": ""
													}
												],
												"src": "18152:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct StakingContract.Stake[] -> struct StakingContract.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(pos)\n        end := add(pos, 32)\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct StakingContract.Stake -> struct StakingContract.Stake\n    function abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // EventTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // eventType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__to_t_address_t_uint256_t_struct$_Stake_$176_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_struct$_Stake_$176_memory_ptr_to_t_struct$_Stake_$176_memory_ptr_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint8__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: INSUFFICIENT BALANCE\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking Is Not Enabled\")\n\n    }\n\n    function store_literal_in_memory_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MAXIMUM STAKE\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: MINIMUM STAKE\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c8063ad95b1c611610064578063ad95b1c61461017f578063b0adfa09146101a8578063da917aea146101d3578063db568922146101fe578063df6a8a1514610227578063f2fde38b14610250576100a7565b8063356bb8db146100a9578063376aa972146100e957806364cb560c14610126578063715018a61461013d5780638da5cb5b14610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906110c6565b610279565b6040516100e0949392919061143b565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b919061106c565b6102d6565b60405161011d919061157d565b60405180910390f35b34801561013257600080fd5b5061013b6102ee565b005b34801561014957600080fd5b50610152610396565b005b34801561016057600080fd5b5061016961041e565b604051610176919061137b565b60405180910390f35b34801561018b57600080fd5b506101a660048036038101906101a191906110c6565b610447565b005b3480156101b457600080fd5b506101bd610900565b6040516101ca9190611480565b60405180910390f35b3480156101df57600080fd5b506101e8610a6f565b6040516101f591906114a2565b60405180910390f35b34801561020a57600080fd5b506102256004803603810190610220919061106c565b610a82565b005b34801561023357600080fd5b5061024e600480360381019061024991906110c6565b610b42565b005b34801561025c57600080fd5b506102776004803603810190610272919061106c565b610e13565b005b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60056020528060005260406000206000915090505481565b6102f6610f0b565b73ffffffffffffffffffffffffffffffffffffffff1661031461041e565b73ffffffffffffffffffffffffffffffffffffffff161461036a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103619061153d565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550565b61039e610f0b565b73ffffffffffffffffffffffffffffffffffffffff166103bc61041e565b73ffffffffffffffffffffffffffffffffffffffff1614610412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104099061153d565b60405180910390fd5b61041c6000610f13565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900460ff16610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d906114fd565b60405180910390fd5b69d3c21bcecceda100000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906115e2565b111561052d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105249061151d565b60405180910390fd5b678ac7230489e8000081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058191906115e2565b10156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061155d565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161061e919061137b565b60206040518083038186803b15801561063657600080fd5b505afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e91906110f3565b10156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906114bd565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161070e93929190611396565b602060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190611099565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b091906115e2565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600060ff1681525090508060046000600160025461080a91906115e2565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f62cb55e360f9d0014feeb0753042d6fc5798187ede3ddadbf54c03881f53b6123360016002546108c891906115e2565b83426040516108da94939291906113f6565b60405180910390a16001600260008282546108f591906115e2565b925050819055505050565b6060600060016002546109139190611638565b67ffffffffffffffff81111561092c5761092b611768565b5b60405190808252806020026020018201604052801561096557816020015b610952610fd7565b81526020019060019003908161094a5790505b5090506000600190505b600254811015610a67576004600060018361098a91906115e2565b81526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff168152505082600183610a389190611638565b81518110610a4957610a48611739565b5b60200260200101819052508080610a5f906116c1565b91505061096f565b508091505090565b600360009054906101000a900460ff1681565b610a8a610f0b565b73ffffffffffffffffffffffffffffffffffffffff16610aa861041e565b73ffffffffffffffffffffffffffffffffffffffff1614610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af59061153d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb906114bd565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c219291906113cd565b602060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190611099565b5080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cc39190611638565b92505081905550600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001428152602001600160ff16815250905080600460006001600254610d1d91906115e2565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908360ff1602179055509050507f27e09d0dfd4290ba6bbad99e9ed98fce69333c5281617ea1333041d739705b24336001600254610ddb91906115e2565b8342604051610ded94939291906113f6565b60405180910390a1600160026000828254610e0891906115e2565b925050819055505050565b610e1b610f0b565b73ffffffffffffffffffffffffffffffffffffffff16610e3961041e565b73ffffffffffffffffffffffffffffffffffffffff1614610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e869061153d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef6906114dd565b60405180910390fd5b610f0881610f13565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681525090565b600081359050611027816118b8565b92915050565b60008151905061103c816118cf565b92915050565b600081359050611051816118e6565b92915050565b600081519050611066816118e6565b92915050565b60006020828403121561108257611081611797565b5b600061109084828501611018565b91505092915050565b6000602082840312156110af576110ae611797565b5b60006110bd8482850161102d565b91505092915050565b6000602082840312156110dc576110db611797565b5b60006110ea84828501611042565b91505092915050565b60006020828403121561110957611108611797565b5b600061111784828501611057565b91505092915050565b600061112c8383611295565b60808301905092915050565b6111418161166c565b82525050565b6111508161166c565b82525050565b6000611161826115a8565b61116b81856115c0565b935061117683611598565b8060005b838110156111a757815161118e8882611120565b9750611199836115b3565b92505060018101905061117a565b5085935050505092915050565b6111bd8161167e565b82525050565b60006111d0601b836115d1565b91506111db8261179c565b602082019050919050565b60006111f36026836115d1565b91506111fe826117c5565b604082019050919050565b60006112166016836115d1565b915061122182611814565b602082019050919050565b60006112396014836115d1565b91506112448261183d565b602082019050919050565b600061125c6020836115d1565b915061126782611866565b602082019050919050565b600061127f6014836115d1565b915061128a8261188f565b602082019050919050565b6080820160008201516112ab6000850182611138565b5060208201516112be602085018261133f565b5060408201516112d1604085018261133f565b5060608201516112e4606085018261135d565b50505050565b6080820160008201516113006000850182611138565b506020820151611313602085018261133f565b506040820151611326604085018261133f565b506060820151611339606085018261135d565b50505050565b611348816116aa565b82525050565b611357816116aa565b82525050565b611366816116b4565b82525050565b611375816116b4565b82525050565b60006020820190506113906000830184611147565b92915050565b60006060820190506113ab6000830186611147565b6113b86020830185611147565b6113c5604083018461134e565b949350505050565b60006040820190506113e26000830185611147565b6113ef602083018461134e565b9392505050565b600060e08201905061140b6000830187611147565b611418602083018661134e565b61142560408301856112ea565b61143260c083018461134e565b95945050505050565b60006080820190506114506000830187611147565b61145d602083018661134e565b61146a604083018561134e565b611477606083018461136c565b95945050505050565b6000602082019050818103600083015261149a8184611156565b905092915050565b60006020820190506114b760008301846111b4565b92915050565b600060208201905081810360008301526114d6816111c3565b9050919050565b600060208201905081810360008301526114f6816111e6565b9050919050565b6000602082019050818103600083015261151681611209565b9050919050565b600060208201905081810360008301526115368161122c565b9050919050565b600060208201905081810360008301526115568161124f565b9050919050565b6000602082019050818103600083015261157681611272565b9050919050565b6000602082019050611592600083018461134e565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115ed826116aa565b91506115f8836116aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162d5761162c61170a565b5b828201905092915050565b6000611643826116aa565b915061164e836116aa565b9250828210156116615761166061170a565b5b828203905092915050565b60006116778261168a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006116cc826116aa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116ff576116fe61170a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4552524f523a20494e53554646494349454e542042414c414e43450000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5374616b696e67204973204e6f7420456e61626c656400000000000000000000600082015250565b7f4552524f523a204d4158494d554d205354414b45000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4552524f523a204d494e494d554d205354414b45000000000000000000000000600082015250565b6118c18161166c565b81146118cc57600080fd5b50565b6118d88161167e565b81146118e357600080fd5b50565b6118ef816116aa565b81146118fa57600080fd5b5056fea264697066735822122095e73a0226da1780d0c9f35de214f5b1064197f0d151d80316cdeadd456ad9e864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD95B1C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD95B1C6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xB0ADFA09 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDA917AEA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDB568922 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDF6A8A15 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x250 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x356BB8DB EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x376AA972 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x64CB560C EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI PUSH2 0xA7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xA7 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13B PUSH2 0x2EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH2 0x396 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xA82 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xE13 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x314 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x39E PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BC PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x412 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x409 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C PUSH1 0x0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST GT ISZERO PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x524 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST LT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A6 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x8DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x92C JUMPI PUSH2 0x92B PUSH2 0x1768 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x965 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x952 PUSH2 0xFD7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x94A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xA49 JUMPI PUSH2 0xA48 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xA5F SWAP1 PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x96F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA8 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBB SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCC3 SWAP2 SWAP1 PUSH2 0x1638 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24 CALLER PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xDED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xE1B PUSH2 0xF0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE39 PUSH2 0x41E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF08 DUP2 PUSH2 0xF13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1027 DUP2 PUSH2 0x18B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x18CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1090 DUP5 DUP3 DUP6 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BD DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH2 0x10DB PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EA DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH2 0x1108 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112C DUP4 DUP4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1141 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP3 PUSH2 0x15A8 JUMP JUMPDEST PUSH2 0x116B DUP2 DUP6 PUSH2 0x15C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1176 DUP4 PUSH2 0x1598 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11A7 JUMPI DUP2 MLOAD PUSH2 0x118E DUP9 DUP3 PUSH2 0x1120 JUMP JUMPDEST SWAP8 POP PUSH2 0x1199 DUP4 PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x117A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11BD DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH1 0x1B DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DB DUP3 PUSH2 0x179C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1216 PUSH1 0x16 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1221 DUP3 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1239 PUSH1 0x14 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1244 DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127F PUSH1 0x14 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x128A DUP3 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x12AB PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1138 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x12BE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x12D1 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x12E4 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x135D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1300 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1138 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1313 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1326 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1339 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x135D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1366 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1390 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x13EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x140B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x1418 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1425 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x1432 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1450 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x145D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x146A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x1477 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x136C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149A DUP2 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x11C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1516 DUP2 PUSH2 0x1209 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1536 DUP2 PUSH2 0x122C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1556 DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1576 DUP2 PUSH2 0x1272 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15ED DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH2 0x15F8 DUP4 PUSH2 0x16AA JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH2 0x164E DUP4 PUSH2 0x16AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1677 DUP3 PUSH2 0x168A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP3 PUSH2 0x16AA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x16FF JUMPI PUSH2 0x16FE PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4552524F523A20494E53554646494349454E542042414C414E43450000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E67204973204E6F7420456E61626C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D4158494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A204D494E494D554D205354414B45000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18C1 DUP2 PUSH2 0x166C JUMP JUMPDEST DUP2 EQ PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18D8 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x16AA JUMP JUMPDEST DUP2 EQ PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xE7 GASPRICE MUL 0x26 0xDA OR DUP1 0xD0 0xC9 RETURN 0x5D 0xE2 EQ CREATE2 0xB1 MOD COINBASE SWAP8 CREATE 0xD1 MLOAD 0xD8 SUB AND 0xCD 0xEA 0xDD GASLIMIT PUSH11 0xD9E864736F6C6343000807 STOP CALLER ",
							"sourceMap": "386:4673:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;934:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1406:91;;;;;;;;;;;;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1559:786:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2911:257;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;491:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1300:96;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2403:502;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;852:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;934:48::-;;;;;;;;;;;;;;;;;:::o;1406:91::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1476:14:2::1;;;;;;;;;;;1475:15;1458:14;;:32;;;;;;;;;;;;;;;;;;1406:91::o:0;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1559:786:2:-;1620:14;;;;;;;;;;;1612:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1719:14;1709:6;1679:15;:27;1695:10;1679:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:54;;1671:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1838:9;1828:6;1798:15;:27;1814:10;1798:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;:49;;1790:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1952:6;1913:12;;;;;;;;;;;1907:29;;;1937:10;1907:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;1898:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2007:12;;;;;;;;;;;2001:32;;;2034:10;2054:4;2061:6;2001:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2109:6;2078:15;:27;2094:10;2078:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2125:21;2149:44;;;;;;;;2155:10;2149:44;;;;;;2166:6;2149:44;;;;2174:15;2149:44;;;;2191:1;2149:44;;;;;2125:68;;2233:8;2203:14;:27;2228:1;2218:9;;:11;;;;:::i;:::-;2203:27;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:60;2265:10;2287:1;2277:9;;:11;;;;:::i;:::-;2290:8;2300:15;2256:60;;;;;;;;;:::i;:::-;;;;;;;;2337:1;2326:9;;:12;;;;;;;:::i;:::-;;;;;;;;1602:743;1559:786;:::o;2911:257::-;2960:14;2986:21;3032:1;3022:9;;:11;;;;:::i;:::-;3010:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2986:48;;3049:6;3058:1;3049:10;;3044:95;3065:9;;3061:1;:13;3044:95;;;3109:14;:19;3126:1;3124;:3;;;;:::i;:::-;3109:19;;;;;;;;;;;3095:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3104:1;3102;:3;;;;:::i;:::-;3095:11;;;;;;;;:::i;:::-;;;;;;;:33;;;;3076:3;;;;;:::i;:::-;;;;3044:95;;;;3155:6;3148:13;;;2911:257;:::o;491:34::-;;;;;;;;;;;;;:::o;1300:96::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1383:6:2::1;1368:12;;:21;;;;;;;;;;;;;;;;;;1300:96:::0;:::o;2403:502::-;2497:6;2466:15;:27;2482:10;2466:27;;;;;;;;;;;;;;;;:37;;2458:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2581:12;;;;;;;;;;;2575:28;;;2604:10;2616:6;2575:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2664:6;2633:15;:27;2649:10;2633:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2680:23;2706:44;;;;;;;;2712:10;2706:44;;;;;;2723:6;2706:44;;;;2731:15;2706:44;;;;2748:1;2706:44;;;;;2680:70;;2790:10;2760:14;:27;2785:1;2775:9;;:11;;;;:::i;:::-;2760:27;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:61;2823:10;2845:1;2835:9;;:11;;;;:::i;:::-;2848:10;2860:15;2815:61;;;;;;;;;:::i;:::-;;;;;;;;2897:1;2886:9;;:12;;;;;;;:::i;:::-;;;;;;;;2448:457;2403:502;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:267::-;2080:10;2101:90;2187:3;2179:6;2101:90;:::i;:::-;2223:4;2218:3;2214:14;2200:28;;1967:267;;;;:::o;2240:108::-;2317:24;2335:5;2317:24;:::i;:::-;2312:3;2305:37;2240:108;;:::o;2354:118::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2354:118;;:::o;2550:908::-;2713:3;2742:76;2812:5;2742:76;:::i;:::-;2834:108;2935:6;2930:3;2834:108;:::i;:::-;2827:115;;2966:78;3038:5;2966:78;:::i;:::-;3067:7;3098:1;3083:350;3108:6;3105:1;3102:13;3083:350;;;3184:6;3178:13;3211:107;3314:3;3299:13;3211:107;:::i;:::-;3204:114;;3341:82;3416:6;3341:82;:::i;:::-;3331:92;;3143:290;3130:1;3127;3123:9;3118:14;;3083:350;;;3087:14;3449:3;3442:10;;2718:740;;;2550:908;;;;:::o;3464:109::-;3545:21;3560:5;3545:21;:::i;:::-;3540:3;3533:34;3464:109;;:::o;3579:366::-;3721:3;3742:67;3806:2;3801:3;3742:67;:::i;:::-;3735:74;;3818:93;3907:3;3818:93;:::i;:::-;3936:2;3931:3;3927:12;3920:19;;3579:366;;;:::o;3951:::-;4093:3;4114:67;4178:2;4173:3;4114:67;:::i;:::-;4107:74;;4190:93;4279:3;4190:93;:::i;:::-;4308:2;4303:3;4299:12;4292:19;;3951:366;;;:::o;4323:::-;4465:3;4486:67;4550:2;4545:3;4486:67;:::i;:::-;4479:74;;4562:93;4651:3;4562:93;:::i;:::-;4680:2;4675:3;4671:12;4664:19;;4323:366;;;:::o;4695:::-;4837:3;4858:67;4922:2;4917:3;4858:67;:::i;:::-;4851:74;;4934:93;5023:3;4934:93;:::i;:::-;5052:2;5047:3;5043:12;5036:19;;4695:366;;;:::o;5067:::-;5209:3;5230:67;5294:2;5289:3;5230:67;:::i;:::-;5223:74;;5306:93;5395:3;5306:93;:::i;:::-;5424:2;5419:3;5415:12;5408:19;;5067:366;;;:::o;5439:::-;5581:3;5602:67;5666:2;5661:3;5602:67;:::i;:::-;5595:74;;5678:93;5767:3;5678:93;:::i;:::-;5796:2;5791:3;5787:12;5780:19;;5439:366;;;:::o;5879:848::-;6010:4;6005:3;6001:14;6098:4;6091:5;6087:16;6081:23;6117:63;6174:4;6169:3;6165:14;6151:12;6117:63;:::i;:::-;6025:165;6274:4;6267:5;6263:16;6257:23;6293:63;6350:4;6345:3;6341:14;6327:12;6293:63;:::i;:::-;6200:166;6453:4;6446:5;6442:16;6436:23;6472:63;6529:4;6524:3;6520:14;6506:12;6472:63;:::i;:::-;6376:169;6632:4;6625:5;6621:16;6615:23;6651:59;6704:4;6699:3;6695:14;6681:12;6651:59;:::i;:::-;6555:165;5979:748;5879:848;;:::o;6801:858::-;6942:4;6937:3;6933:14;7030:4;7023:5;7019:16;7013:23;7049:63;7106:4;7101:3;7097:14;7083:12;7049:63;:::i;:::-;6957:165;7206:4;7199:5;7195:16;7189:23;7225:63;7282:4;7277:3;7273:14;7259:12;7225:63;:::i;:::-;7132:166;7385:4;7378:5;7374:16;7368:23;7404:63;7461:4;7456:3;7452:14;7438:12;7404:63;:::i;:::-;7308:169;7564:4;7557:5;7553:16;7547:23;7583:59;7636:4;7631:3;7627:14;7613:12;7583:59;:::i;:::-;7487:165;6911:748;6801:858;;:::o;7665:108::-;7742:24;7760:5;7742:24;:::i;:::-;7737:3;7730:37;7665:108;;:::o;7779:118::-;7866:24;7884:5;7866:24;:::i;:::-;7861:3;7854:37;7779:118;;:::o;7903:102::-;7976:22;7992:5;7976:22;:::i;:::-;7971:3;7964:35;7903:102;;:::o;8011:112::-;8094:22;8110:5;8094:22;:::i;:::-;8089:3;8082:35;8011:112;;:::o;8129:222::-;8222:4;8260:2;8249:9;8245:18;8237:26;;8273:71;8341:1;8330:9;8326:17;8317:6;8273:71;:::i;:::-;8129:222;;;;:::o;8357:442::-;8506:4;8544:2;8533:9;8529:18;8521:26;;8557:71;8625:1;8614:9;8610:17;8601:6;8557:71;:::i;:::-;8638:72;8706:2;8695:9;8691:18;8682:6;8638:72;:::i;:::-;8720;8788:2;8777:9;8773:18;8764:6;8720:72;:::i;:::-;8357:442;;;;;;:::o;8805:332::-;8926:4;8964:2;8953:9;8949:18;8941:26;;8977:71;9045:1;9034:9;9030:17;9021:6;8977:71;:::i;:::-;9058:72;9126:2;9115:9;9111:18;9102:6;9058:72;:::i;:::-;8805:332;;;;;:::o;9143:642::-;9364:4;9402:3;9391:9;9387:19;9379:27;;9416:71;9484:1;9473:9;9469:17;9460:6;9416:71;:::i;:::-;9497:72;9565:2;9554:9;9550:18;9541:6;9497:72;:::i;:::-;9579:116;9691:2;9680:9;9676:18;9667:6;9579:116;:::i;:::-;9705:73;9773:3;9762:9;9758:19;9749:6;9705:73;:::i;:::-;9143:642;;;;;;;:::o;9791:545::-;9964:4;10002:3;9991:9;9987:19;9979:27;;10016:71;10084:1;10073:9;10069:17;10060:6;10016:71;:::i;:::-;10097:72;10165:2;10154:9;10150:18;10141:6;10097:72;:::i;:::-;10179;10247:2;10236:9;10232:18;10223:6;10179:72;:::i;:::-;10261:68;10325:2;10314:9;10310:18;10301:6;10261:68;:::i;:::-;9791:545;;;;;;;:::o;10342:461::-;10529:4;10567:2;10556:9;10552:18;10544:26;;10616:9;10610:4;10606:20;10602:1;10591:9;10587:17;10580:47;10644:152;10791:4;10782:6;10644:152;:::i;:::-;10636:160;;10342:461;;;;:::o;10809:210::-;10896:4;10934:2;10923:9;10919:18;10911:26;;10947:65;11009:1;10998:9;10994:17;10985:6;10947:65;:::i;:::-;10809:210;;;;:::o;11025:419::-;11191:4;11229:2;11218:9;11214:18;11206:26;;11278:9;11272:4;11268:20;11264:1;11253:9;11249:17;11242:47;11306:131;11432:4;11306:131;:::i;:::-;11298:139;;11025:419;;;:::o;11450:::-;11616:4;11654:2;11643:9;11639:18;11631:26;;11703:9;11697:4;11693:20;11689:1;11678:9;11674:17;11667:47;11731:131;11857:4;11731:131;:::i;:::-;11723:139;;11450:419;;;:::o;11875:::-;12041:4;12079:2;12068:9;12064:18;12056:26;;12128:9;12122:4;12118:20;12114:1;12103:9;12099:17;12092:47;12156:131;12282:4;12156:131;:::i;:::-;12148:139;;11875:419;;;:::o;12300:::-;12466:4;12504:2;12493:9;12489:18;12481:26;;12553:9;12547:4;12543:20;12539:1;12528:9;12524:17;12517:47;12581:131;12707:4;12581:131;:::i;:::-;12573:139;;12300:419;;;:::o;12725:::-;12891:4;12929:2;12918:9;12914:18;12906:26;;12978:9;12972:4;12968:20;12964:1;12953:9;12949:17;12942:47;13006:131;13132:4;13006:131;:::i;:::-;12998:139;;12725:419;;;:::o;13150:::-;13316:4;13354:2;13343:9;13339:18;13331:26;;13403:9;13397:4;13393:20;13389:1;13378:9;13374:17;13367:47;13431:131;13557:4;13431:131;:::i;:::-;13423:139;;13150:419;;;:::o;13575:222::-;13668:4;13706:2;13695:9;13691:18;13683:26;;13719:71;13787:1;13776:9;13772:17;13763:6;13719:71;:::i;:::-;13575:222;;;;:::o;13884:154::-;13973:4;13996:3;13988:11;;14026:4;14021:3;14017:14;14009:22;;13884:154;;;:::o;14044:136::-;14133:6;14167:5;14161:12;14151:22;;14044:136;;;:::o;14186:135::-;14278:4;14310;14305:3;14301:14;14293:22;;14186:135;;;:::o;14327:206::-;14448:11;14482:6;14477:3;14470:19;14522:4;14517:3;14513:14;14498:29;;14327:206;;;;:::o;14539:169::-;14623:11;14657:6;14652:3;14645:19;14697:4;14692:3;14688:14;14673:29;;14539:169;;;;:::o;14714:305::-;14754:3;14773:20;14791:1;14773:20;:::i;:::-;14768:25;;14807:20;14825:1;14807:20;:::i;:::-;14802:25;;14961:1;14893:66;14889:74;14886:1;14883:81;14880:107;;;14967:18;;:::i;:::-;14880:107;15011:1;15008;15004:9;14997:16;;14714:305;;;;:::o;15025:191::-;15065:4;15085:20;15103:1;15085:20;:::i;:::-;15080:25;;15119:20;15137:1;15119:20;:::i;:::-;15114:25;;15158:1;15155;15152:8;15149:34;;;15163:18;;:::i;:::-;15149:34;15208:1;15205;15201:9;15193:17;;15025:191;;;;:::o;15222:96::-;15259:7;15288:24;15306:5;15288:24;:::i;:::-;15277:35;;15222:96;;;:::o;15324:90::-;15358:7;15401:5;15394:13;15387:21;15376:32;;15324:90;;;:::o;15420:126::-;15457:7;15497:42;15490:5;15486:54;15475:65;;15420:126;;;:::o;15552:77::-;15589:7;15618:5;15607:16;;15552:77;;;:::o;15635:86::-;15670:7;15710:4;15703:5;15699:16;15688:27;;15635:86;;;:::o;15727:233::-;15766:3;15789:24;15807:5;15789:24;:::i;:::-;15780:33;;15835:66;15828:5;15825:77;15822:103;;;15905:18;;:::i;:::-;15822:103;15952:1;15945:5;15941:13;15934:20;;15727:233;;;:::o;15966:180::-;16014:77;16011:1;16004:88;16111:4;16108:1;16101:15;16135:4;16132:1;16125:15;16152:180;16200:77;16197:1;16190:88;16297:4;16294:1;16287:15;16321:4;16318:1;16311:15;16338:180;16386:77;16383:1;16376:88;16483:4;16480:1;16473:15;16507:4;16504:1;16497:15;16647:117;16756:1;16753;16746:12;16770:177;16910:29;16906:1;16898:6;16894:14;16887:53;16770:177;:::o;16953:225::-;17093:34;17089:1;17081:6;17077:14;17070:58;17162:8;17157:2;17149:6;17145:15;17138:33;16953:225;:::o;17184:172::-;17324:24;17320:1;17312:6;17308:14;17301:48;17184:172;:::o;17362:170::-;17502:22;17498:1;17490:6;17486:14;17479:46;17362:170;:::o;17538:182::-;17678:34;17674:1;17666:6;17662:14;17655:58;17538:182;:::o;17726:170::-;17866:22;17862:1;17854:6;17850:14;17843:46;17726:170;:::o;17902:122::-;17975:24;17993:5;17975:24;:::i;:::-;17968:5;17965:35;17955:63;;18014:1;18011;18004:12;17955:63;17902:122;:::o;18030:116::-;18100:21;18115:5;18100:21;:::i;:::-;18093:5;18090:32;18080:60;;18136:1;18133;18126:12;18080:60;18030:116;:::o;18152:122::-;18225:24;18243:5;18225:24;:::i;:::-;18218:5;18215:35;18205:63;;18264:1;18261;18254:12;18205:63;18152:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1290200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "196",
								"GetStakingHistory()": "infinite",
								"SetStakingToken(address)": "27028",
								"StakeToken(uint256)": "infinite",
								"StakingBalances(address)": "2837",
								"StakingEnabled()": "2515",
								"StakingHistory(uint256)": "infinite",
								"ToggleStaking()": "28835",
								"UnstakeToken(uint256)": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "30441",
								"transferOwnership(address)": "30833"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 485,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 520,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 491,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 5059,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095e73a0226da1780d0c9f35de214f5b1064197f0d151d80316cdeadd456ad9e864736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "AD95B1C6"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "B0ADFA09"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "DA917AEA"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "DB568922"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "DF6A8A15"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "356BB8DB"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "376AA972"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "64CB560C"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 5059,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 934,
											"end": 982,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1458,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1497,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1719,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1679,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1671,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1813,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1798,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1847,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1847,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1790,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1925,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1937,
											"end": 1947,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1907,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1958,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1898,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2033,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2034,
											"end": 2044,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2058,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2115,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2189,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2149,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2218,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2230,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2203,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "62CB55E360F9D0014FEEB0753042D6FC5798187EDE3DDADBF54C03881F53B612"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2277,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2326,
											"end": 2335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1602,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 2345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 2974,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2986,
											"end": 3007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3022,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3022,
											"end": 3031,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3059,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3074,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3123,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3127,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3128,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3168,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 525,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1396,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2493,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2503,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2503,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2458,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2603,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2746,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2775,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2787,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "27E09D0DFD4290BA6BBAD99E9ED98FCE69333C5281617EA1333041D739705B24"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2875,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2876,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2886,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2898,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2905,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2101,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2218,
											"end": 2221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 2234,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2317,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2305,
											"end": 2342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2812,
											"end": 2817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2742,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2834,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2942,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2827,
											"end": 2942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3211,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3318,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3341,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3423,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3118,
											"end": 3132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3118,
											"end": 3132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3083,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3452,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3452,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2718,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 3458,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3573,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 3724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3806,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3801,
											"end": 3804,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3742,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3809,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3907,
											"end": 3910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 3818,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3920,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3945,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4093,
											"end": 4096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4178,
											"end": 4180,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4173,
											"end": 4176,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4114,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4279,
											"end": 4282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4190,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4292,
											"end": 4311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4545,
											"end": 4548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4486,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4479,
											"end": 4553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4479,
											"end": 4553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4651,
											"end": 4654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4562,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4671,
											"end": 4683,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4689,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4922,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 4858,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5023,
											"end": 5026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 4934,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 5061,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5289,
											"end": 5292,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5230,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5306,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5433,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5661,
											"end": 5664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5602,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5669,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5767,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5678,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5796,
											"end": 5798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5805,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6010,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6005,
											"end": 6008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6103,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6117,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6025,
											"end": 6190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6263,
											"end": 6279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6257,
											"end": 6280,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6345,
											"end": 6348,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6293,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6446,
											"end": 6451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6529,
											"end": 6533,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6506,
											"end": 6518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6472,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 6637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6615,
											"end": 6638,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6699,
											"end": 6702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6651,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 6727,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6946,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6937,
											"end": 6940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6933,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7013,
											"end": 7036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7106,
											"end": 7110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7097,
											"end": 7111,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7095,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 7122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7210,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7259,
											"end": 7271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7225,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7390,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7461,
											"end": 7465,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7456,
											"end": 7459,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7452,
											"end": 7466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7404,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7308,
											"end": 7477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7636,
											"end": 7640,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7631,
											"end": 7634,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7641,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7613,
											"end": 7625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7583,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7487,
											"end": 7652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6911,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6801,
											"end": 7659,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7760,
											"end": 7765,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7742,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7730,
											"end": 7767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7665,
											"end": 7773,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7884,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7866,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7897,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7992,
											"end": 7997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7976,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7964,
											"end": 7999,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 8005,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8011,
											"end": 8123,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8011,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8094,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8094,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8094,
											"end": 8116,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8094,
											"end": 8116,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 8094,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8011,
											"end": 8123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8273,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8326,
											"end": 8343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8273,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8273,
											"end": 8344,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8273,
											"end": 8344,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 8273,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8351,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8506,
											"end": 8510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8544,
											"end": 8546,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8533,
											"end": 8542,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8521,
											"end": 8547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8623,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8610,
											"end": 8627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8557,
											"end": 8628,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8557,
											"end": 8628,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8557,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8638,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8706,
											"end": 8708,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8695,
											"end": 8704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8638,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8638,
											"end": 8710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8638,
											"end": 8710,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8638,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8720,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8720,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 8720,
											"end": 8792,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8720,
											"end": 8792,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8720,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8799,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8926,
											"end": 8930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8966,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8953,
											"end": 8962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8949,
											"end": 8967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8941,
											"end": 8967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8941,
											"end": 8967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8977,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9043,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9030,
											"end": 9047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9021,
											"end": 9027,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8977,
											"end": 9048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8977,
											"end": 9048,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8977,
											"end": 9048,
											"name": "tag",
											"source": 3,
											"value": "299"
										},
										{
											"begin": 8977,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9126,
											"end": 9128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9111,
											"end": 9129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9102,
											"end": 9108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9058,
											"end": 9130,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9130,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9058,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9137,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9387,
											"end": 9406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9379,
											"end": 9406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9379,
											"end": 9406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9416,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9484,
											"end": 9485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9473,
											"end": 9482,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9469,
											"end": 9486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9466,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9416,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 9416,
											"end": 9487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9416,
											"end": 9487,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9416,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9563,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9497,
											"end": 9569,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9497,
											"end": 9569,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9497,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9680,
											"end": 9689,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9667,
											"end": 9673,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9579,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 9579,
											"end": 9695,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9579,
											"end": 9695,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9579,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9705,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9773,
											"end": 9776,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 9762,
											"end": 9771,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9758,
											"end": 9777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9749,
											"end": 9755,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9705,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9705,
											"end": 9778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9705,
											"end": 9778,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 9705,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9143,
											"end": 9785,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9979,
											"end": 10006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9979,
											"end": 10006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10069,
											"end": 10086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10060,
											"end": 10066,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 10016,
											"end": 10087,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10016,
											"end": 10087,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10016,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10097,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10165,
											"end": 10167,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10154,
											"end": 10163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10141,
											"end": 10147,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10097,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10097,
											"end": 10169,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10097,
											"end": 10169,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10097,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10179,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10236,
											"end": 10245,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10179,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 10179,
											"end": 10251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10179,
											"end": 10251,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10179,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10261,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10314,
											"end": 10323,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10301,
											"end": 10307,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10261,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10261,
											"end": 10329,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10261,
											"end": 10329,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10261,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9791,
											"end": 10336,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10529,
											"end": 10533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10544,
											"end": 10570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10616,
											"end": 10625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10610,
											"end": 10614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10606,
											"end": 10626,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10587,
											"end": 10604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10644,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10782,
											"end": 10788,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10644,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10644,
											"end": 10796,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10644,
											"end": 10796,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10644,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10803,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10896,
											"end": 10900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10936,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10923,
											"end": 10932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10911,
											"end": 10937,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10911,
											"end": 10937,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10994,
											"end": 11011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10985,
											"end": 10991,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10947,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10947,
											"end": 11012,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10947,
											"end": 11012,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 10947,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 11019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11268,
											"end": 11288,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11264,
											"end": 11265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11262,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11249,
											"end": 11266,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11242,
											"end": 11289,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11432,
											"end": 11436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11616,
											"end": 11620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11643,
											"end": 11652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 11657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11631,
											"end": 11657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11703,
											"end": 11712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11693,
											"end": 11713,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11674,
											"end": 11691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11667,
											"end": 11714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11857,
											"end": 11861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 11731,
											"end": 11862,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11731,
											"end": 11862,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11731,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11723,
											"end": 11862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11723,
											"end": 11862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11450,
											"end": 11869,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12064,
											"end": 12082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12056,
											"end": 12082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12128,
											"end": 12137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12122,
											"end": 12126,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12118,
											"end": 12138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12099,
											"end": 12116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12092,
											"end": 12139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12282,
											"end": 12286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 12156,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12148,
											"end": 12287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12148,
											"end": 12287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 12294,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12466,
											"end": 12470,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12493,
											"end": 12502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12481,
											"end": 12507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12553,
											"end": 12562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12547,
											"end": 12551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12543,
											"end": 12563,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12539,
											"end": 12540,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12528,
											"end": 12537,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12524,
											"end": 12541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12517,
											"end": 12564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 12581,
											"end": 12712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12581,
											"end": 12712,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 12581,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12573,
											"end": 12712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12573,
											"end": 12712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12300,
											"end": 12719,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12891,
											"end": 12895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12931,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12918,
											"end": 12927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12906,
											"end": 12932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12906,
											"end": 12932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12978,
											"end": 12987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12972,
											"end": 12976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12968,
											"end": 12988,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12964,
											"end": 12965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12949,
											"end": 12966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12942,
											"end": 12989,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13006,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13006,
											"end": 13137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 13006,
											"end": 13137,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13006,
											"end": 13137,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 13006,
											"end": 13137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13137,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 13144,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13316,
											"end": 13320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13354,
											"end": 13356,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13343,
											"end": 13352,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13339,
											"end": 13357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13331,
											"end": 13357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13331,
											"end": 13357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13397,
											"end": 13401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13393,
											"end": 13413,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13389,
											"end": 13390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13378,
											"end": 13387,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13374,
											"end": 13391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13367,
											"end": 13414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13431,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 13557,
											"end": 13561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13431,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 13431,
											"end": 13562,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13431,
											"end": 13562,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 13431,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13423,
											"end": 13562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13423,
											"end": 13562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13569,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13668,
											"end": 13672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13708,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13691,
											"end": 13709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13683,
											"end": 13709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13683,
											"end": 13709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13719,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 13787,
											"end": 13788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13776,
											"end": 13785,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13772,
											"end": 13789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13763,
											"end": 13769,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13719,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 13719,
											"end": 13790,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13719,
											"end": 13790,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 13719,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13575,
											"end": 13797,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13973,
											"end": 13977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 13999,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13988,
											"end": 13999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13988,
											"end": 13999,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14026,
											"end": 14030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14021,
											"end": 14024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14017,
											"end": 14031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14009,
											"end": 14031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14009,
											"end": 14031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13884,
											"end": 14038,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14133,
											"end": 14139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14161,
											"end": 14173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14151,
											"end": 14173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14151,
											"end": 14173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14044,
											"end": 14180,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14278,
											"end": 14282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14310,
											"end": 14314,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14305,
											"end": 14308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14301,
											"end": 14315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14293,
											"end": 14315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14293,
											"end": 14315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14186,
											"end": 14321,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14448,
											"end": 14459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14482,
											"end": 14488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14477,
											"end": 14480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14470,
											"end": 14489,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14522,
											"end": 14526,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14517,
											"end": 14520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14513,
											"end": 14527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14533,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14623,
											"end": 14634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14652,
											"end": 14655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14645,
											"end": 14664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14697,
											"end": 14701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14692,
											"end": 14695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14688,
											"end": 14702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14673,
											"end": 14702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14673,
											"end": 14702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14754,
											"end": 14757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 14791,
											"end": 14792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 14773,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14768,
											"end": 14793,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14768,
											"end": 14793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14807,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 14825,
											"end": 14826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14807,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 14807,
											"end": 14827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14807,
											"end": 14827,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 14807,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14802,
											"end": 14827,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14802,
											"end": 14827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14961,
											"end": 14962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14959,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14889,
											"end": 14963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14883,
											"end": 14964,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14987,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14880,
											"end": 14987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14987,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14880,
											"end": 14987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15008,
											"end": 15009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15004,
											"end": 15013,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14997,
											"end": 15013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14997,
											"end": 15013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14714,
											"end": 15019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15065,
											"end": 15069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15085,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 15103,
											"end": 15104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15085,
											"end": 15105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15085,
											"end": 15105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15085,
											"end": 15105,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 15085,
											"end": 15105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15080,
											"end": 15105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15080,
											"end": 15105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 15119,
											"end": 15139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15114,
											"end": 15139,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15114,
											"end": 15139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15158,
											"end": 15159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15152,
											"end": 15160,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15183,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 15149,
											"end": 15183,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 15163,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15149,
											"end": 15183,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 15149,
											"end": 15183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15208,
											"end": 15209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15201,
											"end": 15210,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15193,
											"end": 15210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15193,
											"end": 15210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15025,
											"end": 15216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15259,
											"end": 15266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15288,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 15306,
											"end": 15311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15288,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 15288,
											"end": 15312,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15288,
											"end": 15312,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 15288,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15277,
											"end": 15312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15277,
											"end": 15312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15222,
											"end": 15318,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15358,
											"end": 15365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15401,
											"end": 15406,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15394,
											"end": 15407,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15387,
											"end": 15408,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15376,
											"end": 15408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15376,
											"end": 15408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15324,
											"end": 15414,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15457,
											"end": 15464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15497,
											"end": 15539,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15490,
											"end": 15495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15486,
											"end": 15540,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15475,
											"end": 15540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15475,
											"end": 15540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15420,
											"end": 15546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15589,
											"end": 15596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15618,
											"end": 15623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15607,
											"end": 15623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15607,
											"end": 15623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15552,
											"end": 15629,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15670,
											"end": 15677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15710,
											"end": 15714,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15703,
											"end": 15708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15699,
											"end": 15715,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15688,
											"end": 15715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15688,
											"end": 15715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15635,
											"end": 15721,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15766,
											"end": 15769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15789,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 15807,
											"end": 15812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15789,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15789,
											"end": 15813,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15789,
											"end": 15813,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 15789,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15780,
											"end": 15813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15780,
											"end": 15813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15835,
											"end": 15901,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15828,
											"end": 15833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15825,
											"end": 15902,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15822,
											"end": 15925,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15822,
											"end": 15925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 15822,
											"end": 15925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 15905,
											"end": 15923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15822,
											"end": 15925,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 15822,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15952,
											"end": 15953,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15945,
											"end": 15950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15941,
											"end": 15954,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15934,
											"end": 15954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15934,
											"end": 15954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15727,
											"end": 15960,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15966,
											"end": 16146,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 15966,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16014,
											"end": 16091,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16011,
											"end": 16012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16111,
											"end": 16115,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 16108,
											"end": 16109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16101,
											"end": 16116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16135,
											"end": 16139,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16132,
											"end": 16133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16152,
											"end": 16332,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 16152,
											"end": 16332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16200,
											"end": 16277,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16197,
											"end": 16198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16190,
											"end": 16278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 16294,
											"end": 16295,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16287,
											"end": 16302,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16321,
											"end": 16325,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16318,
											"end": 16319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16311,
											"end": 16326,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16338,
											"end": 16518,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 16338,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16386,
											"end": 16463,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16383,
											"end": 16384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16376,
											"end": 16464,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16483,
											"end": 16487,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 16480,
											"end": 16481,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16473,
											"end": 16488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16507,
											"end": 16511,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 16504,
											"end": 16505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16497,
											"end": 16512,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16647,
											"end": 16764,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 16647,
											"end": 16764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16756,
											"end": 16757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16753,
											"end": 16754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16746,
											"end": 16758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 16770,
											"end": 16947,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 16770,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16910,
											"end": 16939,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A20494E53554646494349454E542042414C414E43450000000000"
										},
										{
											"begin": 16906,
											"end": 16907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 16898,
											"end": 16904,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 16894,
											"end": 16908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16887,
											"end": 16940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16770,
											"end": 16947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16770,
											"end": 16947,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16953,
											"end": 17178,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 16953,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17093,
											"end": 17127,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17089,
											"end": 17090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17081,
											"end": 17087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17077,
											"end": 17091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17070,
											"end": 17128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17162,
											"end": 17170,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17157,
											"end": 17159,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17149,
											"end": 17155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17145,
											"end": 17160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16953,
											"end": 17178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16953,
											"end": 17178,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17184,
											"end": 17356,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 17184,
											"end": 17356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17324,
											"end": 17348,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E67204973204E6F7420456E61626C656400000000000000000000"
										},
										{
											"begin": 17320,
											"end": 17321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17312,
											"end": 17318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17308,
											"end": 17322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17301,
											"end": 17349,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17184,
											"end": 17356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17184,
											"end": 17356,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17362,
											"end": 17532,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 17362,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17502,
											"end": 17524,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D4158494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 17498,
											"end": 17499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17490,
											"end": 17496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17486,
											"end": 17500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17479,
											"end": 17525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17362,
											"end": 17532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17362,
											"end": 17532,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17538,
											"end": 17720,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 17538,
											"end": 17720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17678,
											"end": 17712,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17674,
											"end": 17675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17666,
											"end": 17672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17662,
											"end": 17676,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17655,
											"end": 17713,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17538,
											"end": 17720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17538,
											"end": 17720,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17726,
											"end": 17896,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 17726,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17866,
											"end": 17888,
											"name": "PUSH",
											"source": 3,
											"value": "4552524F523A204D494E494D554D205354414B45000000000000000000000000"
										},
										{
											"begin": 17862,
											"end": 17863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17854,
											"end": 17860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17850,
											"end": 17864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17843,
											"end": 17889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17726,
											"end": 17896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17726,
											"end": 17896,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 17902,
											"end": 18024,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 17902,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17975,
											"end": 17999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 17993,
											"end": 17998,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17975,
											"end": 17999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 17975,
											"end": 17999,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 17975,
											"end": 17999,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 17975,
											"end": 17999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17968,
											"end": 17973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17965,
											"end": 18000,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 18018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 17955,
											"end": 18018,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18014,
											"end": 18015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18011,
											"end": 18012,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18004,
											"end": 18016,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17955,
											"end": 18018,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 17955,
											"end": 18018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17902,
											"end": 18024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17902,
											"end": 18024,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18030,
											"end": 18146,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 18030,
											"end": 18146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18100,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 18115,
											"end": 18120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18100,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 18100,
											"end": 18121,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18100,
											"end": 18121,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 18100,
											"end": 18121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18093,
											"end": 18098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18090,
											"end": 18122,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18080,
											"end": 18140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 18080,
											"end": 18140,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18136,
											"end": 18137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18133,
											"end": 18134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18126,
											"end": 18138,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18080,
											"end": 18140,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 18080,
											"end": 18140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18030,
											"end": 18146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18030,
											"end": 18146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 18152,
											"end": 18274,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 18152,
											"end": 18274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 18243,
											"end": 18248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18218,
											"end": 18223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 18215,
											"end": 18250,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 18205,
											"end": 18268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 18205,
											"end": 18268,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 18264,
											"end": 18265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 18261,
											"end": 18262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 18254,
											"end": 18266,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 18205,
											"end": 18268,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 18205,
											"end": 18268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 18152,
											"end": 18274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 18152,
											"end": 18274,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetStakingHistory()": "b0adfa09",
							"SetStakingToken(address)": "db568922",
							"StakeToken(uint256)": "ad95b1c6",
							"StakingBalances(address)": "376aa972",
							"StakingEnabled()": "da917aea",
							"StakingHistory(uint256)": "356bb8db",
							"ToggleStaking()": "64cb560c",
							"UnstakeToken(uint256)": "df6a8a15",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct StakingContract.Stake\",\"name\":\"stake\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTime\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GetStakingHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"internalType\":\"struct StakingContract.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"StakingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"StakingHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EventTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ToggleStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnstakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Solidity Part/contracts/staking.sol\":\"StakingContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Solidity Part/contracts/staking.sol\":{\"keccak256\":\"0x250d2f86266e1408cb5ef28dfb05ba100ba17eb2e2f7b3d1e9d5f6bb3ef4259e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://68855445aef87f1ec62d2a682619845fd38405240a04ad7f6484d1dc99d5edbd\",\"dweb:/ipfs/QmPG5hoNzdbbzv6Bd77GjEG1zKmQ8oWsjeeAjdwjR4Y3pJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 164,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "currentID",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 167,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingEnabled",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 181,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Stake)176_storage)"
							},
							{
								"astId": 185,
								"contract": "Solidity Part/contracts/staking.sol:StakingContract",
								"label": "StakingBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Stake)176_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)176_storage"
							},
							"t_struct(Stake)176_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 169,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 171,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 173,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "EventTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 175,
										"contract": "Solidity Part/contracts/staking.sol:StakingContract",
										"label": "eventType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"Solidity Part/contracts/staking.sol": {
				"ast": {
					"absolutePath": "Solidity Part/contracts/staking.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"ERC20": [
							157
						],
						"Ownable": [
							104
						],
						"StakingContract": [
							465
						]
					},
					"id": 466,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 105,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "ERC20",
							"nameLocation": "124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "23b872dd",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "145:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "189:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "184:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:39:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "220:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "215:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:14:2"
									},
									"scope": 157,
									"src": "136:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "264:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "264:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:25:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "295:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "295:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:14:2"
									},
									"scope": 157,
									"src": "234:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "323:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "341:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "332:17:2"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:9:2"
									},
									"scope": 157,
									"src": "314:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 466,
							"src": "114:270:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 158,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "414:7:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 465,
							"linearizedBaseContracts": [
								465,
								104,
								126
							],
							"name": "StakingContract",
							"nameLocation": "395:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "StakingToken",
									"nameLocation": "446:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "438:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "currentID",
									"nameLocation": "472:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "464:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "484:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "da917aea",
									"id": 167,
									"mutability": "mutable",
									"name": "StakingEnabled",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "491:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 165,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "491:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "520:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Stake",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 169,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "592:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "584:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "665:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "657:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "EventTime",
											"nameLocation": "721:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "713:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "eventType",
											"nameLocation": "781:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "775:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 174,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "775:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "539:5:2",
									"nodeType": "StructDefinition",
									"scope": 465,
									"src": "532:265:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "356bb8db",
									"id": 181,
									"mutability": "mutable",
									"name": "StakingHistory",
									"nameLocation": "883:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "852:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "852:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Stake)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "869:5:2"
											},
											"referencedDeclaration": 176,
											"src": "869:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "376aa972",
									"id": 185,
									"mutability": "mutable",
									"name": "StakingBalances",
									"nameLocation": "967:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 465,
									"src": "934:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "934:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "951:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1032:2:2",
										"statements": []
									},
									"id": 189,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:2"
									},
									"scope": 465,
									"src": "1005:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1067:2:2",
										"statements": []
									},
									"id": 193,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:2"
									},
									"scope": 465,
									"src": "1039:30:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "NewStake",
									"nameLocation": "1094:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1111:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1103:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1127:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1119:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1137:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1131:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1131:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1131:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1152:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1144:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:60:2"
									},
									"src": "1088:75:2"
								},
								{
									"anonymous": false,
									"id": 215,
									"name": "Unstake",
									"nameLocation": "1174:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1190:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1182:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1206:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1198:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1216:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1210:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
													"typeString": "struct StakingContract.Stake"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 176,
														"src": "1210:5:2"
													},
													"referencedDeclaration": 176,
													"src": "1210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
														"typeString": "struct StakingContract.Stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockTime",
												"nameLocation": "1231:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1223:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:60:2"
									},
									"src": "1168:74:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1358:38:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "StakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1368:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1383:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1368:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1368:21:2"
											}
										]
									},
									"functionSelector": "db568922",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 220,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1348:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1348:9:2"
										}
									],
									"name": "SetStakingToken",
									"nameLocation": "1309:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1333:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1325:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:16:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:2"
									},
									"scope": 465,
									"src": "1300:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1448:49:2",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "StakingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1458:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1475:15:2",
														"subExpression": {
															"id": 233,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1476:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1458:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1458:32:2"
											}
										]
									},
									"functionSelector": "64cb560c",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1438:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1438:9:2"
										}
									],
									"name": "ToggleStaking",
									"nameLocation": "1415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1448:0:2"
									},
									"scope": 465,
									"src": "1406:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1602:743:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "StakingEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1620:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67204973204e6f7420456e61626c6564",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															},
															"value": "Staking Is Not Enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5710a63d186fb2bb4d6f6f8cbfd1b3bd944ed17f4a7470e1a616ce0b534deba7",
																"typeString": "literal_string \"Staking Is Not Enabled\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1612:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 249,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1679:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"expression": {
																			"id": 250,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1695:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1695:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1679:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1709:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1679:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030",
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1719:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1727:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1731:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1727:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1719:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000000"
																}
															},
															"src": "1679:54:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d4158494d554d205354414b45",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															},
															"value": "ERROR: MAXIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97e57303a3706be76a7c936f1a166224b6946315afea1e949a15afeeeb9c1ae0",
																"typeString": "literal_string \"ERROR: MAXIMUM STAKE\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1671:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "StakingBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1798:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"expression": {
																			"id": 266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1814:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1814:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1798:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "1828:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1798:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1838:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1841:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1845:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1841:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "1838:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																}
															},
															"src": "1798:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a204d494e494d554d205354414b45",
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1849:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															},
															"value": "ERROR: MINIMUM STAKE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fee83856e231c72d2e5a937b5cb1d851e31ed0e444a352ee6816c6d39291b423",
																"typeString": "literal_string \"ERROR: MINIMUM STAKE\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1790:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1790:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1937:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1937:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 282,
																				"name": "StakingToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1913:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 281,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "1907:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1907:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$157",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "1907:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1907:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "1952:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1907:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1960:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:92:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1898:92:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2034:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2034:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2054:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$465",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$465",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2046:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2046:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2046:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2061:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 294,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2007:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 293,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2001:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2001:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 140,
														"src": "2001:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2001:67:2"
											},
											{
												"expression": {
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 306,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2078:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 309,
														"indexExpression": {
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2094:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2094:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2078:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 310,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2109:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2078:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2078:37:2"
											},
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "newStake",
														"nameLocation": "2138:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "2125:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 314,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 313,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2125:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2155:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2155:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2166:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2174:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2174:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2191:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 316,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2149:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2125:68:2"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2203:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 329,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2218:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2228:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2218:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2203:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "newStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2233:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2203:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2203:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2265:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2265:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2277:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2277:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "newStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "2290:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 340,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2300:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2300:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "NewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2256:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "EmitStatement",
												"src": "2251:65:2"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2326:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2337:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2326:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2326:12:2"
											}
										]
									},
									"functionSelector": "ad95b1c6",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "StakeToken",
									"nameLocation": "1568:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1587:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1579:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:16:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:2"
									},
									"scope": 465,
									"src": "1559:786:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "2448:457:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "StakingBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2466:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2482:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2482:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2466:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2466:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20494e53554646494349454e542042414c414e4345",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															},
															"value": "ERROR: INSUFFICIENT BALANCE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0772e9a7c691ca57c410ba54e04159ddd2adc2cce42f7b99f64ec64a4f0808ab",
																"typeString": "literal_string \"ERROR: INSUFFICIENT BALANCE\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2458:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2458:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2458:77:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2604:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2604:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2616:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "StakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2581:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2575:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$157_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$157",
																"typeString": "contract ERC20"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "2575:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2575:48:2"
											},
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 373,
															"name": "StakingBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2633:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2649:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2649:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2633:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 377,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2664:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2633:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2633:37:2"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "newUnstake",
														"nameLocation": "2693:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "2680:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 381,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 380,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 176,
																"src": "2680:5:2"
															},
															"referencedDeclaration": 176,
															"src": "2680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2712:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2712:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2723:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 387,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2731:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2731:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2748:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 383,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "2706:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$176_storage_ptr_$",
															"typeString": "type(struct StakingContract.Stake storage pointer)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2706:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
														"typeString": "struct StakingContract.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:70:2"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "StakingHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2760:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 396,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2775:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2785:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2775:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2760:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "newUnstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2790:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2760:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$176_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2760:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2823:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2823:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2835:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2845:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2835:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "newUnstake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "2848:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															}
														},
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2860:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2860:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																"typeString": "struct StakingContract.Stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Stake_$176_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,struct StakingContract.Stake memory,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "EmitStatement",
												"src": "2810:66:2"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 411,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2886:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2897:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2886:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "2886:12:2"
											}
										]
									},
									"functionSelector": "df6a8a15",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "UnstakeToken",
									"nameLocation": "2412:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2433:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2425:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:16:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:0:2"
									},
									"scope": 465,
									"src": "2403:502:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "2976:192:2",
										"statements": [
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "stakes",
														"nameLocation": "3001:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "2986:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct StakingContract.Stake[]"
														},
														"typeName": {
															"baseType": {
																"id": 425,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 424,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "2986:5:2"
																},
																"referencedDeclaration": 176,
																"src": "2986:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 426,
															"nodeType": "ArrayTypeName",
															"src": "2986:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "currentID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3022:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3032:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3022:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3010:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct StakingContract.Stake memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 429,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 428,
																	"name": "Stake",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 176,
																	"src": "3014:5:2"
																},
																"referencedDeclaration": 176,
																"src": "3014:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
																	"typeString": "struct StakingContract.Stake"
																}
															},
															"id": 430,
															"nodeType": "ArrayTypeName",
															"src": "3014:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
																"typeString": "struct StakingContract.Stake[]"
															}
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3010:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct StakingContract.Stake memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2986:48:2"
											},
											{
												"body": {
													"id": 459,
													"nodeType": "Block",
													"src": "3081:58:2",
													"statements": [
														{
															"expression": {
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 447,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "3095:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct StakingContract.Stake memory[] memory"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 448,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "3102:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3104:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3102:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3095:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 452,
																		"name": "StakingHistory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "3109:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$176_storage_$",
																			"typeString": "mapping(uint256 => struct StakingContract.Stake storage ref)"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 453,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "3124:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3126:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3124:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3109:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$176_storage",
																		"typeString": "struct StakingContract.Stake storage ref"
																	}
																},
																"src": "3095:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$176_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 458,
															"nodeType": "ExpressionStatement",
															"src": "3095:33:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "3061:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 442,
														"name": "currentID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3065:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3061:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"initializationExpression": {
													"assignments": [
														438
													],
													"declarations": [
														{
															"constant": false,
															"id": 438,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3054:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 460,
															"src": "3049:6:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 437,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3049:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 440,
													"initialValue": {
														"hexValue": "31",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3049:10:2"
												},
												"loopExpression": {
													"expression": {
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3076:3:2",
														"subExpression": {
															"id": 444,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "3076:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 446,
													"nodeType": "ExpressionStatement",
													"src": "3076:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3044:95:2"
											},
											{
												"expression": {
													"id": 461,
													"name": "stakes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "3155:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct StakingContract.Stake memory[] memory"
													}
												},
												"functionReturnParameters": 422,
												"id": 462,
												"nodeType": "Return",
												"src": "3148:13:2"
											}
										]
									},
									"functionSelector": "b0adfa09",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetStakingHistory",
									"nameLocation": "2920:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2937:2:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2960:14:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$176_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct StakingContract.Stake[]"
												},
												"typeName": {
													"baseType": {
														"id": 419,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 418,
															"name": "Stake",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 176,
															"src": "2960:5:2"
														},
														"referencedDeclaration": 176,
														"src": "2960:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$176_storage_ptr",
															"typeString": "struct StakingContract.Stake"
														}
													},
													"id": 420,
													"nodeType": "ArrayTypeName",
													"src": "2960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stake_$176_storage_$dyn_storage_ptr",
														"typeString": "struct StakingContract.Stake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2959:16:2"
									},
									"scope": 465,
									"src": "2911:257:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 466,
							"src": "386:4673:2",
							"usedErrors": []
						}
					],
					"src": "36:5023:2"
				},
				"id": 2
			}
		}
	}
}